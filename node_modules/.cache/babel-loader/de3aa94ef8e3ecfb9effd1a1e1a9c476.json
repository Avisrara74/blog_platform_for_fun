{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\react-router\\\\private-route.js\";\n\n/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signInUrl } from '../routes';\n\nconst PrivateRoute = props => {\n  const {\n    component: Component,\n    isAuthorized,\n    ...rest\n  } = props;\n  console.log(isAuthorized);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => fakeAuth.isAuthenticated ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/sign-in',\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default connect(state => ({\n  isAuthorized: state.userData.isAuthorized\n}), null)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/react-router/private-route.js"],"names":["React","Route","Redirect","connect","signInUrl","PrivateRoute","props","component","Component","isAuthorized","rest","console","log","location","fakeAuth","isAuthenticated","children","pathname","state","from","userData"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,YAAxB;AAAsC,OAAGC;AAAzC,MAAkDJ,KAAxD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AAGA,sBACE,oBAAC,KAAD,oBACMC,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KACNC,QAAQ,CAACC,eAAT,GACEC,QADF,gBAGE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,UADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEN;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAtBD;;AAwBA,eAAeV,OAAO,CAAEe,KAAD,KAAY;AACjCT,EAAAA,YAAY,EAAES,KAAK,CAACE,QAAN,CAAeX;AADI,CAAZ,CAAD,EAElB,IAFkB,CAAP,CAELJ,YAFK,CAAf","sourcesContent":["/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signInUrl } from '../routes';\n\nconst PrivateRoute = (props) => {\n  const { component: Component, isAuthorized, ...rest } = props;\n  console.log(isAuthorized);\n\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        fakeAuth.isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/sign-in',\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default connect((state) => ({\n  isAuthorized: state.userData.isAuthorized,\n}), null)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}