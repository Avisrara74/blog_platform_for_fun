{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\article\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport * as actions from '../../redux/actions';\nimport { getDate } from '../../helper';\nimport { connect } from 'react-redux';\nimport { ArtickesLikeImg, ArticlesDate, ArticlesDescription, ArticlesHeader, ArticlesInfo, ArticlesItem, ArticlesLikesCount, ArticlesStats, ArticlesTag, ArticlesTagsWrap, articlesTitle, ArticlesUserImage, ArticlesUserInfo, ArticlesUserInfoGroup, ArticlesUsername, ArticleAuthorOptions, ArticleDeleteButton, ArticleEditButton, ArticlesUserInfoWrap } from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport disabledLikeSrc from \"../../images/like-disabled.svg\";\nimport activeLikeSrc from \"../../images/like-active.svg\";\n\nconst mapStateToProps = state => {\n  const {\n    articles,\n    userData,\n    oneArticle,\n    oneArticleState\n  } = state;\n  console.log(state);\n  return {\n    articles,\n    username: userData.username,\n    isOneArticleReady: oneArticleState === 'finished',\n    oneArticle\n  };\n};\n\nconst actionCreator = {\n  getOneArticle: actions.getOneArticle\n};\n\nconst Article = props => {\n  const {\n    articles,\n    username,\n    getOneArticle,\n    oneArticle,\n    isOneArticleReady\n  } = props;\n  const {\n    slug\n  } = useParams();\n  const validSlug = slug.slice(1, slug.length);\n  useEffect(() => {\n    if (articles.length === 0) {\n      console.log('xd');\n      getOneArticle(validSlug);\n    }\n  }, []);\n\n  const renderArticle = article => {\n    /*const currentArticle = articles.find((el) => el.slug === validSlug);\n     const { author, createdAt, description, favoritesCount, favorited, id, tagList, title } = currentArticle;\n    const isCurrentUserAuthor = (username === author.username);\n     const dateDiff = getDate(createdAt);\n     const renderTagList = () => (\n      tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n    );\n     const renderAuthorOptions = () => {\n      if (!isCurrentUserAuthor) return false;\n      return (\n        <ArticleAuthorOptions>\n          <ArticleDeleteButton>test</ArticleDeleteButton>\n          <ArticleEditButton>test</ArticleEditButton>\n        </ArticleAuthorOptions>\n      );\n    };*/\n    return /*#__PURE__*/React.createElement(ArticlesItem, {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return articles.length === 0 ? renderArticle(oneArticle) : renderArticle(articles);\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/article/index.js"],"names":["React","useEffect","Link","useParams","actions","getDate","connect","ArtickesLikeImg","ArticlesDate","ArticlesDescription","ArticlesHeader","ArticlesInfo","ArticlesItem","ArticlesLikesCount","ArticlesStats","ArticlesTag","ArticlesTagsWrap","articlesTitle","ArticlesUserImage","ArticlesUserInfo","ArticlesUserInfoGroup","ArticlesUsername","ArticleAuthorOptions","ArticleDeleteButton","ArticleEditButton","ArticlesUserInfoWrap","articleUrl","mapStateToProps","state","articles","userData","oneArticle","oneArticleState","console","log","username","isOneArticleReady","actionCreator","getOneArticle","Article","props","slug","validSlug","slice","length","renderArticle","article","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,eADF,EACmBC,YADnB,EACiCC,mBADjC,EAEEC,cAFF,EAGEC,YAHF,EAGgBC,YAHhB,EAG8BC,kBAH9B,EAIEC,aAJF,EAIiBC,WAJjB,EAI8BC,gBAJ9B,EAKEC,aALF,EAKiBC,iBALjB,EAKoCC,gBALpC,EAKsDC,qBALtD,EAK6EC,gBAL7E,EAMEC,oBANF,EAMwBC,mBANxB,EAM6CC,iBAN7C,EAMgEC,oBANhE,QAOO,yBAPP;AAQA,SAASC,UAAT,QAA2B,cAA3B;;;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA;AAAlC,MAAsDJ,KAA5D;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA,SAAO;AACLC,IAAAA,QADK;AAELM,IAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAFd;AAGLC,IAAAA,iBAAiB,EAAGJ,eAAe,KAAK,UAHnC;AAILD,IAAAA;AAJK,GAAP;AAMD,CAVD;;AAYA,MAAMM,aAAa,GAAG;AACpBC,EAAAA,aAAa,EAAElC,OAAO,CAACkC;AADH,CAAtB;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEX,IAAAA,QAAF;AAAYM,IAAAA,QAAZ;AAAsBG,IAAAA,aAAtB;AAAqCP,IAAAA,UAArC;AAAiDK,IAAAA;AAAjD,MAAsEI,KAA5E;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWtC,SAAS,EAA1B;AACA,QAAMuC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcF,IAAI,CAACG,MAAnB,CAAlB;AAGA3C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,QAAQ,CAACe,MAAT,KAAoB,CAAxB,EAA2B;AACzBX,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAI,MAAAA,aAAa,CAACI,SAAD,CAAb;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAQA,QAAMG,aAAa,GAAIC,OAAD,IAAa;AAEjC;;;;;;;;;;;;;;;;AAqBA,wBACE,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAmCD,GA1DD;;AA6DA,SAAQlB,QAAQ,CAACe,MAAT,KAAoB,CAArB,GAA0BC,aAAa,CAACd,UAAD,CAAvC,GAAsDc,aAAa,CAAChB,QAAD,CAA1E;AACD,CA5ED;;AA8EA,eAAevB,OAAO,CAACqB,eAAD,EAAkBU,aAAlB,CAAP,CAAwCE,OAAxC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport * as actions from '../../redux/actions';\nimport { getDate } from '../../helper';\nimport { connect } from 'react-redux';\nimport {\n  ArtickesLikeImg, ArticlesDate, ArticlesDescription,\n  ArticlesHeader,\n  ArticlesInfo, ArticlesItem, ArticlesLikesCount,\n  ArticlesStats, ArticlesTag, ArticlesTagsWrap,\n  articlesTitle, ArticlesUserImage, ArticlesUserInfo, ArticlesUserInfoGroup, ArticlesUsername,\n  ArticleAuthorOptions, ArticleDeleteButton, ArticleEditButton, ArticlesUserInfoWrap\n} from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport disabledLikeSrc from '../../images/like-disabled.svg';\nimport activeLikeSrc from '../../images/like-active.svg';\n\nconst mapStateToProps = (state) => {\n  const { articles, userData, oneArticle, oneArticleState } = state;\n  console.log(state);\n\n  return {\n    articles,\n    username: userData.username,\n    isOneArticleReady: (oneArticleState === 'finished'),\n    oneArticle,\n  };\n}\n\nconst actionCreator = {\n  getOneArticle: actions.getOneArticle,\n}\n\n\nconst Article = (props) => {\n  const { articles, username, getOneArticle, oneArticle, isOneArticleReady} = props;\n  const { slug } = useParams();\n  const validSlug = slug.slice(1, slug.length);\n\n\n  useEffect(() => {\n    if (articles.length === 0) {\n      console.log('xd');\n      getOneArticle(validSlug);\n    }\n  }, []);\n\n\n  const renderArticle = (article) => {\n\n    /*const currentArticle = articles.find((el) => el.slug === validSlug);\n\n    const { author, createdAt, description, favoritesCount, favorited, id, tagList, title } = currentArticle;\n    const isCurrentUserAuthor = (username === author.username);\n\n    const dateDiff = getDate(createdAt);\n\n    const renderTagList = () => (\n      tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n    );\n\n    const renderAuthorOptions = () => {\n      if (!isCurrentUserAuthor) return false;\n      return (\n        <ArticleAuthorOptions>\n          <ArticleDeleteButton>test</ArticleDeleteButton>\n          <ArticleEditButton>test</ArticleEditButton>\n        </ArticleAuthorOptions>\n      );\n    };*/\n\n    return (\n      <ArticlesItem key={id}>\n       {/* <ArticlesInfo>\n          <ArticlesHeader>\n            <Link style={articlesTitle} to={articleUrl(slug)}>\n              {title}\n            </Link>\n            <ArticlesStats>\n              <ArtickesLikeImg src={favorited ? activeLikeSrc : disabledLikeSrc} />\n              <ArticlesLikesCount>{favoritesCount}</ArticlesLikesCount>\n            </ArticlesStats>\n          </ArticlesHeader>\n          <ArticlesTagsWrap>\n            {renderTagList()}\n          </ArticlesTagsWrap>\n\n          <ArticlesDescription>\n            {description}\n          </ArticlesDescription>\n        </ArticlesInfo>\n\n        <ArticlesUserInfoWrap>\n          <ArticlesUserInfo>\n            <ArticlesUserInfoGroup>\n              <ArticlesUsername>{author.username}</ArticlesUsername>\n              <ArticlesDate>{dateDiff}</ArticlesDate>\n            </ArticlesUserInfoGroup>\n            <ArticlesUserImage src={author.image} />\n          </ArticlesUserInfo>\n          {renderAuthorOptions()}\n        </ArticlesUserInfoWrap>\n\n*/}\n      </ArticlesItem>\n    );\n  }\n\n\n  return (articles.length === 0) ? renderArticle(oneArticle) : renderArticle(articles);\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);\n"]},"metadata":{},"sourceType":"module"}