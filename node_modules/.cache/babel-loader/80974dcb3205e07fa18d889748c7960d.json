{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\edit-profile\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport styled from 'styled-components';\nconst SignInWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Form = styled.form`\n  max-width: 384px;\n`;\nconst FormTitle = styled.div`\n  text-align: center;\n  color: #262626;\n  font-size: 20px;\n  margin: 0 0 16px 0;\n  font-weight: 500;\n`;\nconst FormItem = styled.label`\n  color: #262626;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0 0 16px 0;\n  display: flex;\n  flex-direction: column;\n  \n  &:last-of-type {\n    margin-bottom: 8px;\n  }\n`;\nconst SignInLink = styled.div`\n  color: #8C8C8C;\n  font-size: 12px;\n  text-align: center;\n`;\nconst FormItemError = styled.div`\n  color: #F5222D;\n  font-size: 14px;\n`;\nconst submitButtonStyles = {\n  height: 40\n};\nconst CheckboxWrap = styled.div`\n  border-top: 1px solid #E8E8E8;\n  padding-top: 8px;\n  display: flex;\n  flex-direction: row;\n`;\nconst CheckboxTitle = styled.label`\n  margin: 0 0 0 8px;\n`;\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  newPassword: '',\n  avatarUrl: ''\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Username',\n  name: 'login',\n  placeholder: 'Username'\n}, {\n  id: uniqueId(),\n  title: 'Email address',\n  name: 'email',\n  placeholder: 'Email'\n}, {\n  id: uniqueId(),\n  title: 'New Password',\n  name: 'newPassword',\n  placeholder: 'New Password'\n}, {\n  id: uniqueId(),\n  title: 'Avatar image (url)',\n  name: 'avatarUrl',\n  placeholder: 'url'\n}];\nconst formikValidationSchema = Yup.object({\n  login: Yup.string().max(30, 'Your username should be no more than 30 characters!').required('required'),\n  email: Yup.string().email('Invalid email').required('required'),\n  newPassword: Yup.string().min(8, 'Your password need to be at least 6 characters.').max(50, 'Your password should be no more than 50 characters.').matches(/^[A-Za-z0-9]+$/, 'Password can be only with latin symbols and numbers').matches(/(?=.*[0-9])/, 'Your password need to be at least 1 number').matches(/(?=.*[A-Z])/, 'Your password need to be at least 1 uppercase symbol').required('required'),\n  avatarUrl: Yup.string().url('Not correct url').required('required')\n});\n\nconst mapStateToProps = state => {\n  const {\n    signUpState\n  } = state;\n  const isInputsDisable = signUpState === 'requested';\n  const props = {\n    isInputsDisable,\n    signUpState\n  };\n  return props;\n};\n\nconst actionCreators = {\n  signUp: actions.signUp\n};\n\nconst EditProfile = props => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnSignUp();\n    }\n  });\n\n  const handleOnSignUp = async () => {\n    const {\n      signUp\n    } = props;\n    const {\n      login,\n      email,\n      password\n    } = formik.values;\n    const newUser = {\n      user: {\n        username: login,\n        email,\n        password\n      }\n    };\n    signUp(newUser);\n    formik.resetForm();\n  };\n\n  const {\n    isInputsDisable\n  } = props;\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.name === 'password' ? 'password' : 'text',\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), formik.touched[formItem.name] && formik.errors[formItem.name] ? /*#__PURE__*/React.createElement(FormItemError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, formik.errors[formItem.name]) : null));\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, \"Edit Profile\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    disabled: isInputsDisable,\n    style: submitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n};\n\nEditProfile.propTypes = {\n  isInputsDisable: propTypes.bool\n};\nEditProfile.defaultProps = {\n  isInputsDisable: false\n};\nexport default connect(mapStateToProps, actionCreators)(EditProfile);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/edit-profile/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","Checkbox","propTypes","Yup","Link","actions","styled","SignInWrapper","div","Form","form","FormTitle","FormItem","label","SignInLink","FormItemError","submitButtonStyles","height","CheckboxWrap","CheckboxTitle","formikInicialValues","login","email","newPassword","avatarUrl","formItems","id","title","name","placeholder","formikValidationSchema","object","string","max","required","min","matches","url","mapStateToProps","state","signUpState","isInputsDisable","props","actionCreators","signUp","EditProfile","formik","initialValues","validationSchema","onSubmit","handleOnSignUp","password","values","newUser","user","username","resetForm","renderInputs","map","formItem","handleChange","touched","errors","handleSubmit","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport styled from 'styled-components';\n\nconst SignInWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Form = styled.form`\n  max-width: 384px;\n`;\n\nconst FormTitle = styled.div`\n  text-align: center;\n  color: #262626;\n  font-size: 20px;\n  margin: 0 0 16px 0;\n  font-weight: 500;\n`;\n\nconst FormItem = styled.label`\n  color: #262626;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0 0 16px 0;\n  display: flex;\n  flex-direction: column;\n  \n  &:last-of-type {\n    margin-bottom: 8px;\n  }\n`;\n\nconst SignInLink = styled.div`\n  color: #8C8C8C;\n  font-size: 12px;\n  text-align: center;\n`;\n\nconst FormItemError = styled.div`\n  color: #F5222D;\n  font-size: 14px;\n`;\n\nconst submitButtonStyles = {\n  height: 40,\n}\n\nconst CheckboxWrap = styled.div`\n  border-top: 1px solid #E8E8E8;\n  padding-top: 8px;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst CheckboxTitle = styled.label`\n  margin: 0 0 0 8px;\n`\n\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  newPassword: '',\n  avatarUrl: '',\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Username', name: 'login', placeholder: 'Username',\n  },\n  {\n    id: uniqueId(), title: 'Email address', name: 'email', placeholder: 'Email',\n  },\n  {\n    id: uniqueId(), title: 'New Password', name: 'newPassword', placeholder: 'New Password',\n  },\n  {\n    id: uniqueId(), title: 'Avatar image (url)', name: 'avatarUrl', placeholder: 'url',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  login: Yup.string()\n    .max(30, 'Your username should be no more than 30 characters!')\n    .required('required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('required'),\n  newPassword: Yup.string()\n    .min(8, 'Your password need to be at least 6 characters.')\n    .max(50, 'Your password should be no more than 50 characters.')\n    .matches(/^[A-Za-z0-9]+$/, 'Password can be only with latin symbols and numbers')\n    .matches(/(?=.*[0-9])/, 'Your password need to be at least 1 number')\n    .matches(/(?=.*[A-Z])/, 'Your password need to be at least 1 uppercase symbol')\n    .required('required'),\n  avatarUrl: Yup.string()\n    .url('Not correct url')\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n  const { signUpState } = state;\n  const isInputsDisable = (signUpState === 'requested');\n\n  const props = { isInputsDisable, signUpState };\n  return props;\n};\n\nconst actionCreators = {\n  signUp: actions.signUp,\n};\n\nconst EditProfile = (props) => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnSignUp();\n    },\n  });\n  const handleOnSignUp = async () => {\n    const { signUp } = props;\n    const { login, email, password } = formik.values;\n    const newUser = {\n      user: {\n        username: login,\n        email,\n        password,\n      },\n    };\n    signUp(newUser);\n    formik.resetForm();\n  };\n\n  const { isInputsDisable } = props;\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={(formItem.name === 'password') ? 'password' : 'text'}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisable}\n        />\n        {formik.touched[formItem.name] && formik.errors[formItem.name] ? (\n          <FormItemError>{formik.errors[formItem.name]}</FormItemError>\n        ) : null}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <FormTitle>Edit Profile</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n          style={submitButtonStyles}\n        >\n          Save\n        </Button>\n      </FormItem>\n    </Form>\n  );\n};\n\nEditProfile.propTypes = {\n  isInputsDisable: propTypes.bool,\n};\n\nEditProfile.defaultProps = {\n  isInputsDisable: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(EditProfile);\n"]},"metadata":{},"sourceType":"module"}