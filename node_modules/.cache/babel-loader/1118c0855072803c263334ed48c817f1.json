{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\nconst userDataInitial = {\n  username: '',\n  token: '',\n  isAuthorized: false,\n  userProfileImage: undefined\n};\nexport const userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    };\n  },\n\n  [actions.editUserProfileSuccess](state, action) {\n    const {\n      username,\n      userProfileImage\n    } = action.payload;\n    removeItemFromLocalstorage('username');\n    setItemToLocalstorage('username', username);\n    removeItemFromLocalstorage('userProfileImage');\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return {\n      username,\n      userProfileImage\n    };\n  },\n\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  }\n\n}, userDataInitial);\nexport const articles = handleActions({\n  [actions.getArticlesProcess](state, action) {\n    return [...state, ...action.payload];\n  },\n\n  [actions.refreshLikeInArticlesArray](state, action) {},\n\n  [actions.createArticleSuccess]() {\n    return [];\n  },\n\n  [actions.editArticleSuccess]() {\n    return [];\n  }\n\n}, []);\nexport const oneArticle = handleActions({\n  [actions.getOneArticleSuccess](state, action) {\n    return { ...action.payload\n    };\n  }\n\n}, {});\nexport const likesStateOnServer = handleActions({\n  [actions.addLikeSuccess](state, action) {\n    const elAlreadyHave = state.some(el => el.id === action.payload.id);\n\n    if (elAlreadyHave) {\n      const newState = state.map(el => el.id === action.payload.id ? { ...el,\n        isFavorited: action.payload.isFavorited\n      } : el);\n      return [...newState];\n    }\n\n    return [...state, { ...action.payload\n    }];\n  }\n\n}, []);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/redux/reducers/dataReducers.js"],"names":["handleActions","actions","removeItemFromLocalstorage","setItemToLocalstorage","userDataInitial","username","token","isAuthorized","userProfileImage","undefined","userData","signInSuccess","state","action","payload","editUserProfileSuccess","logOutSuccess","articles","getArticlesProcess","refreshLikeInArticlesArray","createArticleSuccess","editArticleSuccess","oneArticle","getOneArticleSuccess","likesStateOnServer","addLikeSuccess","elAlreadyHave","some","el","id","newState","map","isFavorited"],"mappings":"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","sourcesContent":["import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\n\nconst userDataInitial = {\n  username: '', token: '', isAuthorized: false, userProfileImage: undefined,\n};\nexport const userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const {\n      username, token, isAuthorized, userProfileImage,\n    } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return {\n      username, token, isAuthorized, userProfileImage,\n    };\n  },\n  [actions.editUserProfileSuccess](state, action) {\n    const { username, userProfileImage } = action.payload;\n    removeItemFromLocalstorage('username');\n    setItemToLocalstorage('username', username);\n    removeItemFromLocalstorage('userProfileImage');\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return { username, userProfileImage };\n  },\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  },\n}, userDataInitial);\n\nexport const articles = handleActions({\n  [actions.getArticlesProcess](state, action) {\n    return [...state, ...action.payload];\n  },\n  [actions.refreshLikeInArticlesArray](state, action) {\n    \n  },\n  [actions.createArticleSuccess]() {\n    return [];\n  },\n  [actions.editArticleSuccess]() {\n    return [];\n  },\n}, []);\n\nexport const oneArticle = handleActions({\n  [actions.getOneArticleSuccess](state, action) {\n    return { ...action.payload };\n  },\n}, {});\n\nexport const likesStateOnServer = handleActions({\n  [actions.addLikeSuccess](state, action) {\n    const elAlreadyHave = state.some((el) => el.id === action.payload.id);\n    if (elAlreadyHave) {\n      const newState = state.map((el) => (\n        (el.id === action.payload.id) ? { ...el, isFavorited: action.payload.isFavorited } : el\n      ));\n      return [...newState];\n    }\n    return [...state, { ...action.payload }];\n  },\n}, []);\n"]},"metadata":{},"sourceType":"module"}