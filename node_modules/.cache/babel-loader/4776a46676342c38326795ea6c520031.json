{"ast":null,"code":"import React,{useEffect}from'react';import{connect}from'react-redux';import{useFormik}from'formik';import{Button,Input}from'antd';import{Link}from'react-router-dom';import{EyeInvisibleOutlined,EyeTwoTone}from'@ant-design/icons';import'antd/dist/antd.css';import{useHistory}from'react-router';import{FormItem,Form,FormTitle,FormSubmitButtonStyles,FormSignUpLink,FormSignInWrapper}from'../../styled-components';import{signIn as signInProcess}from'../../redux/actions/auth';import{signUpUrl,mainUrl}from'../../routes';import{renderErrorMessage}from'../../helper';var formikInitialValues={email:'',password:''};var mapStateToProps=function mapStateToProps(state){var signInState=state.signInState,userData=state.userData;var isAuthorized=userData.isAuthorized;var isInputsDisable=signInState==='requested';return{isInputsDisable:isInputsDisable,isAuthorized:isAuthorized};};var actionCreators={signIn:signInProcess};var SignIn=function SignIn(props){var isInputsDisable=props.isInputsDisable,signIn=props.signIn,isAuthorized=props.isAuthorized;var history=useHistory();var redirectToHome=function redirectToHome(){history.push(mainUrl);};var handleOnAuthorizationUser=function handleOnAuthorizationUser(formik){var _formik$values=formik.values,email=_formik$values.email,password=_formik$values.password;var userData={user:{email:email,password:password}};signIn(userData,formik);};var formik=useFormik({initialValues:formikInitialValues,onSubmit:function onSubmit(){handleOnAuthorizationUser(formik);}});useEffect(function(){if(isAuthorized)redirectToHome();},[isAuthorized]);return/*#__PURE__*/React.createElement(FormSignInWrapper,null,/*#__PURE__*/React.createElement(Form,{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(FormTitle,null,\"Sign In\"),/*#__PURE__*/React.createElement(FormItem,{htmlFor:\"email\"},\"Email address:\",/*#__PURE__*/React.createElement(Input,{placeholder:\"Email address\",id:\"email\",name:\"email\",onChange:formik.handleChange,value:formik.values.email,disabled:isInputsDisable}),renderErrorMessage(formik,'email')),/*#__PURE__*/React.createElement(FormItem,{htmlFor:\"password\"},\"Password:\",/*#__PURE__*/React.createElement(Input.Password,{id:\"password\",name:\"password\",placeholder:\"Password\",onChange:formik.handleChange,value:formik.values.password,iconRender:function iconRender(visible){return visible?/*#__PURE__*/React.createElement(EyeTwoTone,null):/*#__PURE__*/React.createElement(EyeInvisibleOutlined,null);},disabled:isInputsDisable}),renderErrorMessage(formik,'password')),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",className:\"form-submit\",onClick:formik.handleSubmit,style:FormSubmitButtonStyles,disabled:isInputsDisable},\"\\u0412\\u043E\\u0439\\u0442\\u0438\")),/*#__PURE__*/React.createElement(FormSignUpLink,null,/*#__PURE__*/React.createElement(\"span\",null,\"Don't have account?\"),/*#__PURE__*/React.createElement(Link,{to:signUpUrl},\" Sign Up.\"))));};SignIn.defaultProps={signIn:null,isInputsDisable:false,isAuthorized:false};export default connect(mapStateToProps,actionCreators)(SignIn);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/sign-in/index.js"],"names":["React","useEffect","connect","useFormik","Button","Input","Link","EyeInvisibleOutlined","EyeTwoTone","useHistory","FormItem","Form","FormTitle","FormSubmitButtonStyles","FormSignUpLink","FormSignInWrapper","signIn","signInProcess","signUpUrl","mainUrl","renderErrorMessage","formikInitialValues","email","password","mapStateToProps","state","signInState","userData","isAuthorized","isInputsDisable","actionCreators","SignIn","props","history","redirectToHome","push","handleOnAuthorizationUser","formik","values","user","initialValues","onSubmit","handleSubmit","handleChange","visible","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { useHistory } from 'react-router';\nimport {\n  FormItem,\n  Form,\n  FormTitle,\n  FormSubmitButtonStyles,\n  FormSignUpLink,\n  FormSignInWrapper,\n} from '../../styled-components';\nimport { signIn as signInProcess } from '../../redux/actions/auth';\nimport { signUpUrl, mainUrl } from '../../routes';\nimport { renderErrorMessage } from '../../helper';\n\nconst formikInitialValues = {\n  email: '',\n  password: '',\n};\n\nconst mapStateToProps = (state) => {\n  const { signInState, userData } = state;\n  const { isAuthorized } = userData;\n  const isInputsDisable = (signInState === 'requested');\n\n  return { isInputsDisable, isAuthorized };\n};\n\nconst actionCreators = {\n  signIn: signInProcess,\n};\n\nconst SignIn = (props) => {\n  const { isInputsDisable, signIn, isAuthorized } = props;\n\n  const history = useHistory();\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  const handleOnAuthorizationUser = (formik) => {\n    const { email, password } = formik.values;\n    const userData = {\n      user: {\n        email,\n        password,\n      },\n    };\n    signIn(userData, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInitialValues,\n    onSubmit: () => {\n      handleOnAuthorizationUser(formik);\n    },\n  });\n\n  useEffect(() => {\n    if (isAuthorized) redirectToHome();\n  }, [isAuthorized]);\n\n  return (\n    <FormSignInWrapper>\n      <Form onSubmit={formik.handleSubmit}>\n        <FormTitle>Sign In</FormTitle>\n        <FormItem htmlFor=\"email\">\n          Email address:\n          <Input\n            placeholder=\"Email address\"\n            id=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            disabled={isInputsDisable}\n          />\n          {renderErrorMessage(formik, 'email')}\n        </FormItem>\n\n        <FormItem htmlFor=\"password\">\n          Password:\n          <Input.Password\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n            disabled={isInputsDisable}\n          />\n          {renderErrorMessage(formik, 'password')}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"form-submit\"\n            onClick={formik.handleSubmit}\n            style={FormSubmitButtonStyles}\n            disabled={isInputsDisable}\n          >\n            Войти\n          </Button>\n        </FormItem>\n        <FormSignUpLink>\n          <span>Don&apos;t have account?</span>\n          <Link to={signUpUrl}> Sign Up.</Link>\n        </FormSignUpLink>\n      </Form>\n    </FormSignInWrapper>\n\n  );\n};\n\nSignIn.propTypes = {\n  signIn: propTypes.func,\n  isInputsDisable: propTypes.bool,\n  isAuthorized: propTypes.bool,\n};\n\nSignIn.defaultProps = {\n  signIn: null,\n  isInputsDisable: false,\n  isAuthorized: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SignIn);\n"]},"metadata":{},"sourceType":"module"}