{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\article\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport * as actions from '../../redux/actions';\nimport { getDate } from '../../helper';\nimport { connect } from 'react-redux';\nimport { ArtickesLikeImg, ArticlesDate, ArticlesDescription, ArticlesHeader, ArticlesInfo, ArticlesItem, ArticlesLikesCount, ArticlesStats, ArticlesTag, ArticlesTagsWrap, articlesTitle, ArticlesUserImage, ArticlesUserInfo, ArticlesUserInfoGroup, ArticlesUsername, ArticleAuthorOptions, ArticleDeleteButton, ArticleEditButton, ArticlesUserInfoWrap } from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport disabledLikeSrc from \"../../images/like-disabled.svg\";\nimport activeLikeSrc from \"../../images/like-active.svg\";\n\nconst mapStateToProps = state => {\n  const {\n    articles,\n    userData,\n    oneArticle,\n    oneArticleState\n  } = state;\n  console.log(state);\n  return {\n    articles,\n    username: userData.username,\n    isOneArticleReady: oneArticleState === 'finished',\n    oneArticle\n  };\n};\n\nconst actionCreator = {\n  getOneArticle: actions.getOneArticle\n};\n\nconst Article = props => {\n  const {\n    articles,\n    username,\n    getOneArticle,\n    oneArticle,\n    isOneArticleReady\n  } = props;\n  const {\n    slug\n  } = useParams();\n  useEffect(() => {\n    if (articles.length === 0) getOneArticle(slug);\n  });\n  const validSlug = slug.slice(1, slug.length);\n  const currentArticle = articles.find(article => article.slug === validSlug);\n  const {\n    author,\n    createdAt,\n    description,\n    favoritesCount,\n    favorited,\n    id,\n    tagList,\n    title\n  } = currentArticle;\n  const isCurrentUserAuthor = username === author.username;\n  const dateDiff = getDate(createdAt);\n\n  const renderTagList = () => tagList.map(tag => /*#__PURE__*/React.createElement(ArticlesTag, {\n    key: tag.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }\n  }, tag.title));\n\n  const renderAuthorOptions = () => {\n    if (!isCurrentUserAuthor) return false;\n    return /*#__PURE__*/React.createElement(ArticleAuthorOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArticleDeleteButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"test\"), /*#__PURE__*/React.createElement(ArticleEditButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"test\"));\n  };\n\n  return /*#__PURE__*/React.createElement(ArticlesItem, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ArticlesInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArticlesHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    style: articlesTitle,\n    to: articleUrl(slug),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(ArticlesStats, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArtickesLikeImg, {\n    src: favorited ? activeLikeSrc : disabledLikeSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ArticlesLikesCount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, favoritesCount))), /*#__PURE__*/React.createElement(ArticlesTagsWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, renderTagList()), /*#__PURE__*/React.createElement(ArticlesDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, description)), /*#__PURE__*/React.createElement(ArticlesUserInfoWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ArticlesUserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArticlesUserInfoGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArticlesUsername, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, author.username), /*#__PURE__*/React.createElement(ArticlesDate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, dateDiff)), /*#__PURE__*/React.createElement(ArticlesUserImage, {\n    src: author.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), renderAuthorOptions()));\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/article/index.js"],"names":["React","useEffect","Link","useParams","actions","getDate","connect","ArtickesLikeImg","ArticlesDate","ArticlesDescription","ArticlesHeader","ArticlesInfo","ArticlesItem","ArticlesLikesCount","ArticlesStats","ArticlesTag","ArticlesTagsWrap","articlesTitle","ArticlesUserImage","ArticlesUserInfo","ArticlesUserInfoGroup","ArticlesUsername","ArticleAuthorOptions","ArticleDeleteButton","ArticleEditButton","ArticlesUserInfoWrap","articleUrl","mapStateToProps","state","articles","userData","oneArticle","oneArticleState","console","log","username","isOneArticleReady","actionCreator","getOneArticle","Article","props","slug","length","validSlug","slice","currentArticle","find","article","author","createdAt","description","favoritesCount","favorited","id","tagList","title","isCurrentUserAuthor","dateDiff","renderTagList","map","tag","renderAuthorOptions","activeLikeSrc","disabledLikeSrc","image"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport * as actions from '../../redux/actions';\nimport { getDate } from '../../helper';\nimport { connect } from 'react-redux';\nimport {\n  ArtickesLikeImg, ArticlesDate, ArticlesDescription,\n  ArticlesHeader,\n  ArticlesInfo, ArticlesItem, ArticlesLikesCount,\n  ArticlesStats, ArticlesTag, ArticlesTagsWrap,\n  articlesTitle, ArticlesUserImage, ArticlesUserInfo, ArticlesUserInfoGroup, ArticlesUsername,\n  ArticleAuthorOptions, ArticleDeleteButton, ArticleEditButton, ArticlesUserInfoWrap\n} from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport disabledLikeSrc from '../../images/like-disabled.svg';\nimport activeLikeSrc from '../../images/like-active.svg';\n\nconst mapStateToProps = (state) => {\n  const { articles, userData, oneArticle, oneArticleState } = state;\n  console.log(state);\n\n  return {\n    articles,\n    username: userData.username,\n    isOneArticleReady: (oneArticleState === 'finished'),\n    oneArticle,\n  };\n}\n\nconst actionCreator = {\n  getOneArticle: actions.getOneArticle,\n}\n\n\nconst Article = (props) => {\n  const { articles, username, getOneArticle, oneArticle, isOneArticleReady} = props;\n  const { slug } = useParams();\n\n  useEffect(() => {\n    if (articles.length === 0) getOneArticle(slug);\n  })\n\n\n  const validSlug = slug.slice(1, slug.length);\n  const currentArticle = articles.find((article) => article.slug === validSlug);\n\n  const { author, createdAt, description, favoritesCount, favorited, id, tagList, title } = currentArticle;\n  const isCurrentUserAuthor = (username === author.username);\n\n  const dateDiff = getDate(createdAt);\n\n  const renderTagList = () => (\n    tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n  );\n\n  const renderAuthorOptions = () => {\n    if (!isCurrentUserAuthor) return false;\n    return (\n      <ArticleAuthorOptions>\n        <ArticleDeleteButton>test</ArticleDeleteButton>\n        <ArticleEditButton>test</ArticleEditButton>\n      </ArticleAuthorOptions>\n    );\n  };\n\n  return (\n    <ArticlesItem key={id}>\n      <ArticlesInfo>\n        <ArticlesHeader>\n          <Link style={articlesTitle} to={articleUrl(slug)}>\n            {title}\n          </Link>\n          <ArticlesStats>\n            <ArtickesLikeImg src={favorited ? activeLikeSrc : disabledLikeSrc} />\n            <ArticlesLikesCount>{favoritesCount}</ArticlesLikesCount>\n          </ArticlesStats>\n        </ArticlesHeader>\n        <ArticlesTagsWrap>\n          {renderTagList()}\n        </ArticlesTagsWrap>\n\n        <ArticlesDescription>\n          {description}\n        </ArticlesDescription>\n      </ArticlesInfo>\n\n      <ArticlesUserInfoWrap>\n        <ArticlesUserInfo>\n          <ArticlesUserInfoGroup>\n            <ArticlesUsername>{author.username}</ArticlesUsername>\n            <ArticlesDate>{dateDiff}</ArticlesDate>\n          </ArticlesUserInfoGroup>\n          <ArticlesUserImage src={author.image} />\n        </ArticlesUserInfo>\n        {renderAuthorOptions()}\n      </ArticlesUserInfoWrap>\n\n\n    </ArticlesItem>\n  );\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);\n"]},"metadata":{},"sourceType":"module"}