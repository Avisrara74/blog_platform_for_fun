{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\create-article\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport Markdown from 'react-textarea-markdown';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport { FormItem, FormArticle, FormTitle, FormItemTagsWrap, FormAddTagButton, FormRemoveTagButton, FormItemTagsTitle, FormItemTag } from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\nconst {\n  TextArea\n} = Input;\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%'\n};\nconst FormAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4\n};\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  text: '',\n  tagText: '',\n  tags: []\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Title',\n  name: 'title',\n  placeholder: 'Title',\n  type: 'text'\n}, {\n  id: uniqueId(),\n  title: 'Short description',\n  name: 'description',\n  placeholder: 'Description',\n  type: 'text'\n}];\nconst formikValidationSchema = Yup.object({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  text: Yup.string().required('required')\n});\n\nconst mapStateToProps = state => ({});\n\nconst actionCreators = {};\n\nconst CreateArticle = props => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {}\n  });\n\n  const handleOnAddTag = () => {\n    const {\n      tagText,\n      tags\n    } = formik.values;\n\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      value: tagText\n    };\n    const newTagsArray = [...tags, initialNewTag];\n    formik.setFieldValue('tags', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = id => () => {\n    const {\n      tags\n    } = formik.values;\n    const newTagsArray = tags.filter(tag => tag.id !== id);\n    formik.setFieldValue('tags', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const renderTags = () => {\n    const {\n      tags\n    } = formik.values;\n    if (tags.length === 0) return null;\n    return tags.map(tag => {\n      const {\n        id,\n        value\n      } = tag;\n      return /*#__PURE__*/React.createElement(FormItemTag, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        style: FormAddTagInputStyles,\n        onChange: formik.handleChange,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n        onClick: handleOnRemoveTag(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    });\n  };\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.type,\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  return /*#__PURE__*/React.createElement(FormArticle, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"Create new article\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    htmlFor: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"Text\", /*#__PURE__*/React.createElement(Markdown, {\n    textarea: \"true\",\n    name: \"text\",\n    id: \"text\",\n    placeholder: \"write article text\",\n    customWidth: [30, 70],\n    style: {\n      resize: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, 'text')), /*#__PURE__*/React.createElement(FormItemTagsWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemTagsTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Tags\"), renderTags(), /*#__PURE__*/React.createElement(FormItemTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"tagText\",\n    id: \"tagText\",\n    placeholder: \"write tag\",\n    style: FormAddTagInputStyles,\n    onChange: formik.handleChange,\n    value: formik.values.tagText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n    onClick: handleOnClearTagInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(FormAddTagButton, {\n    onClick: handleOnAddTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Add tag\"))), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    style: formSubmitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\n\nCreateArticle.propTypes = {};\nCreateArticle.defaultProps = {};\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/create-article/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","Markdown","propTypes","Yup","actions","FormItem","FormArticle","FormTitle","FormItemTagsWrap","FormAddTagButton","FormRemoveTagButton","FormItemTagsTitle","FormItemTag","renderErrorMessage","TextArea","formSubmitButtonStyles","height","maxWidth","width","FormAddTagInputStyles","borderRadius","formikInicialValues","title","description","text","tagText","tags","formItems","id","name","placeholder","type","formikValidationSchema","object","string","required","mapStateToProps","state","actionCreators","CreateArticle","props","formik","initialValues","validationSchema","onSubmit","handleOnAddTag","values","trim","length","setFieldValue","initialNewTag","value","newTagsArray","handleOnRemoveTag","filter","tag","handleOnClearTagInput","renderTags","map","handleChange","renderInputs","formItem","handleSubmit","resize","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport Markdown from 'react-textarea-markdown';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport {\n  FormItem,\n  FormArticle,\n  FormTitle,\n  FormItemTagsWrap,\n  FormAddTagButton,\n  FormRemoveTagButton,\n  FormItemTagsTitle,\n  FormItemTag,\n} from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\n\nconst { TextArea } = Input;\n\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%',\n};\n\nconst FormAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4,\n};\n\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  text: '',\n  tagText: '',\n  tags: [],\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Title', name: 'title', placeholder: 'Title', type: 'text',\n  },\n  {\n    id: uniqueId(), title: 'Short description', name: 'description', placeholder: 'Description', type: 'text',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  title: Yup.string()\n    .required('required'),\n  description: Yup.string()\n    .required('required'),\n  text: Yup.string()\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => ({});\n\nconst actionCreators = {\n\n};\n\nconst CreateArticle = (props) => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n\n    },\n  });\n\n  const handleOnAddTag = () => {\n    const { tagText, tags } = formik.values;\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      value: tagText,\n    };\n\n    const newTagsArray = [...tags, initialNewTag];\n    formik.setFieldValue('tags', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = (id) => () => {\n    const { tags } = formik.values;\n\n    const newTagsArray = tags.filter((tag) => tag.id !== id);\n\n    formik.setFieldValue('tags', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const renderTags = () => {\n    const { tags } = formik.values;\n    if (tags.length === 0) return null;\n\n    return tags.map((tag) => {\n      const { id, value } = tag;\n\n      return (\n        <FormItemTag key={id}>\n          <Input\n            style={FormAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={value}\n          />\n          <FormRemoveTagButton onClick={handleOnRemoveTag(id)}>Delete</FormRemoveTagButton>\n        </FormItemTag>\n      );\n    });\n  };\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={formItem.type}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <FormArticle onSubmit={formik.handleSubmit}>\n      <FormTitle>Create new article</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem htmlFor=\"text\">\n        Text\n        <Markdown\n          textarea=\"true\"\n          name=\"text\"\n          id=\"text\"\n          placeholder=\"write article text\"\n          customWidth={[30, 70]}\n          style={{ resize: 'none' }}\n        />\n        {renderErrorMessage(formik, 'text')}\n      </FormItem>\n\n      <FormItemTagsWrap>\n        <FormItemTagsTitle>Tags</FormItemTagsTitle>\n        {renderTags()}\n        <FormItemTag>\n          <Input\n            name=\"tagText\"\n            id=\"tagText\"\n            placeholder=\"write tag\"\n            style={FormAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={formik.values.tagText}\n          />\n          <FormRemoveTagButton onClick={handleOnClearTagInput}>Delete</FormRemoveTagButton>\n          <FormAddTagButton onClick={handleOnAddTag}>Add tag</FormAddTagButton>\n        </FormItemTag>\n      </FormItemTagsWrap>\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          style={formSubmitButtonStyles}\n        >\n          Send\n        </Button>\n      </FormItem>\n    </FormArticle>\n  );\n};\n\nCreateArticle.propTypes = {\n\n};\n\nCreateArticle.defaultProps = {\n\n};\n\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);\n"]},"metadata":{},"sourceType":"module"}