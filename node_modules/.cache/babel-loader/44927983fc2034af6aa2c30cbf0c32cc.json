{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\create-article\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport { FormItem, FormArticle, FormTitle, FormSubmitButtonStyles, FormItemTagsWrap, FormAddTagButton, FormRemoveTagButton, FormAddTagInputStyles, FormItemTagsTitle, FormItemTag } from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\nconst {\n  TextArea\n} = Input;\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  text: '',\n  tagText: '',\n  tags: []\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Title',\n  name: 'title',\n  placeholder: 'Title',\n  type: 'text'\n}, {\n  id: uniqueId(),\n  title: 'Short description',\n  name: 'description',\n  placeholder: 'Description',\n  type: 'text'\n}];\nconst formikValidationSchema = Yup.object({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  text: Yup.string().required('required')\n});\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst actionCreators = {\n  signUp: actions.signUp\n};\n\nconst CreateArticle = props => {\n  const handleOnCreateArticle = async formik => {};\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnCreateArticle(formik);\n    }\n  });\n\n  const handleOnAddTag = () => {\n    const {\n      tagText,\n      tags\n    } = formik.values;\n    const newTags = [...tags, tagText];\n    formik.setFieldValue('tags', newTags);\n    console.log(tags);\n  };\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.type,\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  return /*#__PURE__*/React.createElement(FormArticle, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Create new article\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    htmlFor: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Text\", /*#__PURE__*/React.createElement(TextArea, {\n    name: \"text\",\n    id: \"text\",\n    placeholder: \"write article text\",\n    rows: 6,\n    style: {\n      resize: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, 'text')), /*#__PURE__*/React.createElement(FormItemTagsWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemTagsTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(FormItemTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"tagText\",\n    id: \"tagText\",\n    placeholder: \"write tag\",\n    style: FormAddTagInputStyles,\n    onChange: formik.handleChange,\n    value: formik.values.tagText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(FormAddTagButton, {\n    onClick: handleOnAddTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Add tag\"))), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    style: FormSubmitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\n\nCreateArticle.propTypes = {};\nCreateArticle.defaultProps = {};\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/create-article/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","Checkbox","propTypes","Yup","actions","FormItem","FormArticle","FormTitle","FormSubmitButtonStyles","FormItemTagsWrap","FormAddTagButton","FormRemoveTagButton","FormAddTagInputStyles","FormItemTagsTitle","FormItemTag","renderErrorMessage","TextArea","formikInicialValues","title","description","text","tagText","tags","formItems","id","name","placeholder","type","formikValidationSchema","object","string","required","mapStateToProps","state","actionCreators","signUp","CreateArticle","props","handleOnCreateArticle","formik","initialValues","validationSchema","onSubmit","handleOnAddTag","values","newTags","setFieldValue","console","log","renderInputs","map","formItem","handleChange","handleSubmit","resize","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport {\n  FormItem,\n  FormArticle,\n  FormTitle,\n  FormSubmitButtonStyles,\n  FormItemTagsWrap,\n  FormAddTagButton,\n  FormRemoveTagButton,\n  FormAddTagInputStyles,\n  FormItemTagsTitle,\n  FormItemTag\n} from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\n\nconst { TextArea } = Input;\n\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  text: '',\n  tagText: '',\n  tags: [],\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Title', name: 'title', placeholder: 'Title', type: 'text',\n  },\n  {\n    id: uniqueId(), title: 'Short description', name: 'description', placeholder: 'Description', type: 'text',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  title: Yup.string()\n    .required('required'),\n  description: Yup.string()\n    .required('required'),\n  text: Yup.string()\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n  return {}\n};\n\nconst actionCreators = {\n  signUp: actions.signUp,\n};\n\nconst CreateArticle = (props) => {\n\n  const handleOnCreateArticle = async (formik) => {\n\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnCreateArticle(formik);\n    },\n  });\n\n  const handleOnAddTag = () => {\n    const { tagText, tags } = formik.values;\n\n    const newTags = [...tags, tagText];\n    formik.setFieldValue('tags', newTags);\n    console.log(tags);\n  }\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={formItem.type}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <FormArticle onSubmit={formik.handleSubmit}>\n      <FormTitle>Create new article</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem htmlFor=\"text\">\n        Text\n        <TextArea\n          name=\"text\"\n          id=\"text\"\n          placeholder=\"write article text\"\n          rows={6}\n          style={{ resize: 'none' }}\n        >\n\n        </TextArea>\n        {renderErrorMessage(formik, 'text')}\n      </FormItem>\n\n      <FormItemTagsWrap>\n        <FormItemTagsTitle>Tags</FormItemTagsTitle>\n        <FormItemTag>\n          <Input\n            name=\"tagText\"\n            id=\"tagText\"\n            placeholder=\"write tag\"\n            style={FormAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={formik.values.tagText}\n          />\n          <FormRemoveTagButton>Delete</FormRemoveTagButton>\n          <FormAddTagButton onClick={handleOnAddTag}>Add tag</FormAddTagButton>\n        </FormItemTag>\n      </FormItemTagsWrap>\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          style={FormSubmitButtonStyles}\n        >\n          Send\n        </Button>\n      </FormItem>\n    </FormArticle>\n  );\n};\n\nCreateArticle.propTypes = {\n\n};\n\nCreateArticle.defaultProps = {\n\n};\n\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);\n\n"]},"metadata":{},"sourceType":"module"}