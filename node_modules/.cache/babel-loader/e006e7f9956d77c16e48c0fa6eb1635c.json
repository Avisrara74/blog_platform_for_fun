{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\article\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ReactMarkdown from 'react-markdown';\nimport * as actions from '../../redux/actions';\nimport { articleUrl } from '../../routes';\nimport disabledLikeSrc from \"../../images/like-disabled.svg\";\nimport activeLikeSrc from \"../../images/like-active.svg\";\nimport defaultImgSrc from \"../../images/user-default-img.svg\";\nimport { renderLoader, getDate } from '../../helper';\nimport { ArtickesLikeImg, ArticlesDate, ArticlesDescription, ArticlesHeader, ArticlesInfo, ArticlesLikesCount, ArticlesStats, ArticlesTag, ArticlesTagsWrap, articlesTitle, ArticlesUserImage, ArticlesUserInfo, ArticlesUserInfoGroup, ArticlesUsername, ArticleAuthorOptions, ArticleDeleteButton, ArticleEditButton, ArticlesUserInfoWrap, ArticleWrapper, ArticleHeader, ArticleBody } from '../../styled-components';\n\nconst mapStateToProps = state => {\n  const {\n    articles,\n    userData,\n    oneArticle,\n    oneArticleState\n  } = state;\n  return {\n    articles,\n    username: userData.username,\n    isOneArticleReady: oneArticleState === 'finished',\n    oneArticle\n  };\n};\n\nconst actionCreator = {\n  getOneArticle: actions.getOneArticle\n};\n\nconst Article = props => {\n  const {\n    articles,\n    username,\n    getOneArticle,\n    oneArticle,\n    isOneArticleReady\n  } = props;\n  const {\n    slug\n  } = useParams();\n  const validSlug = slug.slice(1, slug.length);\n  useEffect(() => {\n    if (articles.length === 0) {\n      getOneArticle(validSlug);\n    }\n  }, []);\n\n  const renderArticle = data => {\n    let article; // если пользователь переходит по URL, то грузим нужный article с сервера\n\n    if (!Array.isArray(data)) {\n      if (!isOneArticleReady) return renderLoader();\n      article = data;\n    } // если по ссылке со списка артайклов, то берем из массива нужный\n\n\n    if (Array.isArray(data)) {\n      article = data.find(el => el.slug === validSlug);\n    }\n\n    const {\n      author,\n      createdAt,\n      description,\n      favoritesCount,\n      favorited,\n      tagList,\n      title,\n      body\n    } = article;\n    const isCurrentUserAuthor = username === author.username;\n    const dateDiff = getDate(createdAt);\n\n    const renderTagList = () => tagList.map(tag => /*#__PURE__*/React.createElement(ArticlesTag, {\n      key: tag.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }\n    }, tag.title));\n\n    const renderAuthorOptions = () => {\n      if (!isCurrentUserAuthor) return false;\n      return /*#__PURE__*/React.createElement(ArticleAuthorOptions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ArticleDeleteButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"test\"), /*#__PURE__*/React.createElement(ArticleEditButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"test\"));\n    };\n\n    return /*#__PURE__*/React.createElement(ArticleWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArticleHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      style: articlesTitle,\n      to: articleUrl(slug),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, title), /*#__PURE__*/React.createElement(ArticlesStats, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ArtickesLikeImg, {\n      onError: defaultImgSrc,\n      src: favorited ? activeLikeSrc : disabledLikeSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ArticlesLikesCount, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, favoritesCount))), /*#__PURE__*/React.createElement(ArticlesTagsWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, renderTagList()), /*#__PURE__*/React.createElement(ArticlesDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, description)), /*#__PURE__*/React.createElement(ArticlesUserInfoWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesUserInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesUserInfoGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesUsername, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, author.username), /*#__PURE__*/React.createElement(ArticlesDate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, dateDiff)), /*#__PURE__*/React.createElement(ArticlesUserImage, {\n      src: author.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    })), renderAuthorOptions())), /*#__PURE__*/React.createElement(ArticleBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n      sourse: body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return articles.length === 0 ? renderArticle(oneArticle) : renderArticle(articles);\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/article/index.js"],"names":["React","useEffect","Link","useParams","connect","ReactMarkdown","actions","articleUrl","renderLoader","getDate","ArtickesLikeImg","ArticlesDate","ArticlesDescription","ArticlesHeader","ArticlesInfo","ArticlesLikesCount","ArticlesStats","ArticlesTag","ArticlesTagsWrap","articlesTitle","ArticlesUserImage","ArticlesUserInfo","ArticlesUserInfoGroup","ArticlesUsername","ArticleAuthorOptions","ArticleDeleteButton","ArticleEditButton","ArticlesUserInfoWrap","ArticleWrapper","ArticleHeader","ArticleBody","mapStateToProps","state","articles","userData","oneArticle","oneArticleState","username","isOneArticleReady","actionCreator","getOneArticle","Article","props","slug","validSlug","slice","length","renderArticle","data","article","Array","isArray","find","el","author","createdAt","description","favoritesCount","favorited","tagList","title","body","isCurrentUserAuthor","dateDiff","renderTagList","map","tag","id","renderAuthorOptions","defaultImgSrc","activeLikeSrc","disabledLikeSrc","image"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ReactMarkdown from 'react-markdown';\nimport * as actions from '../../redux/actions';\nimport { articleUrl } from '../../routes';\nimport disabledLikeSrc from '../../images/like-disabled.svg';\nimport activeLikeSrc from '../../images/like-active.svg';\nimport defaultImgSrc from '../../images/user-default-img.svg';\nimport { renderLoader, getDate } from '../../helper';\nimport {\n  ArtickesLikeImg, ArticlesDate, ArticlesDescription,\n  ArticlesHeader,\n  ArticlesInfo, ArticlesLikesCount,\n  ArticlesStats, ArticlesTag, ArticlesTagsWrap,\n  articlesTitle, ArticlesUserImage, ArticlesUserInfo, ArticlesUserInfoGroup, ArticlesUsername,\n  ArticleAuthorOptions, ArticleDeleteButton, ArticleEditButton, ArticlesUserInfoWrap,\n  ArticleWrapper, ArticleHeader, ArticleBody,\n} from '../../styled-components';\n\nconst mapStateToProps = (state) => {\n  const {\n    articles, userData, oneArticle, oneArticleState,\n  } = state;\n\n  return {\n    articles,\n    username: userData.username,\n    isOneArticleReady: (oneArticleState === 'finished'),\n    oneArticle,\n  };\n};\n\nconst actionCreator = {\n  getOneArticle: actions.getOneArticle,\n};\n\nconst Article = (props) => {\n  const {\n    articles, username, getOneArticle, oneArticle, isOneArticleReady,\n  } = props;\n  const { slug } = useParams();\n  const validSlug = slug.slice(1, slug.length);\n\n  useEffect(() => {\n    if (articles.length === 0) {\n      getOneArticle(validSlug);\n    }\n  }, []);\n\n  const renderArticle = (data) => {\n    let article;\n\n    // если пользователь переходит по URL, то грузим нужный article с сервера\n    if (!Array.isArray(data)) {\n      if (!isOneArticleReady) return renderLoader();\n      article = data;\n    }\n\n    // если по ссылке со списка артайклов, то берем из массива нужный\n    if (Array.isArray(data)) {\n      article = data.find((el) => el.slug === validSlug);\n    }\n\n    const {\n      author, createdAt, description, favoritesCount, favorited, tagList, title, body,\n    } = article;\n    const isCurrentUserAuthor = (username === author.username);\n\n    const dateDiff = getDate(createdAt);\n\n    const renderTagList = () => (\n      tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n    );\n\n    const renderAuthorOptions = () => {\n      if (!isCurrentUserAuthor) return false;\n      return (\n        <ArticleAuthorOptions>\n          <ArticleDeleteButton>test</ArticleDeleteButton>\n          <ArticleEditButton>test</ArticleEditButton>\n        </ArticleAuthorOptions>\n      );\n    };\n\n    return (\n      <ArticleWrapper>\n        <ArticleHeader>\n          <ArticlesInfo>\n            <ArticlesHeader>\n              <Link style={articlesTitle} to={articleUrl(slug)}>\n                {title}\n              </Link>\n              <ArticlesStats>\n                <ArtickesLikeImg onError={defaultImgSrc} src={favorited ? activeLikeSrc : disabledLikeSrc} />\n                <ArticlesLikesCount>{favoritesCount}</ArticlesLikesCount>\n              </ArticlesStats>\n            </ArticlesHeader>\n            <ArticlesTagsWrap>\n              {renderTagList()}\n            </ArticlesTagsWrap>\n\n            <ArticlesDescription>\n              {description}\n            </ArticlesDescription>\n          </ArticlesInfo>\n\n          <ArticlesUserInfoWrap>\n            <ArticlesUserInfo>\n              <ArticlesUserInfoGroup>\n                <ArticlesUsername>{author.username}</ArticlesUsername>\n                <ArticlesDate>{dateDiff}</ArticlesDate>\n              </ArticlesUserInfoGroup>\n              <ArticlesUserImage src={author.image} />\n            </ArticlesUserInfo>\n            {renderAuthorOptions()}\n          </ArticlesUserInfoWrap>\n        </ArticleHeader>\n\n        <ArticleBody>\n          <ReactMarkdown\n            sourse={body}\n          />\n        </ArticleBody>\n      </ArticleWrapper>\n    );\n  };\n\n  return (articles.length === 0) ? renderArticle(oneArticle) : renderArticle(articles);\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);\n"]},"metadata":{},"sourceType":"module"}