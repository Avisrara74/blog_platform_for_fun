{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\edit-article\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useParams } from 'react-router-dom';\nimport { mainUrl } from '../../routes';\nimport { renderErrorMessage, renderLoader } from '../../helper';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport { FormItem, FormArticle, FormTitle, FormItemTagsWrap, FormAddTagButton, FormRemoveTagButton, FormItemTagsTitle, FormItemTag, ArticlesTag } from '../../styled-components';\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%'\n};\nconst formAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4\n};\nconst markdownStyles = {\n  flexGrow: 1\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Title',\n  name: 'title',\n  placeholder: 'Title',\n  type: 'text'\n}, {\n  id: uniqueId(),\n  title: 'Short description',\n  name: 'description',\n  placeholder: 'Description',\n  type: 'text'\n}];\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagText: '',\n  tagList: []\n};\nconst formikValidationSchema = Yup.object({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  body: Yup.string().required('required')\n});\n\nconst mapStateToProps = state => {\n  const {\n    userData,\n    oneArticle,\n    oneArticleState,\n    editArticleState\n  } = state;\n  return {\n    username: userData.username,\n    isOneArticleReady: oneArticleState === 'finished',\n    isArticleChanged: editArticleState === 'finished',\n    oneArticle\n  };\n};\n\nconst actionCreators = {\n  editArticle: actions.editArticle,\n  getOneArticle: actions.getOneArticle\n};\n\nconst EditArticle = props => {\n  const {\n    isArticleChanged,\n    username,\n    getOneArticle,\n    oneArticle,\n    isOneArticleReady\n  } = props;\n  const {\n    slug\n  } = useParams();\n  const queryParam = slug.slice(1, slug.length);\n\n  const handleOnEditArticle = async formik => {\n    const {\n      editArticle\n    } = props;\n    const {\n      title,\n      description,\n      body,\n      tagList\n    } = formik.values;\n    const tags = tagList.map(tag => tag.title);\n    const articleBody = {\n      article: {\n        title,\n        description,\n        body,\n        tagList: tags\n      }\n    };\n    editArticle(articleBody, queryParam, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnEditArticle(formik);\n    }\n  });\n\n  const setFormikValues = article => {\n    if (!isOneArticleReady) return false;\n    const {\n      author,\n      description,\n      tagList,\n      title,\n      body\n    } = article;\n    const isCurrentUserAuthor = username === author.username;\n    formik.setFieldValue('title', title);\n    formik.setFieldValue('description', description);\n    formik.setFieldValue('body', body);\n    formik.setFieldValue('tagList', tagList);\n  };\n\n  const history = useHistory();\n\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  useEffect(() => {\n    // запросить у сервера дату этого поста\n    if (!isOneArticleReady) getOneArticle(queryParam); // изменить данные поста\n\n    if (isOneArticleReady) setFormikValues(oneArticle); // редирект после изменения\n\n    if (isArticleChanged) {\n      redirectToHome();\n    }\n  }, [oneArticle, isArticleChanged]);\n\n  const handleOnAddTag = () => {\n    const {\n      tagText,\n      tagList\n    } = formik.values;\n\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      title: tagText\n    };\n    const newTagsArray = [...tagList, initialNewTag];\n    formik.setFieldValue('tagList', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = id => () => {\n    const {\n      tagList\n    } = formik.values;\n    const newTagsArray = tagList.filter(tag => tag.id !== id);\n    formik.setFieldValue('tagList', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const renderTags = () => {\n    const {\n      tagList\n    } = formik.values;\n    if (tagList.length === 0) return null;\n    return tagList.map(tag => {\n      const {\n        id,\n        title\n      } = tag;\n      return /*#__PURE__*/React.createElement(FormItemTag, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        style: formAddTagInputStyles,\n        onChange: formik.handleChange,\n        value: title,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n        onClick: handleOnRemoveTag(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    });\n  };\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.type,\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  const renderForm = () => /*#__PURE__*/React.createElement(FormArticle, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"Edit Article\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    htmlFor: \"body\",\n    style: markdownStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, \"Text\", /*#__PURE__*/React.createElement(Input.TextArea, {\n    name: \"body\",\n    id: \"body\",\n    onChange: formik.handleChange,\n    value: formik.values.body,\n    rows: 8,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, 'body')), /*#__PURE__*/React.createElement(FormItemTagsWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemTagsTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, \"Tags\"), renderTags(), /*#__PURE__*/React.createElement(FormItemTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"tagText\",\n    id: \"tagText\",\n    placeholder: \"write tag\",\n    style: formAddTagInputStyles,\n    onChange: formik.handleChange,\n    value: formik.values.tagText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n    onClick: handleOnClearTagInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(FormAddTagButton, {\n    onClick: handleOnAddTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, \"Add tag\"))), /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    style: formSubmitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n\n  return !isOneArticleReady ? renderLoader() : renderForm();\n};\n\nEditArticle.propTypes = {};\nEditArticle.defaultProps = {};\nexport default connect(mapStateToProps, actionCreators)(EditArticle);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/edit-article/index.js"],"names":["React","useEffect","uniqueId","connect","useFormik","useHistory","Button","Input","propTypes","Yup","useParams","mainUrl","renderErrorMessage","renderLoader","actions","FormItem","FormArticle","FormTitle","FormItemTagsWrap","FormAddTagButton","FormRemoveTagButton","FormItemTagsTitle","FormItemTag","ArticlesTag","formSubmitButtonStyles","height","maxWidth","width","formAddTagInputStyles","borderRadius","markdownStyles","flexGrow","formItems","id","title","name","placeholder","type","formikInicialValues","description","body","tagText","tagList","formikValidationSchema","object","string","required","mapStateToProps","state","userData","oneArticle","oneArticleState","editArticleState","username","isOneArticleReady","isArticleChanged","actionCreators","editArticle","getOneArticle","EditArticle","props","slug","queryParam","slice","length","handleOnEditArticle","formik","values","tags","map","tag","articleBody","article","initialValues","validationSchema","onSubmit","setFormikValues","author","isCurrentUserAuthor","setFieldValue","history","redirectToHome","push","handleOnAddTag","trim","initialNewTag","newTagsArray","handleOnRemoveTag","filter","handleOnClearTagInput","renderTags","handleChange","renderInputs","formItem","renderForm","handleSubmit","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useParams } from 'react-router-dom';\nimport { mainUrl } from '../../routes';\nimport { renderErrorMessage, renderLoader } from '../../helper';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\n\nimport {\n  FormItem,\n  FormArticle,\n  FormTitle,\n  FormItemTagsWrap,\n  FormAddTagButton,\n  FormRemoveTagButton,\n  FormItemTagsTitle,\n  FormItemTag, ArticlesTag,\n} from '../../styled-components';\n\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%',\n};\n\nconst formAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4,\n};\n\nconst markdownStyles = {\n  flexGrow: 1,\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Title', name: 'title', placeholder: 'Title', type: 'text',\n  },\n  {\n    id: uniqueId(), title: 'Short description', name: 'description', placeholder: 'Description', type: 'text',\n  },\n];\n\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagText: '',\n  tagList: [],\n};\n\nconst formikValidationSchema = Yup.object({\n  title: Yup.string()\n    .required('required'),\n  description: Yup.string()\n    .required('required'),\n  body: Yup.string()\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n  const {\n    userData, oneArticle, oneArticleState, editArticleState,\n  } = state;\n\n  return {\n    username: userData.username,\n    isOneArticleReady: oneArticleState === 'finished',\n    isArticleChanged: editArticleState === 'finished',\n    oneArticle,\n  };\n};\n\nconst actionCreators = {\n  editArticle: actions.editArticle,\n  getOneArticle: actions.getOneArticle,\n};\n\nconst EditArticle = (props) => {\n  const {\n    isArticleChanged, username, getOneArticle, oneArticle, isOneArticleReady,\n  } = props;\n  const { slug } = useParams();\n  const queryParam = slug.slice(1, slug.length);\n\n  const handleOnEditArticle = async (formik) => {\n    const { editArticle } = props;\n    const {\n      title, description, body, tagList,\n    } = formik.values;\n    const tags = tagList.map((tag) => tag.title);\n\n    const articleBody = {\n      article: {\n        title, description, body, tagList: tags,\n      },\n    };\n    editArticle(articleBody, queryParam, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnEditArticle(formik);\n    },\n  });\n\n  const setFormikValues = (article) => {\n    if (!isOneArticleReady) return false;\n\n    const {\n      author, description, tagList, title, body,\n    } = article;\n    const isCurrentUserAuthor = (username === author.username);\n    formik.setFieldValue('title', title);\n    formik.setFieldValue('description', description);\n    formik.setFieldValue('body', body);\n    formik.setFieldValue('tagList', tagList);\n  };\n\n  const history = useHistory();\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  useEffect(() => {\n    // запросить у сервера дату этого поста\n    if (!isOneArticleReady) getOneArticle(queryParam);\n\n    // изменить данные поста\n    if (isOneArticleReady) setFormikValues(oneArticle);\n\n    // редирект после изменения\n    if (isArticleChanged) {\n      redirectToHome();\n    }\n  }, [oneArticle, isArticleChanged]);\n\n  const handleOnAddTag = () => {\n    const { tagText, tagList } = formik.values;\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      title: tagText,\n    };\n\n    const newTagsArray = [...tagList, initialNewTag];\n    formik.setFieldValue('tagList', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = (id) => () => {\n    const { tagList } = formik.values;\n\n    const newTagsArray = tagList.filter((tag) => tag.id !== id);\n\n    formik.setFieldValue('tagList', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const renderTags = () => {\n    const { tagList } = formik.values;\n    if (tagList.length === 0) return null;\n\n    return tagList.map((tag) => {\n      const { id, title } = tag;\n\n      return (\n        <FormItemTag key={id}>\n          <Input\n            style={formAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={title}\n            disabled\n          />\n          <FormRemoveTagButton onClick={handleOnRemoveTag(id)}>Delete</FormRemoveTagButton>\n        </FormItemTag>\n      );\n    });\n  };\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={formItem.type}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  const renderForm = () => (\n    <FormArticle onSubmit={formik.handleSubmit}>\n      <FormTitle>Edit Article</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem htmlFor=\"body\" style={markdownStyles}>\n        Text\n        <Input.TextArea\n          name=\"body\"\n          id=\"body\"\n          onChange={formik.handleChange}\n          value={formik.values.body}\n          rows={8}\n          allowClear\n        />\n        {renderErrorMessage(formik, 'body')}\n      </FormItem>\n\n      <FormItemTagsWrap>\n        <FormItemTagsTitle>Tags</FormItemTagsTitle>\n        {renderTags()}\n        <FormItemTag>\n          <Input\n            name=\"tagText\"\n            id=\"tagText\"\n            placeholder=\"write tag\"\n            style={formAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={formik.values.tagText}\n          />\n          <FormRemoveTagButton onClick={handleOnClearTagInput}>Delete</FormRemoveTagButton>\n          <FormAddTagButton onClick={handleOnAddTag}>Add tag</FormAddTagButton>\n        </FormItemTag>\n      </FormItemTagsWrap>\n\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        onClick={formik.handleSubmit}\n        style={formSubmitButtonStyles}\n      >\n        Send\n      </Button>\n    </FormArticle>\n  );\n\n  return (!isOneArticleReady) ? renderLoader() : renderForm();\n};\n\nEditArticle.propTypes = {\n\n};\n\nEditArticle.defaultProps = {\n\n};\n\nexport default connect(mapStateToProps, actionCreators)(EditArticle);\n"]},"metadata":{},"sourceType":"module"}