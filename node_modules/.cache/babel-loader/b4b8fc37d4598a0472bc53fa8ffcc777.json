{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\nconst userDataInitial = {\n  username: '',\n  token: '',\n  isAuthorized: false,\n  userProfileImage: undefined\n};\nexport const userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    };\n  },\n\n  [actions.editUserProfileSuccess](state, action) {\n    const {\n      username,\n      userProfileImage\n    } = action.payload;\n    removeItemFromLocalstorage('username');\n    setItemToLocalstorage('username', username);\n    removeItemFromLocalstorage('userProfileImage');\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return {\n      username,\n      userProfileImage\n    };\n  },\n\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  }\n\n}, userDataInitial);\nexport const articles = handleActions({\n  [actions.getArticlesProcess](state, action) {\n    return [...state, ...action.payload];\n  },\n\n  [actions.createArticleSuccess]() {\n    return [];\n  }\n\n}, []);\nexport const oneArticle = handleActions({\n  [actions.getOneArticleSuccess](state, action) {\n    return { ...action.payload\n    };\n  }\n\n}, {});","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/redux/reducers/dataReducers.js"],"names":["handleActions","actions","removeItemFromLocalstorage","setItemToLocalstorage","userDataInitial","username","token","isAuthorized","userProfileImage","undefined","userData","signInSuccess","state","action","payload","editUserProfileSuccess","logOutSuccess","articles","getArticlesProcess","createArticleSuccess","oneArticle","getOneArticleSuccess"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,0BAAT,EAAqCC,qBAArC,QAAkE,oBAAlE;AAEA,MAAMC,eAAe,GAAG;AAAEC,EAAAA,QAAQ,EAAE,EAAZ;AAAgBC,EAAAA,KAAK,EAAE,EAAvB;AAA2BC,EAAAA,YAAY,EAAE,KAAzC;AAAgDC,EAAAA,gBAAgB,EAAEC;AAAlE,CAAxB;AACA,OAAO,MAAMC,QAAQ,GAAGV,aAAa,CAAC;AACpC,GAACC,OAAO,CAACU,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAM;AAAER,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,YAAnB;AAAiCC,MAAAA;AAAjC,QAAsDK,MAAM,CAACC,OAAnE;AACAX,IAAAA,qBAAqB,CAAC,OAAD,EAAUG,KAAV,CAArB;AACAH,IAAAA,qBAAqB,CAAC,UAAD,EAAaE,QAAb,CAArB;AACAF,IAAAA,qBAAqB,CAAC,kBAAD,EAAqBK,gBAArB,CAArB;AACA,WAAO;AAAEH,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,YAAnB;AAAiCC,MAAAA;AAAjC,KAAP;AACD,GAPmC;;AAQpC,GAACP,OAAO,CAACc,sBAAT,EAAiCH,KAAjC,EAAwCC,MAAxC,EAAgD;AAC9C,UAAM;AAAER,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,QAAiCK,MAAM,CAACC,OAA9C;AACAZ,IAAAA,0BAA0B,CAAC,UAAD,CAA1B;AACAC,IAAAA,qBAAqB,CAAC,UAAD,EAAaE,QAAb,CAArB;AACAH,IAAAA,0BAA0B,CAAC,kBAAD,CAA1B;AACAC,IAAAA,qBAAqB,CAAC,kBAAD,EAAqBK,gBAArB,CAArB;AACA,WAAO;AAAEH,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAAP;AACD,GAfmC;;AAgBpC,GAACP,OAAO,CAACe,aAAT,IAA0B;AACxBd,IAAAA,0BAA0B,CAAC,OAAD,CAA1B;AACAA,IAAAA,0BAA0B,CAAC,UAAD,CAA1B;AACA,WAAOE,eAAP;AACD;;AApBmC,CAAD,EAqBlCA,eArBkC,CAA9B;AAuBP,OAAO,MAAMa,QAAQ,GAAGjB,aAAa,CAAC;AACpC,GAACC,OAAO,CAACiB,kBAAT,EAA6BN,KAA7B,EAAoCC,MAApC,EAA4C;AAC1C,WAAO,CAAC,GAAGD,KAAJ,EAAW,GAAGC,MAAM,CAACC,OAArB,CAAP;AACD,GAHmC;;AAIpC,GAACb,OAAO,CAACkB,oBAAT,IAAiC;AAC/B,WAAO,EAAP;AACD;;AANmC,CAAD,EAOlC,EAPkC,CAA9B;AASP,OAAO,MAAMC,UAAU,GAAGpB,aAAa,CAAC;AACtC,GAACC,OAAO,CAACoB,oBAAT,EAA+BT,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,WAAO,EAAE,GAAGA,MAAM,CAACC;AAAZ,KAAP;AACD;;AAHqC,CAAD,EAIpC,EAJoC,CAAhC","sourcesContent":["import { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\n\nconst userDataInitial = { username: '', token: '', isAuthorized: false, userProfileImage: undefined };\nexport const userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const { username, token, isAuthorized, userProfileImage } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return { username, token, isAuthorized, userProfileImage };\n  },\n  [actions.editUserProfileSuccess](state, action) {\n    const { username, userProfileImage } = action.payload;\n    removeItemFromLocalstorage('username');\n    setItemToLocalstorage('username', username);\n    removeItemFromLocalstorage('userProfileImage');\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return { username, userProfileImage };\n  },\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  },\n}, userDataInitial);\n\nexport const articles = handleActions({\n  [actions.getArticlesProcess](state, action) {\n    return [...state, ...action.payload];\n  },\n  [actions.createArticleSuccess]() {\n    return [];\n  },\n}, []);\n\nexport const oneArticle = handleActions({\n  [actions.getOneArticleSuccess](state, action) {\n    return { ...action.payload };\n  },\n}, {});\n"]},"metadata":{},"sourceType":"module"}