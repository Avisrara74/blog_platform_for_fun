{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\articles-list\\\\article.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDate } from '../../helper';\nimport * as actions from '../../redux/actions';\nimport { ArtickesLikeImg, ArticlesDate, ArticlesDescription, ArticlesHeader, ArticlesInfo, ArticlesItem, ArticlesLikesCount, ArticlesStats, ArticlesTag, ArticlesTagsWrap, ArticlesHeaderTitle, ArticlesUserImage, ArticlesUserInfoWrap, ArticlesUserInfoGroup, ArticlesUsername } from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport activeLikeSrc from \"../../images/like-active.svg\";\nimport disabledLikeSrc from \"../../images/like-disabled.svg\";\nconst linkStyles = {\n  textDecoration: 'none',\n  color: 'rgba(0, 0, 0, 0.75)'\n};\n\nconst mapStateToProps = state => {\n  const {\n    likesStateOnServer,\n    addLikeRequestState\n  } = state;\n  const isLikeChangedOnServer = addLikeRequestState === 'finished';\n  console.log(state);\n  return {\n    likesStateOnServer,\n    isLikeChangedOnServer,\n    addLikeRequestState\n  };\n};\n\nconst actionCreator = {\n  addLike: actions.addLike\n};\n\nconst Article = props => {\n  const {\n    articles,\n    likesStateOnServer,\n    addLike,\n    addLikeRequestState\n  } = props;\n\n  const handleOnLikeArticle = async (event, articleLikeInfo) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const isCurrentLikeRequested = addLikeRequestState.some(el => el === articleLikeInfo.id);\n\n    if (isCurrentLikeRequested) {\n      const rejectRequest = { ...articleLikeInfo,\n        isAlreadyRequested: true\n      };\n      console.log('отправка запрещена');\n      await addLike(rejectRequest);\n    }\n\n    await addLike(articleLikeInfo);\n  };\n\n  const repeatChangeLikeRequest = () => {};\n\n  const renderArticle = () => articles.map(article => {\n    const {\n      author,\n      createdAt,\n      description,\n      id,\n      tagList,\n      title,\n      slug,\n      favorited,\n      favoritesCount\n    } = article;\n    const {\n      username,\n      image\n    } = author;\n    const dateDiff = getDate(createdAt);\n\n    const renderTagList = () => tagList.map(tag => /*#__PURE__*/React.createElement(ArticlesTag, {\n      key: tag.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }\n    }, tag.title));\n\n    const isLiked = favorited ? activeLikeSrc : disabledLikeSrc;\n    const articleLikeInfo = {\n      id,\n      favorited,\n      slug,\n      isAlreadyRequested: false\n    };\n    /*\n    1) пользователь нажимает на фейк-лайк\n    2) отправляется запрос на сервер с измененным фейк-состоянием\n       если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n    3) приходит ответ с изменённым состоянием\n       после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n       если да, то оставляем всё как есть\n       если нет, то снова отправляем запрос на сервер\n      */\n\n    return /*#__PURE__*/React.createElement(Link, {\n      to: articleUrl(slug),\n      style: linkStyles,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesHeaderTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, title), /*#__PURE__*/React.createElement(ArticlesStats, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ArtickesLikeImg, {\n      onClick: event => handleOnLikeArticle(event, articleLikeInfo),\n      src: isLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ArticlesLikesCount, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, favoritesCount))), /*#__PURE__*/React.createElement(ArticlesTagsWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, renderTagList()), /*#__PURE__*/React.createElement(ArticlesDescription, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, description)), /*#__PURE__*/React.createElement(ArticlesUserInfoWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesUserInfoGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ArticlesUsername, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, username), /*#__PURE__*/React.createElement(ArticlesDate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, dateDiff)), /*#__PURE__*/React.createElement(ArticlesUserImage, {\n      src: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }))));\n  });\n\n  return renderArticle();\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/articles-list/article.js"],"names":["React","useEffect","useState","connect","Link","getDate","actions","ArtickesLikeImg","ArticlesDate","ArticlesDescription","ArticlesHeader","ArticlesInfo","ArticlesItem","ArticlesLikesCount","ArticlesStats","ArticlesTag","ArticlesTagsWrap","ArticlesHeaderTitle","ArticlesUserImage","ArticlesUserInfoWrap","ArticlesUserInfoGroup","ArticlesUsername","articleUrl","linkStyles","textDecoration","color","mapStateToProps","state","likesStateOnServer","addLikeRequestState","isLikeChangedOnServer","console","log","actionCreator","addLike","Article","props","articles","handleOnLikeArticle","event","articleLikeInfo","preventDefault","stopPropagation","isCurrentLikeRequested","some","el","id","rejectRequest","isAlreadyRequested","repeatChangeLikeRequest","renderArticle","map","article","author","createdAt","description","tagList","title","slug","favorited","favoritesCount","username","image","dateDiff","renderTagList","tag","isLiked","activeLikeSrc","disabledLikeSrc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDate } from '../../helper';\nimport * as actions from '../../redux/actions';\nimport {\n  ArtickesLikeImg, ArticlesDate, ArticlesDescription,\n  ArticlesHeader,\n  ArticlesInfo, ArticlesItem, ArticlesLikesCount,\n  ArticlesStats,\n  ArticlesTag, ArticlesTagsWrap,\n  ArticlesHeaderTitle, ArticlesUserImage,\n  ArticlesUserInfoWrap, ArticlesUserInfoGroup, ArticlesUsername,\n} from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport activeLikeSrc from '../../images/like-active.svg';\nimport disabledLikeSrc from '../../images/like-disabled.svg';\n\nconst linkStyles = {\n  textDecoration: 'none',\n  color: 'rgba(0, 0, 0, 0.75)',\n};\nconst mapStateToProps = (state) => {\n  const { likesStateOnServer, addLikeRequestState } = state;\n\n  const isLikeChangedOnServer = addLikeRequestState === 'finished';\n\n  console.log(state);\n  return { likesStateOnServer, isLikeChangedOnServer, addLikeRequestState };\n};\n\nconst actionCreator = {\n  addLike: actions.addLike,\n};\n\nconst Article = (props) => {\n  const {\n    articles, likesStateOnServer,\n    addLike, addLikeRequestState,\n  } = props;\n\n  const handleOnLikeArticle = async (event, articleLikeInfo) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const isCurrentLikeRequested = addLikeRequestState.some((el) => el === articleLikeInfo.id);\n    if (isCurrentLikeRequested) {\n      const rejectRequest = { ...articleLikeInfo, isAlreadyRequested: true };\n      console.log('отправка запрещена');\n      await addLike(rejectRequest);\n    }\n\n    await addLike(articleLikeInfo);\n  };\n\n  const repeatChangeLikeRequest = () => {\n    \n  }\n\n  const renderArticle = () => articles.map((article) => {\n    const {\n      author, createdAt, description, id, tagList, title, slug, favorited, favoritesCount\n    } = article;\n    const { username, image } = author;\n    const dateDiff = getDate(createdAt);\n\n    const renderTagList = () => (\n      tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n    );\n\n    const isLiked = favorited ? activeLikeSrc : disabledLikeSrc;\n\n    const articleLikeInfo = {\n      id,\n      favorited,\n      slug,\n      isAlreadyRequested: false,\n    };\n\n    /*\n    1) пользователь нажимает на фейк-лайк\n    2) отправляется запрос на сервер с измененным фейк-состоянием\n       если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n    3) приходит ответ с изменённым состоянием\n       после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n       если да, то оставляем всё как есть\n       если нет, то снова отправляем запрос на сервер\n      */\n\n    return (\n      <Link to={articleUrl(slug)} style={linkStyles} key={id}>\n        <ArticlesItem>\n          <ArticlesInfo>\n            <ArticlesHeader>\n              <ArticlesHeaderTitle>\n                {title}\n              </ArticlesHeaderTitle>\n              <ArticlesStats>\n                <ArtickesLikeImg\n                  onClick={(event) => handleOnLikeArticle(event, articleLikeInfo)}\n                  src={isLiked}\n                />\n                <ArticlesLikesCount>{favoritesCount}</ArticlesLikesCount>\n              </ArticlesStats>\n            </ArticlesHeader>\n            <ArticlesTagsWrap>\n              {renderTagList()}\n            </ArticlesTagsWrap>\n\n            <ArticlesDescription>\n              {description}\n            </ArticlesDescription>\n          </ArticlesInfo>\n\n          <ArticlesUserInfoWrap>\n            <ArticlesUserInfoGroup>\n              <ArticlesUsername>{username}</ArticlesUsername>\n              <ArticlesDate>{dateDiff}</ArticlesDate>\n            </ArticlesUserInfoGroup>\n            <ArticlesUserImage src={image} />\n          </ArticlesUserInfoWrap>\n        </ArticlesItem>\n      </Link>\n    );\n  });\n\n  return renderArticle();\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);\n"]},"metadata":{},"sourceType":"module"}