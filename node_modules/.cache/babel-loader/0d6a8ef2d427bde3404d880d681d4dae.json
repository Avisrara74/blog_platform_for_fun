{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\sign-in\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { useHistory } from 'react-router';\nimport { FormItem, Form, FormTitle, FormSubmitButtonStyles, FormSignUpLink, FormSignInWrapper } from '../../styled-components';\nimport * as actions from '../../redux/actions';\nimport { signUpUrl, mainUrl } from '../../routes';\nimport { renderErrorMessage } from '../../helper';\nconst formikInitialValues = {\n  email: '',\n  password: ''\n};\n\nconst mapStateToProps = state => {\n  const {\n    signInState,\n    userData\n  } = state;\n  const {\n    isAuthorized\n  } = userData;\n  const isInputsDisable = signInState === 'requested';\n  return {\n    isInputsDisable,\n    isAuthorized\n  };\n};\n\nconst actionCreators = {\n  signIn: actions.signIn\n};\n\nconst SignIn = props => {\n  const {\n    isInputsDisable,\n    signIn,\n    isAuthorized\n  } = props;\n  const history = useHistory();\n\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  const handleOnAuthorizationUser = formik => {\n    const {\n      email,\n      password\n    } = formik.values;\n    const userData = {\n      user: {\n        email,\n        password\n      }\n    };\n    signIn(userData, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInitialValues,\n    onSubmit: () => {\n      handleOnAuthorizationUser(formik);\n    }\n  });\n  useEffect(() => {\n    if (isAuthorized) redirectToHome();\n  }, [isAuthorized]);\n  return /*#__PURE__*/React.createElement(FormSignInWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(FormItem, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Email address:\", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email address\",\n    id: \"email\",\n    name: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), renderErrorMessage(formik, 'email')), /*#__PURE__*/React.createElement(FormItem, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(Input.Password, {\n    id: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    iconRender: visible => visible ? /*#__PURE__*/React.createElement(EyeTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 49\n      }\n    }) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 66\n      }\n    }),\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), renderErrorMessage(formik, 'password')), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"form-submit\",\n    onClick: formik.handleSubmit,\n    style: FormSubmitButtonStyles,\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")), /*#__PURE__*/React.createElement(FormSignUpLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Don't have account?\"), /*#__PURE__*/React.createElement(Link, {\n    to: signUpUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \" Sign Up.\"))));\n};\n\nSignIn.propTypes = {\n  signIn: propTypes.func,\n  isInputsDisable: propTypes.bool,\n  isAuthorized: propTypes.bool\n};\nSignIn.defaultProps = {\n  signIn: null,\n  isInputsDisable: false,\n  isAuthorized: false\n};\nexport default connect(mapStateToProps, actionCreators)(SignIn);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/sign-in/index.js"],"names":["React","useEffect","connect","useFormik","Button","Input","Link","propTypes","EyeInvisibleOutlined","EyeTwoTone","useHistory","FormItem","Form","FormTitle","FormSubmitButtonStyles","FormSignUpLink","FormSignInWrapper","actions","signUpUrl","mainUrl","renderErrorMessage","formikInitialValues","email","password","mapStateToProps","state","signInState","userData","isAuthorized","isInputsDisable","actionCreators","signIn","SignIn","props","history","redirectToHome","push","handleOnAuthorizationUser","formik","values","user","initialValues","onSubmit","handleSubmit","handleChange","visible","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { useHistory } from 'react-router';\nimport {\n  FormItem,\n  Form,\n  FormTitle,\n  FormSubmitButtonStyles,\n  FormSignUpLink,\n  FormSignInWrapper,\n} from '../../styled-components';\nimport * as actions from '../../redux/actions';\nimport { signUpUrl, mainUrl } from '../../routes';\nimport { renderErrorMessage } from '../../helper';\n\nconst formikInitialValues = {\n  email: '',\n  password: '',\n};\n\nconst mapStateToProps = (state) => {\n  const { signInState, userData } = state;\n  const { isAuthorized } = userData;\n  const isInputsDisable = (signInState === 'requested');\n\n  return { isInputsDisable, isAuthorized };\n};\n\nconst actionCreators = {\n  signIn: actions.signIn,\n};\n\nconst SignIn = (props) => {\n  const { isInputsDisable, signIn, isAuthorized } = props;\n\n  const history = useHistory();\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  const handleOnAuthorizationUser = (formik) => {\n    const { email, password } = formik.values;\n    const userData = {\n      user: {\n        email,\n        password,\n      },\n    };\n    signIn(userData, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInitialValues,\n    onSubmit: () => {\n      handleOnAuthorizationUser(formik);\n    },\n  });\n\n  useEffect(() => {\n    if (isAuthorized) redirectToHome();\n  }, [isAuthorized]);\n\n  return (\n    <FormSignInWrapper>\n      <Form onSubmit={formik.handleSubmit}>\n        <FormTitle>Sign In</FormTitle>\n        <FormItem htmlFor=\"email\">\n          Email address:\n          <Input\n            placeholder=\"Email address\"\n            id=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            disabled={isInputsDisable}\n          />\n          {renderErrorMessage(formik, 'email')}\n        </FormItem>\n\n        <FormItem htmlFor=\"password\">\n          Password:\n          <Input.Password\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n            disabled={isInputsDisable}\n          />\n          {renderErrorMessage(formik, 'password')}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"form-submit\"\n            onClick={formik.handleSubmit}\n            style={FormSubmitButtonStyles}\n            disabled={isInputsDisable}\n          >\n            Войти\n          </Button>\n        </FormItem>\n        <FormSignUpLink>\n          <span>Don&apos;t have account?</span>\n          <Link to={signUpUrl}> Sign Up.</Link>\n        </FormSignUpLink>\n      </Form>\n    </FormSignInWrapper>\n\n  );\n};\n\nSignIn.propTypes = {\n  signIn: propTypes.func,\n  isInputsDisable: propTypes.bool,\n  isAuthorized: propTypes.bool,\n};\n\nSignIn.defaultProps = {\n  signIn: null,\n  isInputsDisable: false,\n  isAuthorized: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SignIn);\n"]},"metadata":{},"sourceType":"module"}