{"ast":null,"code":"import React from'react';import{uniqueId}from'lodash';import{connect}from'react-redux';import{useFormik}from'formik';import{Button,Input}from'antd';import*as Yup from'yup';import'antd/dist/antd.css';import*as actions from'../../redux/actions/user';import{Form,FormTitle,FormItem,FormSubmitButtonStyles}from'../../styled-components';import{renderErrorMessage}from'../../helper';var formikInicialValues={username:'',email:'',image:''};var formItems=[{id:uniqueId(),title:'Username',name:'username',placeholder:'Username'},{id:uniqueId(),title:'Email address',name:'email',placeholder:'Email'},{id:uniqueId(),title:'Avatar image (url)',name:'image',placeholder:'url'}];var formikValidationSchema=Yup.object({username:Yup.string().max(30,'Your username should be no more than 30 characters!').required('required'),email:Yup.string().email('Invalid email').required('required'),image:Yup.string().url('Not correct url').required('required')});var mapStateToProps=function mapStateToProps(state){return{isInputsDisable:state.editUserProfileState==='requested'};};var actionCreator={editUserProfile:actions.editUserProfile};var EditProfile=function EditProfile(props){var isInputsDisable=props.isInputsDisable,editUserProfile=props.editUserProfile;var handleOnEditUserProfile=function handleOnEditUserProfile(formik){var _formik$values=formik.values,username=_formik$values.username,email=_formik$values.email,image=_formik$values.image;var userData={user:{username:username,email:email,image:image}};editUserProfile(userData,formik);};var formik=useFormik({initialValues:formikInicialValues,validationSchema:formikValidationSchema,onSubmit:function onSubmit(){handleOnEditUserProfile(formik);}});var renderInputs=function renderInputs(){return formItems.map(function(formItem){return/*#__PURE__*/React.createElement(FormItem,{key:formItem.id,htmlFor:formItem.name},formItem.title,/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:formItem.placeholder,id:formItem.name,name:formItem.name,onChange:formik.handleChange,value:formik.values[formItem.name],disabled:isInputsDisable}),renderErrorMessage(formik,formItem.name));});};return/*#__PURE__*/React.createElement(Form,{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(FormTitle,null,\"Edit Profile\"),renderInputs(),/*#__PURE__*/React.createElement(FormItem,null,/*#__PURE__*/React.createElement(Button,{htmlType:\"submit\",type:\"primary\",onClick:formik.handleSubmit,disabled:isInputsDisable,style:FormSubmitButtonStyles},\"Save\")));};EditProfile.defaultProps={isInputsDisable:false,editUserProfile:null};export default connect(mapStateToProps,actionCreator)(EditProfile);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/edit-profile/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","Yup","actions","Form","FormTitle","FormItem","FormSubmitButtonStyles","renderErrorMessage","formikInicialValues","username","email","image","formItems","id","title","name","placeholder","formikValidationSchema","object","string","max","required","url","mapStateToProps","state","isInputsDisable","editUserProfileState","actionCreator","editUserProfile","EditProfile","props","handleOnEditUserProfile","formik","values","userData","user","initialValues","validationSchema","onSubmit","renderInputs","map","formItem","handleChange","handleSubmit","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions/user';\n\nimport {\n  Form, FormTitle, FormItem, FormSubmitButtonStyles,\n} from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\n\nconst formikInicialValues = {\n  username: '',\n  email: '',\n  image: '',\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Username', name: 'username', placeholder: 'Username',\n  },\n  {\n    id: uniqueId(), title: 'Email address', name: 'email', placeholder: 'Email',\n  },\n  {\n    id: uniqueId(), title: 'Avatar image (url)', name: 'image', placeholder: 'url',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  username: Yup.string()\n    .max(30, 'Your username should be no more than 30 characters!')\n    .required('required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('required'),\n  image: Yup.string()\n    .url('Not correct url')\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => ({ isInputsDisable: state.editUserProfileState === 'requested' });\n\nconst actionCreator = {\n  editUserProfile: actions.editUserProfile,\n};\n\nconst EditProfile = (props) => {\n  const { isInputsDisable, editUserProfile } = props;\n\n  const handleOnEditUserProfile = (formik) => {\n    const { username, email, image } = formik.values;\n\n    const userData = {\n      user: {\n        username, email, image,\n      },\n    };\n    editUserProfile(userData, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnEditUserProfile(formik);\n    },\n  });\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type=\"text\"\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisable}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <FormTitle>Edit Profile</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n          style={FormSubmitButtonStyles}\n        >\n          Save\n        </Button>\n      </FormItem>\n    </Form>\n  );\n};\n\nEditProfile.propTypes = {\n  isInputsDisable: propTypes.bool,\n  editUserProfile: propTypes.func,\n};\n\nEditProfile.defaultProps = {\n  isInputsDisable: false,\n  editUserProfile: null,\n};\n\nexport default connect(mapStateToProps, actionCreator)(EditProfile);\n"]},"metadata":{},"sourceType":"module"}