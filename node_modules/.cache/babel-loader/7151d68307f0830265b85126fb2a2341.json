{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import{getDate}from'../../helper';import*as actions from'../../redux/actions/articles';import{ArticlesLikeImg,ArticlesDate,ArticlesDescription,ArticlesHeader,ArticlesInfo,ArticlesItem,ArticlesLikesCount,ArticlesStats,ArticlesTag,ArticlesTagsWrap,ArticlesHeaderTitle,ArticlesUserImage,ArticlesUserInfoWrap,ArticlesUserInfoGroup,ArticlesUsername}from'../../styled-components';import{articleUrl}from'../../routes';import activeLikeSrc from\"../../images/like-active.svg\";import disabledLikeSrc from\"../../images/like-disabled.svg\";var linkStyles={textDecoration:'none',color:'rgba(0, 0, 0, 0.75)'};var mapStateToProps=function mapStateToProps(state){var likesStateOnServer=state.likesStateOnServer,addLikeRequestState=state.addLikeRequestState,localLikesStateProcess=state.localLikesStateProcess;var isLikeChangedOnServer=localLikesStateProcess==='finished';return{likesStateOnServer:likesStateOnServer,isLikeChangedOnServer:isLikeChangedOnServer,addLikeRequestState:addLikeRequestState};};var actionCreator={addLike:actions.addLike};var Article=function Article(props){var articles=props.articles,addLike=props.addLike,addLikeRequestState=props.addLikeRequestState;/* const repeatChangeLikeRequest = () => {\n    const newLikesState = likesStateOnServer.map((serverLikeState) => {\n      const findEl = articles.find((article) => article.id === serverLikeState.id);\n\n      // объединить фейковые лайки и те которые пришли от сервера в один объект\n      // для удобного сравнения\n      if (findEl) {\n        return {\n          id: findEl.id,\n          slug: findEl.slug,\n          favorited: findEl.favorited,\n          isLikedOnServer: serverLikeState.isFavorited,\n          isRepeatedRequest: true,\n        };\n      }\n      return serverLikeState;\n    });\n\n    const isDiff = newLikesState.some((el) => el.favorited !== el.isLikedOnServer);\n    const likeBody = newLikesState.find((el) => el.favorited !== el.isLikedOnServer);\n\n    console.log(newLikesState);\n    console.log(isDiff);\n    console.log(likeBody);\n    console.log(articles);\n    console.log(likesStateOnServer);\n    if (isDiff === true) {\n      console.log('повторный запрос');\n      addLike(likeBody);\n    }\n  }; */ /* useEffect(() => {\n    if (isLikeChangedOnServer) repeatChangeLikeRequest();\n  }, [likesStateOnServer]); */var handleOnLikeArticle=function handleOnLikeArticle(event,articleLikeInfo){event.preventDefault();event.stopPropagation();var isCurrentLikeRequested=addLikeRequestState.some(function(el){return el===articleLikeInfo.id;});if(isCurrentLikeRequested){var rejectRequest=_objectSpread(_objectSpread({},articleLikeInfo),{},{isAlreadyRequested:true});// eslint-disable-next-line no-console\nconsole.log('отправка запрещена');return addLike(rejectRequest);}return addLike(articleLikeInfo);};var renderArticle=function renderArticle(){return articles.map(function(article){var author=article.author,createdAt=article.createdAt,description=article.description,id=article.id,tagList=article.tagList,title=article.title,slug=article.slug,favorited=article.favorited,favoritesCount=article.favoritesCount;var username=author.username,image=author.image;var dateDiff=getDate(createdAt);var renderTagList=function renderTagList(){return tagList.map(function(tag){return/*#__PURE__*/React.createElement(ArticlesTag,{key:tag.id},tag.title);});};var isLiked=favorited?activeLikeSrc:disabledLikeSrc;var articleLikeInfo={id:id,favorited:favorited,slug:slug,isAlreadyRequested:false,isRepeatedRequest:false};/*\n    1) пользователь нажимает на фейк-лайк\n    2) отправляется запрос на сервер с измененным фейк-состоянием\n       если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n    3) приходит ответ с изменённым состоянием\n       после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n       если да, то оставляем всё как есть\n       если нет, то снова отправляем запрос на сервер\n      */return/*#__PURE__*/React.createElement(Link,{to:articleUrl(slug),style:linkStyles,key:id},/*#__PURE__*/React.createElement(ArticlesItem,null,/*#__PURE__*/React.createElement(ArticlesInfo,null,/*#__PURE__*/React.createElement(ArticlesHeader,null,/*#__PURE__*/React.createElement(ArticlesHeaderTitle,null,title),/*#__PURE__*/React.createElement(ArticlesStats,null,/*#__PURE__*/React.createElement(ArticlesLikeImg,{onClick:function onClick(event){return handleOnLikeArticle(event,articleLikeInfo);},src:isLiked}),/*#__PURE__*/React.createElement(ArticlesLikesCount,null,favoritesCount))),/*#__PURE__*/React.createElement(ArticlesTagsWrap,null,renderTagList()),/*#__PURE__*/React.createElement(ArticlesDescription,null,description)),/*#__PURE__*/React.createElement(ArticlesUserInfoWrap,null,/*#__PURE__*/React.createElement(ArticlesUserInfoGroup,null,/*#__PURE__*/React.createElement(ArticlesUsername,null,username),/*#__PURE__*/React.createElement(ArticlesDate,null,dateDiff)),/*#__PURE__*/React.createElement(ArticlesUserImage,{src:image}))));});};return renderArticle();};export default connect(mapStateToProps,actionCreator)(Article);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/articles-list/article.js"],"names":["React","connect","Link","getDate","actions","ArticlesLikeImg","ArticlesDate","ArticlesDescription","ArticlesHeader","ArticlesInfo","ArticlesItem","ArticlesLikesCount","ArticlesStats","ArticlesTag","ArticlesTagsWrap","ArticlesHeaderTitle","ArticlesUserImage","ArticlesUserInfoWrap","ArticlesUserInfoGroup","ArticlesUsername","articleUrl","linkStyles","textDecoration","color","mapStateToProps","state","likesStateOnServer","addLikeRequestState","localLikesStateProcess","isLikeChangedOnServer","actionCreator","addLike","Article","props","articles","handleOnLikeArticle","event","articleLikeInfo","preventDefault","stopPropagation","isCurrentLikeRequested","some","el","id","rejectRequest","isAlreadyRequested","console","log","renderArticle","map","article","author","createdAt","description","tagList","title","slug","favorited","favoritesCount","username","image","dateDiff","renderTagList","tag","isLiked","activeLikeSrc","disabledLikeSrc","isRepeatedRequest"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDate } from '../../helper';\nimport * as actions from '../../redux/actions/articles';\nimport {\n  ArticlesLikeImg, ArticlesDate, ArticlesDescription,\n  ArticlesHeader,\n  ArticlesInfo, ArticlesItem, ArticlesLikesCount,\n  ArticlesStats,\n  ArticlesTag, ArticlesTagsWrap,\n  ArticlesHeaderTitle, ArticlesUserImage,\n  ArticlesUserInfoWrap, ArticlesUserInfoGroup, ArticlesUsername,\n} from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport activeLikeSrc from '../../images/like-active.svg';\nimport disabledLikeSrc from '../../images/like-disabled.svg';\n\nconst linkStyles = {\n  textDecoration: 'none',\n  color: 'rgba(0, 0, 0, 0.75)',\n};\nconst mapStateToProps = (state) => {\n  const { likesStateOnServer, addLikeRequestState, localLikesStateProcess } = state;\n\n  const isLikeChangedOnServer = localLikesStateProcess === 'finished';\n\n  return { likesStateOnServer, isLikeChangedOnServer, addLikeRequestState };\n};\n\nconst actionCreator = {\n  addLike: actions.addLike,\n};\n\nconst Article = (props) => {\n  const {\n    articles,\n    addLike, addLikeRequestState,\n  } = props;\n\n  /* const repeatChangeLikeRequest = () => {\n    const newLikesState = likesStateOnServer.map((serverLikeState) => {\n      const findEl = articles.find((article) => article.id === serverLikeState.id);\n\n      // объединить фейковые лайки и те которые пришли от сервера в один объект\n      // для удобного сравнения\n      if (findEl) {\n        return {\n          id: findEl.id,\n          slug: findEl.slug,\n          favorited: findEl.favorited,\n          isLikedOnServer: serverLikeState.isFavorited,\n          isRepeatedRequest: true,\n        };\n      }\n      return serverLikeState;\n    });\n\n    const isDiff = newLikesState.some((el) => el.favorited !== el.isLikedOnServer);\n    const likeBody = newLikesState.find((el) => el.favorited !== el.isLikedOnServer);\n\n    console.log(newLikesState);\n    console.log(isDiff);\n    console.log(likeBody);\n    console.log(articles);\n    console.log(likesStateOnServer);\n    if (isDiff === true) {\n      console.log('повторный запрос');\n      addLike(likeBody);\n    }\n  }; */\n\n  /* useEffect(() => {\n    if (isLikeChangedOnServer) repeatChangeLikeRequest();\n  }, [likesStateOnServer]); */\n\n  const handleOnLikeArticle = (event, articleLikeInfo) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const isCurrentLikeRequested = addLikeRequestState.some((el) => el === articleLikeInfo.id);\n    if (isCurrentLikeRequested) {\n      const rejectRequest = { ...articleLikeInfo, isAlreadyRequested: true };\n      // eslint-disable-next-line no-console\n      console.log('отправка запрещена');\n      return addLike(rejectRequest);\n    }\n\n    return addLike(articleLikeInfo);\n  };\n\n  const renderArticle = () => articles.map((article) => {\n    const {\n      author, createdAt, description, id, tagList, title, slug, favorited, favoritesCount,\n    } = article;\n    const { username, image } = author;\n    const dateDiff = getDate(createdAt);\n\n    const renderTagList = () => (\n      tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n    );\n\n    const isLiked = favorited ? activeLikeSrc : disabledLikeSrc;\n\n    const articleLikeInfo = {\n      id,\n      favorited,\n      slug,\n      isAlreadyRequested: false,\n      isRepeatedRequest: false,\n    };\n\n    /*\n    1) пользователь нажимает на фейк-лайк\n    2) отправляется запрос на сервер с измененным фейк-состоянием\n       если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n    3) приходит ответ с изменённым состоянием\n       после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n       если да, то оставляем всё как есть\n       если нет, то снова отправляем запрос на сервер\n      */\n\n    return (\n      <Link to={articleUrl(slug)} style={linkStyles} key={id}>\n        <ArticlesItem>\n          <ArticlesInfo>\n            <ArticlesHeader>\n              <ArticlesHeaderTitle>\n                {title}\n              </ArticlesHeaderTitle>\n              <ArticlesStats>\n                <ArticlesLikeImg\n                  onClick={(event) => handleOnLikeArticle(event, articleLikeInfo)}\n                  src={isLiked}\n                />\n                <ArticlesLikesCount>{favoritesCount}</ArticlesLikesCount>\n              </ArticlesStats>\n            </ArticlesHeader>\n            <ArticlesTagsWrap>\n              {renderTagList()}\n            </ArticlesTagsWrap>\n\n            <ArticlesDescription>\n              {description}\n            </ArticlesDescription>\n          </ArticlesInfo>\n\n          <ArticlesUserInfoWrap>\n            <ArticlesUserInfoGroup>\n              <ArticlesUsername>{username}</ArticlesUsername>\n              <ArticlesDate>{dateDiff}</ArticlesDate>\n            </ArticlesUserInfoGroup>\n            <ArticlesUserImage src={image} />\n          </ArticlesUserInfoWrap>\n        </ArticlesItem>\n      </Link>\n    );\n  });\n\n  return renderArticle();\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);\n"]},"metadata":{},"sourceType":"module"}