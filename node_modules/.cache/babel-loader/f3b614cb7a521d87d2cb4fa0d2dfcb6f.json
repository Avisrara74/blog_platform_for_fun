{"ast":null,"code":"import axios from 'axios';\nimport * as routes from './routes';\nimport { checkFieldErrors, mainRequestHandler, networkErrorCheck } from './index';\naxios.interceptors.request.use(req => mainRequestHandler(req)); // редактирование профиля пользователя\n\nexport const editUserProfile = async (userData, formik) => {\n  try {\n    const response = await axios.put(routes.userProfileUrl, userData);\n    const {\n      user\n    } = response.data;\n    return {\n      username: user.username,\n      userProfileImage: user.image\n    };\n  } catch (error) {\n    networkErrorCheck(error);\n\n    if (error.response.status === 422) {\n      checkFieldErrors(error.response.data.errors, formik);\n    }\n\n    throw error;\n  }\n};","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/API/user.js"],"names":["axios","routes","checkFieldErrors","mainRequestHandler","networkErrorCheck","interceptors","request","use","req","editUserProfile","userData","formik","response","put","userProfileUrl","user","data","username","userProfileImage","image","error","status","errors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,EAA+CC,iBAA/C,QAAwE,SAAxE;AAEAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACGC,GAAD,IAASL,kBAAkB,CAACK,GAAD,CAD7B,E,CAIA;;AACA,OAAO,MAAMC,eAAe,GAAG,OAAOC,QAAP,EAAiBC,MAAjB,KAA4B;AACzD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUZ,MAAM,CAACa,cAAjB,EAAiCJ,QAAjC,CAAvB;AAEA,UAAM;AAAEK,MAAAA;AAAF,QAAWH,QAAQ,CAACI,IAA1B;AACA,WAAO;AACLC,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QADV;AAELC,MAAAA,gBAAgB,EAAEH,IAAI,CAACI;AAFlB,KAAP;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AACdhB,IAAAA,iBAAiB,CAACgB,KAAD,CAAjB;;AACA,QAAIA,KAAK,CAACR,QAAN,CAAeS,MAAf,KAA0B,GAA9B,EAAmC;AACjCnB,MAAAA,gBAAgB,CAACkB,KAAK,CAACR,QAAN,CAAeI,IAAf,CAAoBM,MAArB,EAA6BX,MAA7B,CAAhB;AACD;;AACD,UAAMS,KAAN;AACD;AACF,CAhBM","sourcesContent":["import axios from 'axios';\nimport * as routes from './routes';\nimport { checkFieldErrors, mainRequestHandler, networkErrorCheck } from './index';\n\naxios.interceptors.request.use(\n  (req) => mainRequestHandler(req),\n);\n\n// редактирование профиля пользователя\nexport const editUserProfile = async (userData, formik) => {\n  try {\n    const response = await axios.put(routes.userProfileUrl, userData);\n\n    const { user } = response.data;\n    return {\n      username: user.username,\n      userProfileImage: user.image,\n    };\n  } catch (error) {\n    networkErrorCheck(error);\n    if (error.response.status === 422) {\n      checkFieldErrors(error.response.data.errors, formik);\n    }\n    throw error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}