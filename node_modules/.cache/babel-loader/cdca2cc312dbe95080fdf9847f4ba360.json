{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\edit-profile\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport { Form, FormTitle, FormItem, FormSubmitButtonStyles } from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\nconst formikInicialValues = {\n  username: '',\n  email: '',\n  image: ''\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Username',\n  name: 'username',\n  placeholder: 'Username'\n}, {\n  id: uniqueId(),\n  title: 'Email address',\n  name: 'email',\n  placeholder: 'Email'\n}, {\n  id: uniqueId(),\n  title: 'Avatar image (url)',\n  name: 'image',\n  placeholder: 'url'\n}];\nconst formikValidationSchema = Yup.object({\n  username: Yup.string().max(30, 'Your username should be no more than 30 characters!').required('required'),\n  email: Yup.string().email('Invalid email').required('required'),\n  image: Yup.string().url('Not correct url').required('required')\n});\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {};\n};\n\nconst actionCreator = {\n  editUserProfile: actions.editUserProfile\n};\n\nconst EditProfile = props => {\n  const handleOnEditUserProfile = formik => {\n    const {\n      editUserProfile\n    } = props;\n    const {\n      username,\n      email,\n      image\n    } = formik.values;\n    const userData = {\n      username,\n      email,\n      image\n    };\n    editUserProfile(userData, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnEditUserProfile(formik);\n    }\n  });\n  const {\n    isInputsDisable\n  } = props;\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Edit Profile\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    disabled: isInputsDisable,\n    style: FormSubmitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n};\n\nEditProfile.propTypes = {\n  isInputsDisable: propTypes.bool\n};\nEditProfile.defaultProps = {\n  isInputsDisable: false\n};\nexport default connect(mapStateToProps, actionCreator)(EditProfile);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/edit-profile/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","propTypes","Yup","actions","Form","FormTitle","FormItem","FormSubmitButtonStyles","renderErrorMessage","formikInicialValues","username","email","image","formItems","id","title","name","placeholder","formikValidationSchema","object","string","max","required","url","mapStateToProps","state","console","log","actionCreator","editUserProfile","EditProfile","props","handleOnEditUserProfile","formik","values","userData","initialValues","validationSchema","onSubmit","isInputsDisable","renderInputs","map","formItem","handleChange","handleSubmit","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\n\nimport {\n  Form, FormTitle, FormItem, FormSubmitButtonStyles,\n} from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\n\nconst formikInicialValues = {\n  username: '',\n  email: '',\n  image: '',\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Username', name: 'username', placeholder: 'Username',\n  },\n  {\n    id: uniqueId(), title: 'Email address', name: 'email', placeholder: 'Email',\n  },\n  {\n    id: uniqueId(), title: 'Avatar image (url)', name: 'image', placeholder: 'url',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  username: Yup.string()\n    .max(30, 'Your username should be no more than 30 characters!')\n    .required('required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('required'),\n  image: Yup.string()\n    .url('Not correct url')\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {};\n}\n\n\nconst actionCreator = {\n  editUserProfile: actions.editUserProfile,\n}\n\nconst EditProfile = (props) => {\n\n  const handleOnEditUserProfile = (formik) => {\n    const { editUserProfile } = props;\n    const { username, email, image } = formik.values;\n\n    const userData = {\n      username, email, image,\n    }\n    editUserProfile(userData, formik);\n  }\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnEditUserProfile(formik);\n    },\n  });\n\n  const { isInputsDisable } = props;\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type=\"text\"\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisable}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <FormTitle>Edit Profile</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n          style={FormSubmitButtonStyles}\n        >\n          Save\n        </Button>\n      </FormItem>\n    </Form>\n  );\n};\n\nEditProfile.propTypes = {\n  isInputsDisable: propTypes.bool,\n};\n\nEditProfile.defaultProps = {\n  isInputsDisable: false,\n};\n\nexport default connect(mapStateToProps, actionCreator)(EditProfile);\n"]},"metadata":{},"sourceType":"module"}