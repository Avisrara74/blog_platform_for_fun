{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// проверка на ошибки в полях форм\nexport var checkFieldErrors=function checkFieldErrors(errResponse,formik){Object.entries(errResponse).forEach(function(error){var _error=_slicedToArray(error,2),field=_error[0],message=_error[1];formik.setFieldError(field,message[0]);formik.setSubmitting(false);});};// проверка на ошибку сети\nexport var networkErrorCheck=function networkErrorCheck(err){if(err.message==='Network Error'){alert('Ошибка соединения');// eslint-disable-line no-alert\n}};// проверка ошибки авторизации\nexport var signInErrorsCheck=function signInErrorsCheck(errResponse,formik){if(Object.keys(errResponse).length>0){formik.setFieldError('email','Invalid login or password');formik.setFieldError('password','Invalid login or password');formik.setSubmitting(false);}};export var mainRequestHandler=function mainRequestHandler(req){req.headers['Content-Type']='application/json;charset=utf-8';req.json=true;if(localStorage.token!==undefined){req.headers.Authorization=\"Token \".concat(localStorage.token);}return req;};","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/API/index.js"],"names":["checkFieldErrors","errResponse","formik","Object","entries","forEach","error","field","message","setFieldError","setSubmitting","networkErrorCheck","err","alert","signInErrorsCheck","keys","length","mainRequestHandler","req","headers","json","localStorage","token","undefined","Authorization"],"mappings":"8JAAA;AACA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,WAAD,CAAcC,MAAd,CAAyB,CACvDC,MAAM,CAACC,OAAP,CAAeH,WAAf,EAA4BI,OAA5B,CAAoC,SAACC,KAAD,CAAW,2BACpBA,KADoB,IACtCC,KADsC,WAC/BC,OAD+B,WAE7CN,MAAM,CAACO,aAAP,CAAqBF,KAArB,CAA4BC,OAAO,CAAC,CAAD,CAAnC,EACAN,MAAM,CAACQ,aAAP,CAAqB,KAArB,EACD,CAJD,EAKD,CANM,CAQP;AACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,GAAD,CAAS,CACxC,GAAIA,GAAG,CAACJ,OAAJ,GAAgB,eAApB,CAAqC,CACnCK,KAAK,CAAC,mBAAD,CAAL,CAA4B;AAC7B,CACF,CAJM,CAMP;AACA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACb,WAAD,CAAcC,MAAd,CAAyB,CACxD,GAAIC,MAAM,CAACY,IAAP,CAAYd,WAAZ,EAAyBe,MAAzB,CAAkC,CAAtC,CAAyC,CACvCd,MAAM,CAACO,aAAP,CAAqB,OAArB,CAA8B,2BAA9B,EACAP,MAAM,CAACO,aAAP,CAAqB,UAArB,CAAiC,2BAAjC,EACAP,MAAM,CAACQ,aAAP,CAAqB,KAArB,EACD,CACF,CANM,CAQP,MAAO,IAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,GAAD,CAAS,CACzCA,GAAG,CAACC,OAAJ,CAAY,cAAZ,EAA8B,gCAA9B,CACAD,GAAG,CAACE,IAAJ,CAAW,IAAX,CAEA,GAAIC,YAAY,CAACC,KAAb,GAAuBC,SAA3B,CAAsC,CACpCL,GAAG,CAACC,OAAJ,CAAYK,aAAZ,iBAAqCH,YAAY,CAACC,KAAlD,EACD,CAED,MAAOJ,CAAAA,GAAP,CACD,CATM","sourcesContent":["// проверка на ошибки в полях форм\nexport const checkFieldErrors = (errResponse, formik) => {\n  Object.entries(errResponse).forEach((error) => {\n    const [field, message] = error;\n    formik.setFieldError(field, message[0]);\n    formik.setSubmitting(false);\n  });\n};\n\n// проверка на ошибку сети\nexport const networkErrorCheck = (err) => {\n  if (err.message === 'Network Error') {\n    alert('Ошибка соединения'); // eslint-disable-line no-alert\n  }\n};\n\n// проверка ошибки авторизации\nexport const signInErrorsCheck = (errResponse, formik) => {\n  if (Object.keys(errResponse).length > 0) {\n    formik.setFieldError('email', 'Invalid login or password');\n    formik.setFieldError('password', 'Invalid login or password');\n    formik.setSubmitting(false);\n  }\n};\n\nexport const mainRequestHandler = (req) => {\n  req.headers['Content-Type'] = 'application/json;charset=utf-8';\n  req.json = true;\n\n  if (localStorage.token !== undefined) {\n    req.headers.Authorization = `Token ${localStorage.token}`;\n  }\n\n  return req;\n};\n"]},"metadata":{},"sourceType":"module"}