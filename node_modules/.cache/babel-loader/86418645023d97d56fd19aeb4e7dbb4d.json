{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\nconst signUpState = handleActions({\n  [actions.signUpRequest]() {\n    return 'requested';\n  },\n\n  [actions.signUpFailure]() {\n    return 'failed';\n  },\n\n  [actions.signUpSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst signInState = handleActions({\n  [actions.signInRequest]() {\n    return 'requested';\n  },\n\n  [actions.signInFailure]() {\n    return 'failed';\n  },\n\n  [actions.signInSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst userDataInitial = {\n  username: '',\n  token: '',\n  isAuthorized: false\n};\nconst userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    return {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    };\n  },\n\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  }\n\n}, userDataInitial);\nconst getArticlesState = handleActions({\n  [actions.getArticlesSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst articles = handleActions({\n  [actions.getArticlesSuccess](state, action) {\n    const currentArticles = state.articles;\n    return {\n      articles: [...currentArticles, ...action.payload]\n    };\n  }\n\n}, {\n  articles: []\n});\nexport default combineReducers({\n  signUpState,\n  signInState,\n  userData,\n  getArticlesState,\n  articles\n});","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/redux/reducers/index.js"],"names":["combineReducers","handleActions","actions","removeItemFromLocalstorage","setItemToLocalstorage","signUpState","signUpRequest","signUpFailure","signUpSuccess","signInState","signInRequest","signInFailure","signInSuccess","userDataInitial","username","token","isAuthorized","userData","state","action","userProfileImage","payload","logOutSuccess","getArticlesState","getArticlesSuccess","articles","currentArticles"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,0BAAT,EAAqCC,qBAArC,QAAkE,oBAAlE;AAEA,MAAMC,WAAW,GAAGJ,aAAa,CAAC;AAChC,GAACC,OAAO,CAACI,aAAT,IAA0B;AACxB,WAAO,WAAP;AACD,GAH+B;;AAIhC,GAACJ,OAAO,CAACK,aAAT,IAA0B;AACxB,WAAO,QAAP;AACD,GAN+B;;AAOhC,GAACL,OAAO,CAACM,aAAT,IAA0B;AACxB,WAAO,UAAP;AACD;;AAT+B,CAAD,EAU9B,MAV8B,CAAjC;AAYA,MAAMC,WAAW,GAAGR,aAAa,CAAC;AAChC,GAACC,OAAO,CAACQ,aAAT,IAA0B;AACxB,WAAO,WAAP;AACD,GAH+B;;AAIhC,GAACR,OAAO,CAACS,aAAT,IAA0B;AACxB,WAAO,QAAP;AACD,GAN+B;;AAOhC,GAACT,OAAO,CAACU,aAAT,IAA0B;AACxB,WAAO,UAAP;AACD;;AAT+B,CAAD,EAU9B,MAV8B,CAAjC;AAYA,MAAMC,eAAe,GAAG;AAAEC,EAAAA,QAAQ,EAAE,EAAZ;AAAgBC,EAAAA,KAAK,EAAE,EAAvB;AAA2BC,EAAAA,YAAY,EAAE;AAAzC,CAAxB;AACA,MAAMC,QAAQ,GAAGhB,aAAa,CAAC;AAC7B,GAACC,OAAO,CAACU,aAAT,EAAwBM,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,UAAM;AAAEL,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,YAAnB;AAAiCI,MAAAA;AAAjC,QAAsDD,MAAM,CAACE,OAAnE;AACAjB,IAAAA,qBAAqB,CAAC,OAAD,EAAUW,KAAV,CAArB;AACAX,IAAAA,qBAAqB,CAAC,UAAD,EAAaU,QAAb,CAArB;AACA,WAAO;AAAEA,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,YAAnB;AAAiCI,MAAAA;AAAjC,KAAP;AACD,GAN4B;;AAO7B,GAAClB,OAAO,CAACoB,aAAT,IAA0B;AACxBnB,IAAAA,0BAA0B,CAAC,OAAD,CAA1B;AACAA,IAAAA,0BAA0B,CAAC,UAAD,CAA1B;AACA,WAAOU,eAAP;AACD;;AAX4B,CAAD,EAY3BA,eAZ2B,CAA9B;AAcA,MAAMU,gBAAgB,GAAGtB,aAAa,CAAC;AACrC,GAACC,OAAO,CAACsB,kBAAT,IAA+B;AAC7B,WAAO,UAAP;AACD;;AAHoC,CAAD,EAInC,MAJmC,CAAtC;AAMA,MAAMC,QAAQ,GAAGxB,aAAa,CAAC;AAC7B,GAACC,OAAO,CAACsB,kBAAT,EAA6BN,KAA7B,EAAoCC,MAApC,EAA4C;AAC1C,UAAMO,eAAe,GAAGR,KAAK,CAACO,QAA9B;AACA,WAAO;AAAEA,MAAAA,QAAQ,EAAE,CAAC,GAAGC,eAAJ,EAAqB,GAAGP,MAAM,CAACE,OAA/B;AAAZ,KAAP;AACD;;AAJ4B,CAAD,EAK3B;AAAEI,EAAAA,QAAQ,EAAE;AAAZ,CAL2B,CAA9B;AAOA,eAAezB,eAAe,CAAC;AAC7BK,EAAAA,WAD6B;AAE7BI,EAAAA,WAF6B;AAG7BQ,EAAAA,QAH6B;AAI7BM,EAAAA,gBAJ6B;AAK7BE,EAAAA;AAL6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\n\nconst signUpState = handleActions({\n  [actions.signUpRequest]() {\n    return 'requested';\n  },\n  [actions.signUpFailure]() {\n    return 'failed';\n  },\n  [actions.signUpSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst signInState = handleActions({\n  [actions.signInRequest]() {\n    return 'requested';\n  },\n  [actions.signInFailure]() {\n    return 'failed';\n  },\n  [actions.signInSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst userDataInitial = { username: '', token: '', isAuthorized: false };\nconst userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const { username, token, isAuthorized, userProfileImage } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    return { username, token, isAuthorized, userProfileImage };\n  },\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  },\n}, userDataInitial);\n\nconst getArticlesState = handleActions({\n  [actions.getArticlesSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst articles = handleActions({\n  [actions.getArticlesSuccess](state, action) {\n    const currentArticles = state.articles;\n    return { articles: [...currentArticles, ...action.payload] };\n  },\n}, { articles: [] });\n\nexport default combineReducers({\n  signUpState,\n  signInState,\n  userData,\n  getArticlesState,\n  articles,\n});\n"]},"metadata":{},"sourceType":"module"}