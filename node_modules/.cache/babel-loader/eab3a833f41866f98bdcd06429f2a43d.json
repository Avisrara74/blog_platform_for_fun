{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\articles-list\\\\article.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDate } from '../../helper';\nimport * as actions from '../../redux/actions';\nimport { ArtickesLikeImg, ArticlesDate, ArticlesDescription, ArticlesHeader, ArticlesInfo, ArticlesItem, ArticlesLikesCount, ArticlesStats, ArticlesTag, ArticlesTagsWrap, articlesTitle, ArticlesUserImage, ArticlesUserInfoWrap, ArticlesUserInfoGroup, ArticlesUsername } from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport activeLikeSrc from \"../../images/like-active.svg\";\nimport disabledLikeSrc from \"../../images/like-disabled.svg\";\n\nconst mapStateToProps = state => {\n  const {\n    likesStateOnServer,\n    addLikeRequestState\n  } = state;\n  console.log(state);\n  const isLikeChangedOnServer = addLikeRequestState === 'finished';\n  const isLikeChangeAlreadyRequested = addLikeRequestState === 'requested';\n  return {\n    likesStateOnServer,\n    isLikeChangedOnServer,\n    isLikeChangeAlreadyRequested,\n    addLikeRequestState\n  };\n};\n\nconst actionCreator = {\n  addLike: actions.addLike\n};\n\nconst Article = props => {\n  const {\n    articles,\n    fakeLikes,\n    setFakeLikes,\n    likesStateOnServer,\n    addLike,\n    addLikeRequestState\n  } = props;\n  const [getLikeInfoByClickOnItem, setLikeByClick] = useState([]);\n  const clickedLike = getLikeInfoByClickOnItem[getLikeInfoByClickOnItem.length - 1];\n\n  const addLikeRequest = () => {\n    console.log('fakeLikes:', fakeLikes);\n    console.log('clickedLike:', clickedLike);\n    console.log('likesStateOnServer:', likesStateOnServer);\n  };\n\n  useEffect(() => {\n    addLikeRequest();\n  }, [clickedLike]);\n\n  const renderArticle = () => {\n    return articles.map(article => {\n      const {\n        author,\n        createdAt,\n        description,\n        id,\n        tagList,\n        title,\n        slug\n      } = article;\n      const {\n        username,\n        image\n      } = author;\n      const dateDiff = getDate(createdAt);\n\n      const renderTagList = () => tagList.map(tag => /*#__PURE__*/React.createElement(ArticlesTag, {\n        key: tag.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }\n      }, tag.title)); // визуальное изменение лайка для пользователя\n\n\n      const getFakeLike = () => {\n        if (fakeLikes === undefined) return null;\n        return fakeLikes.filter(el => el.id === id)[0];\n      }; // рендер лайка\n\n\n      const fakeLikeSrc = () => {\n        if (getFakeLike() === undefined) return disabledLikeSrc;\n        return getFakeLike().isLiked ? activeLikeSrc : disabledLikeSrc;\n      }; // рендер счетчика лайков\n\n\n      const fakeLikeCounter = () => {\n        if (getFakeLike() === undefined) return 0;\n        return getFakeLike().likesCount;\n      };\n      /*\n          1) пользователь нажимает на фейк-лайк\n          2) отправляется запрос на сервер с измененным фейк-состоянием\n             если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n          3) приходит ответ с изменённым состоянием\n             после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n             если да, то оставляем всё как есть\n             если нет, то снова отправляем запрос на сервер\n      */\n\n\n      const handleOnLikeArticle = () => {\n        setFakeLikes(state => {\n          const newState = state.map(el => {\n            if (el.id === id) {\n              return { ...el,\n                isLiked: !el.isLiked,\n                likesCount: el.isLiked ? el.likesCount - 1 : el.likesCount + 1\n              };\n            }\n\n            return el;\n          });\n          return newState;\n        });\n        setLikeByClick(state => {\n          const newLike = {\n            id,\n            isLiked: !getFakeLike().isLiked,\n            slug\n          };\n\n          if (state.some(el => el.id === id)) {\n            return [...state.filter(el => el.id !== id), newLike];\n          }\n\n          ;\n          return [...state, newLike];\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(ArticlesItem, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: articlesTitle,\n        to: articleUrl(slug),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, title), /*#__PURE__*/React.createElement(ArticlesStats, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ArtickesLikeImg, {\n        onClick: handleOnLikeArticle,\n        src: fakeLikeSrc(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ArticlesLikesCount, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, fakeLikeCounter()))), /*#__PURE__*/React.createElement(ArticlesTagsWrap, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, renderTagList()), /*#__PURE__*/React.createElement(ArticlesDescription, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, description)), /*#__PURE__*/React.createElement(ArticlesUserInfoWrap, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesUserInfoGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesUsername, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, username), /*#__PURE__*/React.createElement(ArticlesDate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, dateDiff)), /*#__PURE__*/React.createElement(ArticlesUserImage, {\n        src: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      })));\n    });\n  };\n\n  return renderArticle();\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/articles-list/article.js"],"names":["React","useEffect","useState","connect","Link","getDate","actions","ArtickesLikeImg","ArticlesDate","ArticlesDescription","ArticlesHeader","ArticlesInfo","ArticlesItem","ArticlesLikesCount","ArticlesStats","ArticlesTag","ArticlesTagsWrap","articlesTitle","ArticlesUserImage","ArticlesUserInfoWrap","ArticlesUserInfoGroup","ArticlesUsername","articleUrl","mapStateToProps","state","likesStateOnServer","addLikeRequestState","console","log","isLikeChangedOnServer","isLikeChangeAlreadyRequested","actionCreator","addLike","Article","props","articles","fakeLikes","setFakeLikes","getLikeInfoByClickOnItem","setLikeByClick","clickedLike","length","addLikeRequest","renderArticle","map","article","author","createdAt","description","id","tagList","title","slug","username","image","dateDiff","renderTagList","tag","getFakeLike","undefined","filter","el","fakeLikeSrc","disabledLikeSrc","isLiked","activeLikeSrc","fakeLikeCounter","likesCount","handleOnLikeArticle","newState","newLike","some"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDate } from '../../helper';\nimport * as actions from '../../redux/actions';\nimport {\n  ArtickesLikeImg, ArticlesDate, ArticlesDescription,\n  ArticlesHeader,\n  ArticlesInfo, ArticlesItem, ArticlesLikesCount,\n  ArticlesStats,\n  ArticlesTag, ArticlesTagsWrap,\n  articlesTitle, ArticlesUserImage, ArticlesUserInfoWrap, ArticlesUserInfoGroup, ArticlesUsername,\n} from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport activeLikeSrc from '../../images/like-active.svg';\nimport disabledLikeSrc from '../../images/like-disabled.svg';\n\nconst mapStateToProps = (state) => {\n  const { likesStateOnServer, addLikeRequestState } = state;\n  console.log(state);\n\n  const isLikeChangedOnServer = addLikeRequestState === 'finished';\n  const isLikeChangeAlreadyRequested = addLikeRequestState === 'requested';\n\n  return { likesStateOnServer, isLikeChangedOnServer, isLikeChangeAlreadyRequested, addLikeRequestState};\n};\n\nconst actionCreator = {\n  addLike: actions.addLike,\n};\n\nconst Article = (props) => {\n  const {\n    articles, fakeLikes, setFakeLikes, likesStateOnServer,\n    addLike, addLikeRequestState\n  } = props;\n  const [getLikeInfoByClickOnItem, setLikeByClick] = useState([]);\n  const clickedLike = getLikeInfoByClickOnItem[getLikeInfoByClickOnItem.length - 1];\n\n  const addLikeRequest = () => {\n    console.log('fakeLikes:', fakeLikes);\n    console.log('clickedLike:', clickedLike);\n    console.log('likesStateOnServer:', likesStateOnServer);\n  }\n\n\n  useEffect(() => {\n    addLikeRequest();\n  }, [clickedLike]);\n\n  const renderArticle = () => {\n    return articles.map((article) => {\n      const {\n        author, createdAt, description, id, tagList, title, slug,\n      } = article;\n      const { username, image } = author;\n      const dateDiff = getDate(createdAt);\n\n      const renderTagList = () => (\n        tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n      );\n\n      // визуальное изменение лайка для пользователя\n      const getFakeLike = () => {\n        if (fakeLikes === undefined) return null;\n        return fakeLikes.filter((el) => el.id === id)[0];\n      };\n\n      // рендер лайка\n      const fakeLikeSrc = () => {\n        if (getFakeLike() === undefined) return disabledLikeSrc;\n        return getFakeLike().isLiked ? activeLikeSrc : disabledLikeSrc;\n      };\n\n      // рендер счетчика лайков\n      const fakeLikeCounter = () => {\n        if (getFakeLike() === undefined) return 0;\n        return getFakeLike().likesCount;\n      };\n      /*\n          1) пользователь нажимает на фейк-лайк\n          2) отправляется запрос на сервер с измененным фейк-состоянием\n             если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n          3) приходит ответ с изменённым состоянием\n             после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n             если да, то оставляем всё как есть\n             если нет, то снова отправляем запрос на сервер\n      */\n      const handleOnLikeArticle = () => {\n        setFakeLikes((state) => {\n          const newState = state.map((el) => {\n            if (el.id === id) {\n              return {\n                ...el,\n                isLiked: !el.isLiked,\n                likesCount: (el.isLiked) ? el.likesCount - 1 : el.likesCount + 1,\n              };\n            }\n            return el;\n          });\n          return newState;\n        });\n\n        setLikeByClick((state) => {\n          const newLike = { id, isLiked: !getFakeLike().isLiked, slug };\n          if (state.some((el) => el.id === id)) {\n            return [...state.filter((el) => el.id !== id), newLike];\n          };\n          return [...state, newLike];\n        });\n      };\n\n      return (\n        <ArticlesItem key={id}>\n          <ArticlesInfo>\n            <ArticlesHeader>\n              <Link style={articlesTitle} to={articleUrl(slug)}>\n                {title}\n              </Link>\n              <ArticlesStats>\n                <ArtickesLikeImg\n                  onClick={handleOnLikeArticle}\n                  src={fakeLikeSrc()}\n                />\n                <ArticlesLikesCount>{fakeLikeCounter()}</ArticlesLikesCount>\n              </ArticlesStats>\n            </ArticlesHeader>\n            <ArticlesTagsWrap>\n              {renderTagList()}\n            </ArticlesTagsWrap>\n\n            <ArticlesDescription>\n              {description}\n            </ArticlesDescription>\n          </ArticlesInfo>\n\n          <ArticlesUserInfoWrap>\n            <ArticlesUserInfoGroup>\n              <ArticlesUsername>{username}</ArticlesUsername>\n              <ArticlesDate>{dateDiff}</ArticlesDate>\n            </ArticlesUserInfoGroup>\n            <ArticlesUserImage src={image} />\n          </ArticlesUserInfoWrap>\n        </ArticlesItem>\n      );\n    });\n  }\n\n  return renderArticle();\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);\n"]},"metadata":{},"sourceType":"module"}