{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\sign-up\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Link, Redirect } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport styled from 'styled-components';\nconst Form = styled.form`\n  max-width: 384px;\n`;\nconst FormTitle = styled.div`\n  text-align: center;\n  color: #262626;\n  font-size: 20px;\n  margin: 0 0 16px 0;\n  font-weight: 500;\n`;\nconst FormItem = styled.label`\n  color: #262626;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0 0 16px 0;\n  display: flex;\n  flex-direction: column;\n  \n  &:last-of-type {\n    margin-bottom: 8px;\n  }\n`;\nconst SignInLink = styled.div`\n  color: #8C8C8C;\n  font-size: 12px;\n  text-align: center;\n`;\nconst FormItemError = styled.div`\n  color: #F5222D;\n  font-size: 14px;\n`;\nconst submitButtonStyles = {\n  height: 40\n};\nconst CheckboxWrap = styled.div`\n  border-top: 1px solid #E8E8E8;\n  padding-top: 8px;\n  display: flex;\n  flex-direction: row;\n`;\nconst CheckboxTitle = styled.label`\n  margin: 0 0 0 8px;\n`;\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  password: '',\n  repeatPassword: ''\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Username',\n  name: 'login',\n  placeholder: 'Username'\n}, {\n  id: uniqueId(),\n  title: 'Email address',\n  name: 'email',\n  placeholder: 'Email'\n}, {\n  id: uniqueId(),\n  title: 'Password',\n  name: 'password',\n  placeholder: 'Password'\n}, {\n  id: uniqueId(),\n  title: 'Repeat Password',\n  name: 'repeatPassword',\n  placeholder: 'Repeat password'\n}];\nconst formikValidationSchema = Yup.object({\n  login: Yup.string().max(30, 'Your username should be no more than 30 characters!').required('required'),\n  email: Yup.string().email('Invalid email').required('required'),\n  password: Yup.string().min(8, 'Your password need to be at least 6 characters.').max(50, 'Your password should be no more than 50 characters.').matches(/^[A-Za-z0-9]+$/, 'Password can be only with latin symbols and numbers').matches(/(?=.*[0-9])/, 'Your password need to be at least 1 number').matches(/(?=.*[A-Z])/, 'Your password need to be at least 1 uppercase symbol').required('required'),\n  repeatPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('required')\n});\n\nconst mapStateToProps = state => {\n  const {\n    signUpState\n  } = state;\n  const isInputsDisable = signUpState === 'requested';\n  const isSignUpRequestSuccess = signUpState === 'finished';\n  return {\n    isInputsDisable,\n    signUpState,\n    isSignUpRequestSuccess\n  };\n};\n\nconst actionCreators = {\n  signUp: actions.signUp\n};\n\nconst SignUp = props => {\n  const {\n    isInputsDisable,\n    signUp,\n    isSignUpRequestSuccess\n  } = props;\n\n  const handleOnSignUp = async formik => {\n    const {\n      login,\n      email,\n      password\n    } = formik.values;\n    const newUser = {\n      user: {\n        username: login,\n        email,\n        password\n      }\n    };\n    signUp(newUser);\n    formik.resetForm();\n  };\n\n  const ifAuthRedirectToSignIn = () => isSignUpRequestSuccess ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }) : null;\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnSignUp(formik);\n    }\n  });\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.name === 'password' || formItem.name === 'repeatPassword' ? 'password' : 'text',\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), formik.touched[formItem.name] && formik.errors[formItem.name] ? /*#__PURE__*/React.createElement(FormItemError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, formik.errors[formItem.name]) : null));\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, ifAuthRedirectToSignIn(), /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, \"Create new account\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: \"acceptTerms\",\n    name: \"acceptTerms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CheckboxTitle, {\n    htmlFor: \"acceptTerms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"I agree to the processing of my personal information\"))), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    disabled: isInputsDisable,\n    style: submitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, \"Create\")), /*#__PURE__*/React.createElement(SignInLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, \"Already have account?\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, \" Sign In.\")));\n};\n\nSignUp.propTypes = {\n  signUp: propTypes.func,\n  isInputsDisable: propTypes.bool,\n  isSignUpRequestSuccess: propTypes.bool\n};\nSignUp.defaultProps = {\n  signUp: null,\n  isInputsDisable: false,\n  isSignUpRequestSuccess: false\n};\nexport default connect(mapStateToProps, actionCreators)(SignUp);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/sign-up/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","Checkbox","propTypes","Yup","Link","Redirect","actions","styled","Form","form","FormTitle","div","FormItem","label","SignInLink","FormItemError","submitButtonStyles","height","CheckboxWrap","CheckboxTitle","formikInicialValues","login","email","password","repeatPassword","formItems","id","title","name","placeholder","formikValidationSchema","object","string","max","required","min","matches","oneOf","ref","mapStateToProps","state","signUpState","isInputsDisable","isSignUpRequestSuccess","actionCreators","signUp","SignUp","props","handleOnSignUp","formik","values","newUser","user","username","resetForm","ifAuthRedirectToSignIn","initialValues","validationSchema","onSubmit","renderInputs","map","formItem","handleChange","touched","errors","handleSubmit","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Link, Redirect } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  max-width: 384px;\n`;\n\nconst FormTitle = styled.div`\n  text-align: center;\n  color: #262626;\n  font-size: 20px;\n  margin: 0 0 16px 0;\n  font-weight: 500;\n`;\n\nconst FormItem = styled.label`\n  color: #262626;\n  font-size: 14px;\n  font-weight: normal;\n  margin: 0 0 16px 0;\n  display: flex;\n  flex-direction: column;\n  \n  &:last-of-type {\n    margin-bottom: 8px;\n  }\n`;\n\nconst SignInLink = styled.div`\n  color: #8C8C8C;\n  font-size: 12px;\n  text-align: center;\n`;\n\nconst FormItemError = styled.div`\n  color: #F5222D;\n  font-size: 14px;\n`;\n\nconst submitButtonStyles = {\n  height: 40,\n}\n\nconst CheckboxWrap = styled.div`\n  border-top: 1px solid #E8E8E8;\n  padding-top: 8px;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst CheckboxTitle = styled.label`\n  margin: 0 0 0 8px;\n`\n\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  password: '',\n  repeatPassword: '',\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Username', name: 'login', placeholder: 'Username',\n  },\n  {\n    id: uniqueId(), title: 'Email address', name: 'email', placeholder: 'Email',\n  },\n  {\n    id: uniqueId(), title: 'Password', name: 'password', placeholder: 'Password',\n  },\n  {\n    id: uniqueId(), title: 'Repeat Password', name: 'repeatPassword', placeholder: 'Repeat password',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  login: Yup.string()\n    .max(30, 'Your username should be no more than 30 characters!')\n    .required('required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('required'),\n  password: Yup.string()\n    .min(8, 'Your password need to be at least 6 characters.')\n    .max(50, 'Your password should be no more than 50 characters.')\n    .matches(/^[A-Za-z0-9]+$/, 'Password can be only with latin symbols and numbers')\n    .matches(/(?=.*[0-9])/, 'Your password need to be at least 1 number')\n    .matches(/(?=.*[A-Z])/, 'Your password need to be at least 1 uppercase symbol')\n    .required('required'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n  const { signUpState } = state;\n  const isInputsDisable = (signUpState === 'requested');\n  const isSignUpRequestSuccess = (signUpState === 'finished');\n\n  return { isInputsDisable, signUpState, isSignUpRequestSuccess };\n};\n\nconst actionCreators = {\n  signUp: actions.signUp,\n};\n\nconst SignUp = (props) => {\n  const { isInputsDisable, signUp, isSignUpRequestSuccess } = props;\n\n  const handleOnSignUp = async (formik) => {\n    const { login, email, password } = formik.values;\n    const newUser = {\n      user: {\n        username: login,\n        email,\n        password,\n      },\n    };\n    signUp(newUser);\n    formik.resetForm();\n  };\n\n  const ifAuthRedirectToSignIn = () => (\n    (isSignUpRequestSuccess) ? (<Redirect to=\"sign-in\" />) : null\n  );\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnSignUp(formik);\n    },\n  });\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={(formItem.name === 'password' || formItem.name === 'repeatPassword') ? 'password' : 'text'}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisable}\n        />\n        {formik.touched[formItem.name] && formik.errors[formItem.name] ? (\n          <FormItemError>{formik.errors[formItem.name]}</FormItemError>\n        ) : null}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      {ifAuthRedirectToSignIn()}\n      <FormTitle>Create new account</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem>\n        <CheckboxWrap>\n          <Checkbox id=\"acceptTerms\" name=\"acceptTerms\" />\n          <CheckboxTitle htmlFor=\"acceptTerms\">I agree to the processing of my personal information</CheckboxTitle>\n        </CheckboxWrap>\n\n      </FormItem>\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n          style={submitButtonStyles}\n        >\n          Create\n        </Button>\n      </FormItem>\n\n      <SignInLink>\n        <span>Already have account?</span>\n        <Link to=\"sign-in\"> Sign In.</Link>\n      </SignInLink>\n    </Form>\n  );\n};\n\nSignUp.propTypes = {\n  signUp: propTypes.func,\n  isInputsDisable: propTypes.bool,\n  isSignUpRequestSuccess: propTypes.bool,\n};\n\nSignUp.defaultProps = {\n  signUp: null,\n  isInputsDisable: false,\n  isSignUpRequestSuccess: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SignUp);\n"]},"metadata":{},"sourceType":"module"}