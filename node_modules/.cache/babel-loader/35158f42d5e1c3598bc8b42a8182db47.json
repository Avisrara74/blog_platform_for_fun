{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\create-article\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { renderErrorMessage } from '../../helper';\nimport { mainUrl } from '../../routes';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions/articles';\nimport { FormItem, FormArticle, FormTitle, FormItemTagsWrap, FormAddTagButton, FormRemoveTagButton, FormItemTagsTitle, FormItemTag } from '../../styled-components';\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%'\n};\nconst formAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4\n};\nconst markdownStyles = {\n  flexGrow: 1\n};\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagText: '',\n  tagList: []\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Title',\n  name: 'title',\n  placeholder: 'Title',\n  type: 'text'\n}, {\n  id: uniqueId(),\n  title: 'Short description',\n  name: 'description',\n  placeholder: 'Description',\n  type: 'text'\n}];\nconst formikValidationSchema = Yup.object({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  body: Yup.string().required('required')\n});\n\nconst mapStateToProps = state => {\n  const {\n    createArticleState\n  } = state;\n  return {\n    isArticlePublished: createArticleState === 'finished',\n    isInputsDisabled: createArticleState === 'requested'\n  };\n};\n\nconst actionCreators = {\n  createArticle: actions.createArticle\n};\n\nconst CreateArticle = props => {\n  const {\n    isArticlePublished,\n    isInputsDisabled\n  } = props;\n  const history = useHistory();\n\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  const handleOnCreateArticle = async formik => {\n    const {\n      createArticle\n    } = props;\n    const {\n      title,\n      description,\n      body,\n      tagList\n    } = formik.values;\n    const tags = tagList.map(tag => tag.value);\n    const articleBody = {\n      article: {\n        title,\n        description,\n        body,\n        tagList: tags\n      }\n    };\n    createArticle(articleBody, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnCreateArticle(formik);\n    }\n  });\n\n  const handleOnAddTag = () => {\n    const {\n      tagText,\n      tagList\n    } = formik.values;\n\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      value: tagText\n    };\n    const newTagsArray = [...tagList, initialNewTag];\n    formik.setFieldValue('tagList', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = id => () => {\n    const {\n      tagList\n    } = formik.values;\n    const newTagsArray = tagList.filter(tag => tag.id !== id);\n    formik.setFieldValue('tags', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const renderTags = () => {\n    const {\n      tagList\n    } = formik.values;\n    if (tagList.length === 0) return null;\n    return tagList.map(tag => {\n      const {\n        id,\n        value\n      } = tag;\n      return /*#__PURE__*/React.createElement(FormItemTag, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        style: formAddTagInputStyles,\n        onChange: formik.handleChange,\n        value: value,\n        disabled: isInputsDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n        onClick: handleOnRemoveTag(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    });\n  };\n\n  useEffect(() => {\n    if (isArticlePublished) {\n      redirectToHome();\n    }\n  }, [isArticlePublished]);\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.type,\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    disabled: isInputsDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  return /*#__PURE__*/React.createElement(FormArticle, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, \"Create new article\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    htmlFor: \"body\",\n    style: markdownStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, \"Text\", /*#__PURE__*/React.createElement(Input.TextArea, {\n    name: \"body\",\n    id: \"body\",\n    onChange: formik.handleChange,\n    value: formik.values.body,\n    rows: 8,\n    disabled: isInputsDisabled,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, 'body')), /*#__PURE__*/React.createElement(FormItemTagsWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemTagsTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"Tags\"), renderTags(), /*#__PURE__*/React.createElement(FormItemTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"tagText\",\n    id: \"tagText\",\n    placeholder: \"write tag\",\n    style: formAddTagInputStyles,\n    onChange: formik.handleChange,\n    value: formik.values.tagText,\n    disabled: isInputsDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n    onClick: handleOnClearTagInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(FormAddTagButton, {\n    onClick: handleOnAddTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, \"Add tag\"))), /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    style: formSubmitButtonStyles,\n    disabled: isInputsDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\n\nCreateArticle.propTypes = {\n  isArticlePublished: propTypes.bool,\n  createArticle: propTypes.func\n};\nCreateArticle.defaultProps = {\n  isArticlePublished: false,\n  createArticle: null\n};\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/create-article/index.js"],"names":["React","useEffect","uniqueId","connect","useFormik","useHistory","Button","Input","propTypes","Yup","renderErrorMessage","mainUrl","actions","FormItem","FormArticle","FormTitle","FormItemTagsWrap","FormAddTagButton","FormRemoveTagButton","FormItemTagsTitle","FormItemTag","formSubmitButtonStyles","height","maxWidth","width","formAddTagInputStyles","borderRadius","markdownStyles","flexGrow","formikInicialValues","title","description","body","tagText","tagList","formItems","id","name","placeholder","type","formikValidationSchema","object","string","required","mapStateToProps","state","createArticleState","isArticlePublished","isInputsDisabled","actionCreators","createArticle","CreateArticle","props","history","redirectToHome","push","handleOnCreateArticle","formik","values","tags","map","tag","value","articleBody","article","initialValues","validationSchema","onSubmit","handleOnAddTag","trim","length","setFieldValue","initialNewTag","newTagsArray","handleOnRemoveTag","filter","handleOnClearTagInput","renderTags","handleChange","renderInputs","formItem","handleSubmit","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { renderErrorMessage } from '../../helper';\nimport { mainUrl } from '../../routes';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions/articles';\n\nimport {\n  FormItem,\n  FormArticle,\n  FormTitle,\n  FormItemTagsWrap,\n  FormAddTagButton,\n  FormRemoveTagButton,\n  FormItemTagsTitle,\n  FormItemTag,\n} from '../../styled-components';\n\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%',\n};\n\nconst formAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4,\n};\n\nconst markdownStyles = {\n  flexGrow: 1,\n};\n\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagText: '',\n  tagList: [],\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Title', name: 'title', placeholder: 'Title', type: 'text',\n  },\n  {\n    id: uniqueId(), title: 'Short description', name: 'description', placeholder: 'Description', type: 'text',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  title: Yup.string()\n    .required('required'),\n  description: Yup.string()\n    .required('required'),\n  body: Yup.string()\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n  const { createArticleState } = state;\n  return {\n    isArticlePublished: createArticleState === 'finished',\n    isInputsDisabled: createArticleState === 'requested',\n  };\n};\n\nconst actionCreators = {\n  createArticle: actions.createArticle,\n};\n\nconst CreateArticle = (props) => {\n  const { isArticlePublished, isInputsDisabled } = props;\n  const history = useHistory();\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  const handleOnCreateArticle = async (formik) => {\n    const { createArticle } = props;\n    const {\n      title, description, body, tagList,\n    } = formik.values;\n    const tags = tagList.map((tag) => tag.value);\n\n    const articleBody = {\n      article: {\n        title, description, body, tagList: tags,\n      },\n    };\n    createArticle(articleBody, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnCreateArticle(formik);\n    },\n  });\n\n  const handleOnAddTag = () => {\n    const { tagText, tagList } = formik.values;\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      value: tagText,\n    };\n\n    const newTagsArray = [...tagList, initialNewTag];\n    formik.setFieldValue('tagList', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = (id) => () => {\n    const { tagList } = formik.values;\n\n    const newTagsArray = tagList.filter((tag) => tag.id !== id);\n\n    formik.setFieldValue('tags', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const renderTags = () => {\n    const { tagList } = formik.values;\n    if (tagList.length === 0) return null;\n\n    return tagList.map((tag) => {\n      const { id, value } = tag;\n\n      return (\n        <FormItemTag key={id}>\n          <Input\n            style={formAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={value}\n            disabled={isInputsDisabled}\n          />\n          <FormRemoveTagButton onClick={handleOnRemoveTag(id)}>Delete</FormRemoveTagButton>\n        </FormItemTag>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (isArticlePublished) {\n      redirectToHome();\n    }\n  }, [isArticlePublished]);\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={formItem.type}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisabled}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <FormArticle onSubmit={formik.handleSubmit}>\n      <FormTitle>Create new article</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem htmlFor=\"body\" style={markdownStyles}>\n        Text\n        <Input.TextArea\n          name=\"body\"\n          id=\"body\"\n          onChange={formik.handleChange}\n          value={formik.values.body}\n          rows={8}\n          disabled={isInputsDisabled}\n          allowClear\n        />\n        {renderErrorMessage(formik, 'body')}\n      </FormItem>\n\n      <FormItemTagsWrap>\n        <FormItemTagsTitle>Tags</FormItemTagsTitle>\n        {renderTags()}\n        <FormItemTag>\n          <Input\n            name=\"tagText\"\n            id=\"tagText\"\n            placeholder=\"write tag\"\n            style={formAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={formik.values.tagText}\n            disabled={isInputsDisabled}\n          />\n          <FormRemoveTagButton onClick={handleOnClearTagInput}>Delete</FormRemoveTagButton>\n          <FormAddTagButton onClick={handleOnAddTag}>Add tag</FormAddTagButton>\n        </FormItemTag>\n      </FormItemTagsWrap>\n\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        onClick={formik.handleSubmit}\n        style={formSubmitButtonStyles}\n        disabled={isInputsDisabled}\n      >\n        Send\n      </Button>\n    </FormArticle>\n  );\n};\n\nCreateArticle.propTypes = {\n  isArticlePublished: propTypes.bool,\n  createArticle: propTypes.func,\n};\n\nCreateArticle.defaultProps = {\n  isArticlePublished: false,\n  createArticle: null,\n};\n\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);\n"]},"metadata":{},"sourceType":"module"}