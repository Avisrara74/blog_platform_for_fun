{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Pagination}from'antd';import{connect}from'react-redux';import*as actions from'../../redux/actions/articles';import{renderLoader}from'../../helper';import{ArticlesWrapper,PaginationWrapper,ArticlesItemsWrapper}from'../../styled-components';import Article from'./article';var mapStateToProps=function mapStateToProps(state){var articles=state.articles,getArticlesState=state.getArticlesState,createArticleState=state.createArticleState,editArticleState=state.editArticleState,removeArticleState=state.removeArticleState;var props={articles:articles,isArticlesReady:getArticlesState==='finished',isRequestProcessed:getArticlesState==='processed',isNewArticleCreated:createArticleState==='finished',isArticleEdited:editArticleState==='finished',isArticleRemoved:removeArticleState==='finished'};return props;};var actionCreator={getArticles:actions.getArticles,refreshArticles:actions.refreshArticles};var ArticlesList=function ArticlesList(props){var getArticles=props.getArticles,articles=props.articles,isArticlesReady=props.isArticlesReady,isRequestProcessed=props.isRequestProcessed,isNewArticleCreated=props.isNewArticleCreated,refreshArticles=props.refreshArticles,isArticleEdited=props.isArticleEdited,isArticleRemoved=props.isArticleRemoved;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPageNumber=_useState2[0],setCurrentPageNumber=_useState2[1];var _useState3=useState(5),_useState4=_slicedToArray(_useState3,2),currentPageSize=_useState4[0],setPageSize=_useState4[1];var getArticlesRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getArticles();case 2:case\"end\":return _context.stop();}}},_callee);}));return function getArticlesRequest(){return _ref.apply(this,arguments);};}();var renderArticles=function renderArticles(pageNumber,pageSize){var from=pageNumber*pageSize-pageSize;var to=pageNumber*pageSize;// показываем по 5 постов\nvar currentArticlesArray=Array.from(articles).slice(from,to);return/*#__PURE__*/React.createElement(Article,{articles:currentArticlesArray});};var handleOnChangePagination=function handleOnChangePagination(value,pageSize){setCurrentPageNumber(value);setPageSize(pageSize);};var renderPagination=function renderPagination(total){return/*#__PURE__*/React.createElement(Pagination,{size:\"small\",total:total,pageSize:5// по сколько айтемов на странице показываем\n,showSizeChanger:false,onChange:handleOnChangePagination});};useEffect(function(){// получаем посты пока они есть и убираем дублирование запроса если создан новый пост\nif(!isArticlesReady&&!isNewArticleCreated&&!isArticleEdited){getArticlesRequest();}// обновляем посты после создания поста / редактирования / удаления\nif(isNewArticleCreated||isArticleEdited||isArticleRemoved)refreshArticles();},[isArticlesReady,isNewArticleCreated,isArticleEdited]);return/*#__PURE__*/React.createElement(ArticlesWrapper,null,/*#__PURE__*/React.createElement(ArticlesItemsWrapper,null,isRequestProcessed||isArticlesReady?renderArticles(currentPageNumber,currentPageSize):renderLoader()),/*#__PURE__*/React.createElement(PaginationWrapper,null,renderPagination(articles.length)));};ArticlesList.defaultProps={getArticles:null,articles:[],isArticlesReady:false,isRequestProcessed:false,isNewArticleCreated:false,refreshArticles:null,isArticleEdited:false,isArticleRemoved:false};export default connect(mapStateToProps,actionCreator)(ArticlesList);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/articles-list/index.js"],"names":["React","useEffect","useState","Pagination","connect","actions","renderLoader","ArticlesWrapper","PaginationWrapper","ArticlesItemsWrapper","Article","mapStateToProps","state","articles","getArticlesState","createArticleState","editArticleState","removeArticleState","props","isArticlesReady","isRequestProcessed","isNewArticleCreated","isArticleEdited","isArticleRemoved","actionCreator","getArticles","refreshArticles","ArticlesList","currentPageNumber","setCurrentPageNumber","currentPageSize","setPageSize","getArticlesRequest","renderArticles","pageNumber","pageSize","from","to","currentArticlesArray","Array","slice","handleOnChangePagination","value","renderPagination","total","length","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport * as actions from '../../redux/actions/articles';\nimport { renderLoader } from '../../helper';\nimport {\n  ArticlesWrapper,\n  PaginationWrapper,\n  ArticlesItemsWrapper,\n} from '../../styled-components';\nimport Article from './article';\n\nconst mapStateToProps = (state) => {\n  const {\n    articles, getArticlesState, createArticleState, editArticleState, removeArticleState,\n  } = state;\n\n  const props = {\n    articles,\n    isArticlesReady: getArticlesState === 'finished',\n    isRequestProcessed: getArticlesState === 'processed',\n    isNewArticleCreated: createArticleState === 'finished',\n    isArticleEdited: editArticleState === 'finished',\n    isArticleRemoved: removeArticleState === 'finished',\n  };\n\n  return props;\n};\n\nconst actionCreator = {\n  getArticles: actions.getArticles,\n  refreshArticles: actions.refreshArticles,\n};\n\nconst ArticlesList = (props) => {\n  const {\n    getArticles, articles, isArticlesReady, isRequestProcessed,\n    isNewArticleCreated, refreshArticles, isArticleEdited,\n    isArticleRemoved,\n  } = props;\n\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const [currentPageSize, setPageSize] = useState(5);\n\n  const getArticlesRequest = async () => {\n    await getArticles();\n  };\n\n  const renderArticles = (pageNumber, pageSize) => {\n    const from = pageNumber * pageSize - pageSize;\n    const to = pageNumber * pageSize;\n    // показываем по 5 постов\n    const currentArticlesArray = Array.from(articles).slice(from, to);\n\n    return <Article articles={currentArticlesArray} />;\n  };\n\n  const handleOnChangePagination = (value, pageSize) => {\n    setCurrentPageNumber(value);\n    setPageSize(pageSize);\n  };\n\n  const renderPagination = (total) => (\n    <Pagination\n      size=\"small\"\n      total={total}\n      pageSize={5} // по сколько айтемов на странице показываем\n      showSizeChanger={false}\n      onChange={handleOnChangePagination}\n    />\n  );\n\n  useEffect(() => {\n    // получаем посты пока они есть и убираем дублирование запроса если создан новый пост\n    if (!isArticlesReady && !isNewArticleCreated && !isArticleEdited) {\n      getArticlesRequest();\n    }\n\n    // обновляем посты после создания поста / редактирования / удаления\n    if (isNewArticleCreated || isArticleEdited || isArticleRemoved) refreshArticles();\n  }, [isArticlesReady, isNewArticleCreated, isArticleEdited]);\n\n  return (\n    <ArticlesWrapper>\n      <ArticlesItemsWrapper>\n        {(isRequestProcessed || isArticlesReady)\n          ? renderArticles(currentPageNumber, currentPageSize)\n          : renderLoader()}\n      </ArticlesItemsWrapper>\n\n      <PaginationWrapper>\n        {renderPagination(articles.length)}\n      </PaginationWrapper>\n    </ArticlesWrapper>\n  );\n};\n\nArticlesList.propTypes = {\n  getArticles: propTypes.func,\n  articles: propTypes.arrayOf(propTypes.object),\n  isArticlesReady: propTypes.bool,\n  isRequestProcessed: propTypes.bool,\n  isNewArticleCreated: propTypes.bool,\n  refreshArticles: propTypes.func,\n  isArticleEdited: propTypes.bool,\n  isArticleRemoved: propTypes.bool,\n};\n\nArticlesList.defaultProps = {\n  getArticles: null,\n  articles: [],\n  isArticlesReady: false,\n  isRequestProcessed: false,\n  isNewArticleCreated: false,\n  refreshArticles: null,\n  isArticleEdited: false,\n  isArticleRemoved: false,\n};\n\nexport default connect(mapStateToProps, actionCreator)(ArticlesList);\n"]},"metadata":{},"sourceType":"module"}