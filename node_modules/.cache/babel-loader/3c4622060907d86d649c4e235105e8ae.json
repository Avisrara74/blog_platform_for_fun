{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\create-article\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport { FormItem, Form, FormTitle, FormSubmitButtonStyles } from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\nconst {\n  TextArea\n} = Input;\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  text: '',\n  tags: []\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Title',\n  name: 'title',\n  placeholder: 'title',\n  type: 'text'\n}, {\n  id: uniqueId(),\n  title: 'Short description',\n  name: 'description',\n  placeholder: 'description',\n  type: 'text'\n}];\nconst formikValidationSchema = Yup.object({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  text: Yup.string().required('required')\n});\n\nconst mapStateToProps = state => {};\n\nconst actionCreators = {\n  signUp: actions.signUp\n};\n\nconst CreateArticle = props => {\n  const {} = props;\n\n  const handleOnCreateArticle = async formik => {};\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnCreateArticle(formik);\n    }\n  });\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.type,\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Create new article\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \" \"), renderErrorMessage(formik, 'text')), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    style: FormSubmitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\n\nCreateArticle.propTypes = {};\nCreateArticle.defaultProps = {};\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/create-article/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","Checkbox","propTypes","Yup","actions","FormItem","Form","FormTitle","FormSubmitButtonStyles","renderErrorMessage","TextArea","formikInicialValues","title","description","text","tags","formItems","id","name","placeholder","type","formikValidationSchema","object","string","required","mapStateToProps","state","actionCreators","signUp","CreateArticle","props","handleOnCreateArticle","formik","initialValues","validationSchema","onSubmit","renderInputs","map","formItem","handleChange","values","handleSubmit","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,MAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,oBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,SACEC,QADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,sBAJF,QAKO,yBALP;AAMA,SAASC,kBAAT,QAAmC,cAAnC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeV,KAArB;AAEA,MAAMW,mBAAmB,GAAG;AAC1BC,EAAAA,KAAK,EAAE,EADmB;AAE1BC,EAAAA,WAAW,EAAE,EAFa;AAG1BC,EAAAA,IAAI,EAAE,EAHoB;AAI1BC,EAAAA,IAAI,EAAE;AAJoB,CAA5B;AAOA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,EAAE,EAAErB,QAAQ,EADd;AACkBgB,EAAAA,KAAK,EAAE,OADzB;AACkCM,EAAAA,IAAI,EAAE,OADxC;AACiDC,EAAAA,WAAW,EAAE,OAD9D;AACuEC,EAAAA,IAAI,EAAE;AAD7E,CADgB,EAIhB;AACEH,EAAAA,EAAE,EAAErB,QAAQ,EADd;AACkBgB,EAAAA,KAAK,EAAE,mBADzB;AAC8CM,EAAAA,IAAI,EAAE,aADpD;AACmEC,EAAAA,WAAW,EAAE,aADhF;AAC+FC,EAAAA,IAAI,EAAE;AADrG,CAJgB,CAAlB;AASA,MAAMC,sBAAsB,GAAGlB,GAAG,CAACmB,MAAJ,CAAW;AACxCV,EAAAA,KAAK,EAAET,GAAG,CAACoB,MAAJ,GACJC,QADI,CACK,UADL,CADiC;AAGxCX,EAAAA,WAAW,EAAEV,GAAG,CAACoB,MAAJ,GACVC,QADU,CACD,UADC,CAH2B;AAKxCV,EAAAA,IAAI,EAAEX,GAAG,CAACoB,MAAJ,GACHC,QADG,CACM,UADN;AALkC,CAAX,CAA/B;;AASA,MAAMC,eAAe,GAAIC,KAAD,IAAW,CAElC,CAFD;;AAIA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAExB,OAAO,CAACwB;AADK,CAAvB;;AAIA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM,KAAOA,KAAb;;AAEA,QAAMC,qBAAqB,GAAG,MAAOC,MAAP,IAAkB,CAE/C,CAFD;;AAKA,QAAMA,MAAM,GAAGlC,SAAS,CAAC;AACvBmC,IAAAA,aAAa,EAAEtB,mBADQ;AAEvBuB,IAAAA,gBAAgB,EAAEb,sBAFK;AAGvBc,IAAAA,QAAQ,EAAE,MAAM;AACd;AACAJ,MAAAA,qBAAqB,CAACC,MAAD,CAArB;AACD;AANsB,GAAD,CAAxB;;AASA,QAAMI,YAAY,GAAG,MACnBpB,SAAS,CAACqB,GAAV,CAAeC,QAAD,iBACZ,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACrB,EAAxB;AAA4B,IAAA,OAAO,EAAEqB,QAAQ,CAACpB,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoB,QAAQ,CAAC1B,KADZ,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE0B,QAAQ,CAAClB,IADjB;AAEE,IAAA,WAAW,EAAEkB,QAAQ,CAACnB,WAFxB;AAGE,IAAA,EAAE,EAAEmB,QAAQ,CAACpB,IAHf;AAIE,IAAA,IAAI,EAAEoB,QAAQ,CAACpB,IAJjB;AAKE,IAAA,QAAQ,EAAEc,MAAM,CAACO,YALnB;AAME,IAAA,KAAK,EAAEP,MAAM,CAACQ,MAAP,CAAcF,QAAQ,CAACpB,IAAvB,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGT,kBAAkB,CAACuB,MAAD,EAASM,QAAQ,CAACpB,IAAlB,CAVrB,CADF,CADF;;AAiBA,sBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEc,MAAM,CAACS,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGGL,YAAY,EAHf,eAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEG3B,kBAAkB,CAACuB,MAAD,EAAS,MAAT,CAFrB,CALF,eAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAC,QADX;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,OAAO,EAAEA,MAAM,CAACS,YAHlB;AAIE,IAAA,KAAK,EAAEjC,sBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAVF,CADF;AAuBD,CAzDD;;AA2DAqB,aAAa,CAAC3B,SAAd,GAA0B,EAA1B;AAIA2B,aAAa,CAACa,YAAd,GAA6B,EAA7B;AAIA,eAAe7C,OAAO,CAAC4B,eAAD,EAAkBE,cAAlB,CAAP,CAAyCE,aAAzC,CAAf","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input, Checkbox } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport {\n  FormItem,\n  Form,\n  FormTitle,\n  FormSubmitButtonStyles,\n} from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\n\nconst { TextArea } = Input;\n\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  text: '',\n  tags: [],\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Title', name: 'title', placeholder: 'title', type: 'text',\n  },\n  {\n    id: uniqueId(), title: 'Short description', name: 'description', placeholder: 'description', type: 'text',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  title: Yup.string()\n    .required('required'),\n  description: Yup.string()\n    .required('required'),\n  text: Yup.string()\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n\n};\n\nconst actionCreators = {\n  signUp: actions.signUp,\n};\n\nconst CreateArticle = (props) => {\n  const {  } = props;\n\n  const handleOnCreateArticle = async (formik) => {\n\n  };\n\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnCreateArticle(formik);\n    },\n  });\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={formItem.type}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <FormTitle>Create new article</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem>\n        <TextArea rows={6}> </TextArea>\n        {renderErrorMessage(formik, 'text')}\n      </FormItem>\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          style={FormSubmitButtonStyles}\n        >\n          Send\n        </Button>\n      </FormItem>\n    </Form>\n  );\n};\n\nCreateArticle.propTypes = {\n\n};\n\nCreateArticle.defaultProps = {\n\n};\n\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);\n\n"]},"metadata":{},"sourceType":"module"}