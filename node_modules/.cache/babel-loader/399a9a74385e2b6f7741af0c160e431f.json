{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\sign-up\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport '../style.css';\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  password: '',\n  repeatPassword: ''\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Логин:',\n  name: 'login',\n  placeholder: 'Введите логин'\n}, {\n  id: uniqueId(),\n  title: 'Почта:',\n  name: 'email',\n  placeholder: 'Введите почту'\n}, {\n  id: uniqueId(),\n  title: 'Пароль:',\n  name: 'password',\n  placeholder: 'Введите пароль'\n}, {\n  id: uniqueId(),\n  title: 'Повторите пароль:',\n  name: 'repeatPassword',\n  placeholder: 'Повторите пароль'\n}];\nconst formikValidationSchema = Yup.object({\n  login: Yup.string().max(30, 'Слишком длинный ник!').required('Заполните поле'),\n  email: Yup.string().email('Некорректный email').required('Заполните поле'),\n  password: Yup.string().min(8, 'Слишком короткий').max(50, 'Слишком длинный').matches(/^[A-Za-z0-9]+$/, 'Пароль может содержать только латинские символы и цифры').matches(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одну цифру').matches(/(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву').required('Заполните поле'),\n  repeatPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Пароли должны совпадать').required('Заполните поле')\n});\n\nconst mapStateToProps = state => {\n  const {\n    signUpState\n  } = state;\n  const isInputsDisable = signUpState === 'requested';\n  const props = {\n    isInputsDisable,\n    signUpState\n  };\n  return props;\n};\n\nconst actionCreators = {\n  signUp: actions.signUp\n};\n\nconst SignUp = props => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnSignUp();\n    }\n  });\n\n  const handleOnSignUp = async () => {\n    const {\n      signUp\n    } = props;\n    const {\n      login,\n      email,\n      password\n    } = formik.values;\n    const newUser = {\n      user: {\n        username: login,\n        email,\n        password\n      }\n    };\n    signUp(newUser);\n    formik.resetForm();\n  };\n\n  const {\n    isInputsDisable\n  } = props;\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(\"label\", {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    className: \"form-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.name === 'password' || formItem.name === 'repeatPassword' ? 'password' : 'text',\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), formik.touched[formItem.name] && formik.errors[formItem.name] ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-item-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, formik.errors[formItem.name]) : null));\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"), renderInputs(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    className: \"form-submit\",\n    onClick: formik.handleSubmit,\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign-in\",\n    className: \"form-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\")));\n};\n\nSignUp.propTypes = {\n  signUp: propTypes.func,\n  isInputsDisable: propTypes.bool\n};\nSignUp.defaultProps = {\n  signUp: null,\n  isInputsDisable: false\n};\nexport default connect(mapStateToProps, actionCreators)(SignUp);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/sign-up/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","propTypes","Yup","Link","actions","formikInicialValues","login","email","password","repeatPassword","formItems","id","title","name","placeholder","formikValidationSchema","object","string","max","required","min","matches","oneOf","ref","mapStateToProps","state","signUpState","isInputsDisable","props","actionCreators","signUp","SignUp","formik","initialValues","validationSchema","onSubmit","handleOnSignUp","values","newUser","user","username","resetForm","renderInputs","map","formItem","handleChange","touched","errors","handleSubmit","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport '../style.css';\n\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  password: '',\n  repeatPassword: '',\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Логин:', name: 'login', placeholder: 'Введите логин',\n  },\n  {\n    id: uniqueId(), title: 'Почта:', name: 'email', placeholder: 'Введите почту',\n  },\n  {\n    id: uniqueId(), title: 'Пароль:', name: 'password', placeholder: 'Введите пароль',\n  },\n  {\n    id: uniqueId(), title: 'Повторите пароль:', name: 'repeatPassword', placeholder: 'Повторите пароль',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  login: Yup.string()\n    .max(30, 'Слишком длинный ник!')\n    .required('Заполните поле'),\n  email: Yup.string()\n    .email('Некорректный email')\n    .required('Заполните поле'),\n  password: Yup.string()\n    .min(8, 'Слишком короткий')\n    .max(50, 'Слишком длинный')\n    .matches(/^[A-Za-z0-9]+$/, 'Пароль может содержать только латинские символы и цифры')\n    .matches(/(?=.*[0-9])/, 'Пароль должен содержать хотя бы одну цифру')\n    .matches(/(?=.*[A-Z])/, 'Пароль должен содержать хотя бы одну заглавную букву')\n    .required('Заполните поле'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Пароли должны совпадать')\n    .required('Заполните поле'),\n});\n\nconst mapStateToProps = (state) => {\n  const { signUpState } = state;\n  const isInputsDisable = (signUpState === 'requested');\n\n  const props = { isInputsDisable, signUpState };\n  return props;\n};\n\nconst actionCreators = {\n  signUp: actions.signUp,\n};\n\nconst SignUp = (props) => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      // eslint-disable-next-line no-use-before-define\n      handleOnSignUp();\n    },\n  });\n  const handleOnSignUp = async () => {\n    const { signUp } = props;\n    const { login, email, password } = formik.values;\n    const newUser = {\n      user: {\n        username: login,\n        email,\n        password,\n      },\n    };\n    signUp(newUser);\n    formik.resetForm();\n  };\n\n  const { isInputsDisable } = props;\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <label key={formItem.id} htmlFor={formItem.name} className=\"form-item\">\n        {formItem.title}\n        <Input\n          type={(formItem.name === 'password' || formItem.name === 'repeatPassword') ? 'password' : 'text'}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisable}\n        />\n        {formik.touched[formItem.name] && formik.errors[formItem.name] ? (\n          <div className=\"form-item-error\">{formik.errors[formItem.name]}</div>\n        ) : null}\n      </label>\n    ))\n  );\n\n  return (\n    <form onSubmit={formik.handleSubmit} className=\"form\">\n      <div className=\"form-title\">Регистрация</div>\n      {renderInputs()}\n      <div className=\"form-item\">\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          className=\"form-submit\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n        >\n          Зарегистрироваться\n        </Button>\n        <Link to=\"/sign-in\" className=\"form-link\">Страница авторизации</Link>\n      </div>\n    </form>\n  );\n};\n\nSignUp.propTypes = {\n  signUp: propTypes.func,\n  isInputsDisable: propTypes.bool,\n};\n\nSignUp.defaultProps = {\n  signUp: null,\n  isInputsDisable: false,\n};\n\nexport default connect(mapStateToProps, actionCreators)(SignUp);\n"]},"metadata":{},"sourceType":"module"}