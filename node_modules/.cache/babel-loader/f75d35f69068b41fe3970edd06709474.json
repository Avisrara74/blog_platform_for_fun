{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\edit-profile\\\\index.js\";\nimport React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nimport { Form, FormTitle, FormItem, FormSubmitButtonStyles } from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  newPassword: '',\n  avatarUrl: ''\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Username',\n  name: 'login',\n  placeholder: 'Username'\n}, {\n  id: uniqueId(),\n  title: 'Email address',\n  name: 'email',\n  placeholder: 'Email'\n}, {\n  id: uniqueId(),\n  title: 'New Password',\n  name: 'newPassword',\n  placeholder: 'New Password'\n}, {\n  id: uniqueId(),\n  title: 'Avatar image (url)',\n  name: 'avatarUrl',\n  placeholder: 'url'\n}];\nconst formikValidationSchema = Yup.object({\n  login: Yup.string().max(30, 'Your username should be no more than 30 characters!').required('required'),\n  email: Yup.string().email('Invalid email').required('required'),\n  newPassword: Yup.string().min(8, 'Your password need to be at least 6 characters.').max(50, 'Your password should be no more than 50 characters.').matches(/^[A-Za-z0-9]+$/, 'Password can be only with latin symbols and numbers').matches(/(?=.*[0-9])/, 'Your password need to be at least 1 number').matches(/(?=.*[A-Z])/, 'Your password need to be at least 1 uppercase symbol').required('required'),\n  avatarUrl: Yup.string().url('Not correct url').required('required')\n});\n\nconst EditProfile = props => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {}\n  });\n  const {\n    isInputsDisable\n  } = props;\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.name === 'password' ? 'password' : 'text',\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    disabled: isInputsDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Edit Profile\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    disabled: isInputsDisable,\n    style: FormSubmitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n};\n\nEditProfile.propTypes = {\n  isInputsDisable: propTypes.bool\n};\nEditProfile.defaultProps = {\n  isInputsDisable: false\n};\nexport default connect()(EditProfile);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/edit-profile/index.js"],"names":["React","uniqueId","connect","useFormik","Button","Input","propTypes","Yup","actions","Form","FormTitle","FormItem","FormSubmitButtonStyles","renderErrorMessage","formikInicialValues","login","email","newPassword","avatarUrl","formItems","id","title","name","placeholder","formikValidationSchema","object","string","max","required","min","matches","url","EditProfile","props","formik","initialValues","validationSchema","onSubmit","isInputsDisable","renderInputs","map","formItem","handleChange","values","handleSubmit","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Button, Input } from 'antd';\nimport propTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\n\nimport { Form, FormTitle, FormItem, FormSubmitButtonStyles } from '../../styled-components';\nimport { renderErrorMessage } from '../../helper';\n\nconst formikInicialValues = {\n  login: '',\n  email: '',\n  newPassword: '',\n  avatarUrl: '',\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Username', name: 'login', placeholder: 'Username',\n  },\n  {\n    id: uniqueId(), title: 'Email address', name: 'email', placeholder: 'Email',\n  },\n  {\n    id: uniqueId(), title: 'New Password', name: 'newPassword', placeholder: 'New Password',\n  },\n  {\n    id: uniqueId(), title: 'Avatar image (url)', name: 'avatarUrl', placeholder: 'url',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  login: Yup.string()\n    .max(30, 'Your username should be no more than 30 characters!')\n    .required('required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('required'),\n  newPassword: Yup.string()\n    .min(8, 'Your password need to be at least 6 characters.')\n    .max(50, 'Your password should be no more than 50 characters.')\n    .matches(/^[A-Za-z0-9]+$/, 'Password can be only with latin symbols and numbers')\n    .matches(/(?=.*[0-9])/, 'Your password need to be at least 1 number')\n    .matches(/(?=.*[A-Z])/, 'Your password need to be at least 1 uppercase symbol')\n    .required('required'),\n  avatarUrl: Yup.string()\n    .url('Not correct url')\n    .required('required'),\n});\n\nconst EditProfile = (props) => {\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n\n    },\n  });\n\n  const { isInputsDisable } = props;\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={(formItem.name === 'password') ? 'password' : 'text'}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n          disabled={isInputsDisable}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <FormTitle>Edit Profile</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem>\n        <Button\n          htmlType=\"submit\"\n          type=\"primary\"\n          onClick={formik.handleSubmit}\n          disabled={isInputsDisable}\n          style={FormSubmitButtonStyles}\n        >\n          Save\n        </Button>\n      </FormItem>\n    </Form>\n  );\n};\n\nEditProfile.propTypes = {\n  isInputsDisable: propTypes.bool,\n};\n\nEditProfile.defaultProps = {\n  isInputsDisable: false,\n};\n\nexport default connect()(EditProfile);\n"]},"metadata":{},"sourceType":"module"}