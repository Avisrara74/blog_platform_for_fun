{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\nconst signUpState = handleActions({\n  [actions.signUpRequest]() {\n    return 'requested';\n  },\n\n  [actions.signUpFailure]() {\n    return 'failed';\n  },\n\n  [actions.signUpSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst signInState = handleActions({\n  [actions.signInRequest]() {\n    return 'requested';\n  },\n\n  [actions.signInFailure]() {\n    return 'failed';\n  },\n\n  [actions.signInSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst editUserProfileState = handleActions({\n  [actions.editUserProfileRequest]() {\n    return 'requested';\n  },\n\n  [actions.editUserProfileFailure]() {\n    return 'failed';\n  },\n\n  [actions.editUserProfileSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst userDataInitial = {\n  username: '',\n  token: '',\n  isAuthorized: false,\n  userProfileImage: undefined\n};\nconst userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return {\n      username,\n      token,\n      isAuthorized,\n      userProfileImage\n    };\n  },\n\n  [actions.editUserProfileSuccess](state, action) {\n    const {\n      username,\n      userProfileImage\n    } = action.payload;\n    removeItemFromLocalstorage('username');\n    setItemToLocalstorage('username', username);\n    removeItemFromLocalstorage('userProfileImage');\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return {\n      username,\n      userProfileImage\n    };\n  },\n\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  }\n\n}, userDataInitial);\nconst getArticlesState = handleActions({\n  [actions.getArticlesProcess]() {\n    return 'processed';\n  },\n\n  [actions.refreshArticlesRequest]() {\n    return 'requested';\n  },\n\n  [actions.getArticlesSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst createArticleState = handleActions({\n  [actions.createArticleRequest]() {\n    return 'requested';\n  },\n\n  [actions.createArticleFailure]() {\n    return 'failed';\n  },\n\n  [actions.createArticleSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst articles = handleActions({\n  [actions.getArticlesProcess](state, action) {\n    return [...state, ...action.payload];\n  },\n\n  [actions.createArticleSuccess]() {\n    return [];\n  }\n\n}, []);\nconst oneArticleState = handleActions({\n  [actions.getOneArticleRequest]() {\n    return 'requested';\n  },\n\n  [actions.getOneArticleFailure]() {\n    return 'failed';\n  },\n\n  [actions.getOneArticleSuccess]() {\n    return 'finished';\n  }\n\n}, 'none');\nconst oneArticle = handleActions({\n  [actions.getOneArticleSuccess](state, action) {\n    return { ...action.payload\n    };\n  }\n\n}, {});\nexport default combineReducers({\n  signUpState,\n  signInState,\n  userData,\n  getArticlesState,\n  createArticleState,\n  editUserProfileState,\n  articles,\n  oneArticleState,\n  oneArticle\n});","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/redux/reducers/index.js"],"names":["combineReducers","handleActions","actions","removeItemFromLocalstorage","setItemToLocalstorage","signUpState","signUpRequest","signUpFailure","signUpSuccess","signInState","signInRequest","signInFailure","signInSuccess","editUserProfileState","editUserProfileRequest","editUserProfileFailure","editUserProfileSuccess","userDataInitial","username","token","isAuthorized","userProfileImage","undefined","userData","state","action","payload","logOutSuccess","getArticlesState","getArticlesProcess","refreshArticlesRequest","getArticlesSuccess","createArticleState","createArticleRequest","createArticleFailure","createArticleSuccess","articles","oneArticleState","getOneArticleRequest","getOneArticleFailure","getOneArticleSuccess","oneArticle"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions';\nimport { removeItemFromLocalstorage, setItemToLocalstorage } from '../../localstorage';\n\nconst signUpState = handleActions({\n  [actions.signUpRequest]() {\n    return 'requested';\n  },\n  [actions.signUpFailure]() {\n    return 'failed';\n  },\n  [actions.signUpSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst signInState = handleActions({\n  [actions.signInRequest]() {\n    return 'requested';\n  },\n  [actions.signInFailure]() {\n    return 'failed';\n  },\n  [actions.signInSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst editUserProfileState = handleActions({\n  [actions.editUserProfileRequest]() {\n    return 'requested';\n  },\n  [actions.editUserProfileFailure]() {\n    return 'failed';\n  },\n  [actions.editUserProfileSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst userDataInitial = { username: '', token: '', isAuthorized: false, userProfileImage: undefined };\nconst userData = handleActions({\n  [actions.signInSuccess](state, action) {\n    const { username, token, isAuthorized, userProfileImage } = action.payload;\n    setItemToLocalstorage('token', token);\n    setItemToLocalstorage('username', username);\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return { username, token, isAuthorized, userProfileImage };\n  },\n  [actions.editUserProfileSuccess](state, action) {\n    const { username, userProfileImage } = action.payload;\n    removeItemFromLocalstorage('username');\n    setItemToLocalstorage('username', username);\n    removeItemFromLocalstorage('userProfileImage');\n    setItemToLocalstorage('userProfileImage', userProfileImage);\n    return { username, userProfileImage };\n  },\n  [actions.logOutSuccess]() {\n    removeItemFromLocalstorage('token');\n    removeItemFromLocalstorage('username');\n    return userDataInitial;\n  },\n}, userDataInitial);\n\nconst getArticlesState = handleActions({\n  [actions.getArticlesProcess]() {\n    return 'processed';\n  },\n  [actions.refreshArticlesRequest]() {\n    return 'requested';\n  },\n  [actions.getArticlesSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst createArticleState = handleActions({\n  [actions.createArticleRequest]() {\n    return 'requested';\n  },\n  [actions.createArticleFailure]() {\n    return 'failed';\n  },\n  [actions.createArticleSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst articles = handleActions({\n  [actions.getArticlesProcess](state, action) {\n    return [...state, ...action.payload];\n  },\n  [actions.createArticleSuccess]() {\n    return [];\n  },\n}, []);\n\nconst oneArticleState = handleActions({\n  [actions.getOneArticleRequest]() {\n    return 'requested';\n  },\n  [actions.getOneArticleFailure]() {\n    return 'failed';\n  },\n  [actions.getOneArticleSuccess]() {\n    return 'finished';\n  },\n}, 'none');\n\nconst oneArticle = handleActions({\n  [actions.getOneArticleSuccess](state, action) {\n    return { ...action.payload };\n  },\n}, {});\n\nexport default combineReducers({\n  signUpState,\n  signInState,\n  userData,\n  getArticlesState,\n  createArticleState,\n  editUserProfileState,\n  articles,\n  oneArticleState,\n  oneArticle\n});\n"]},"metadata":{},"sourceType":"module"}