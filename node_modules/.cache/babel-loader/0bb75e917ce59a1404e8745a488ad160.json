{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\articles-list\\\\article.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDate } from '../../helper';\nimport * as actions from '../../redux/actions';\nimport { ArtickesLikeImg, ArticlesDate, ArticlesDescription, ArticlesHeader, ArticlesInfo, ArticlesItem, ArticlesLikesCount, ArticlesStats, ArticlesTag, ArticlesTagsWrap, articlesTitle, ArticlesUserImage, ArticlesUserInfoWrap, ArticlesUserInfoGroup, ArticlesUsername } from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport activeLikeSrc from \"../../images/like-active.svg\";\nimport disabledLikeSrc from \"../../images/like-disabled.svg\";\n\nconst mapStateToProps = state => {\n  const {\n    likeState,\n    addLikeRequestState\n  } = state;\n  console.log(state);\n  const isLikeChangedOnServer = addLikeRequestState === 'finished';\n  const isLikeChangeAlreadyRequested = addLikeRequestState === 'requested';\n  return {\n    likeState,\n    isLikeChangedOnServer,\n    isLikeChangeAlreadyRequested\n  };\n};\n\nconst actionCreator = {\n  addLike: actions.addLike\n};\n\nconst Article = props => {\n  const {\n    articles,\n    fakeLikes,\n    setFakeLikes,\n    likeState,\n    isLikeChangedOnServer,\n    isLikeChangeAlreadyRequested,\n    addLike\n  } = props;\n  const [getLikeInfoByClickOnItem, setLikeByClick] = useState({});\n\n  const likeChangeRequest = () => {\n    // все еще идет прошлый запрос на изменение лайка\n    if (isLikeChangeAlreadyRequested) {\n      console.log('отправка запрещена');\n      return false;\n    }\n\n    if (Object.keys(getLikeInfoByClickOnItem).length !== 0) {\n      if (likeState === 'firstRequestForCheckState') {\n        addLike(getLikeInfoByClickOnItem.isLiked, getLikeInfoByClickOnItem.slug);\n        return;\n      }\n\n      if (likeState !== getLikeInfoByClickOnItem.isLiked) {\n        // отправляем новый\n        console.log('отправляем новый');\n        console.log('возвращенный state', likeState);\n        console.log('текущий state', getLikeInfoByClickOnItem.isLiked);\n        addLike(getLikeInfoByClickOnItem.isLiked, getLikeInfoByClickOnItem.slug);\n      }\n    }\n  };\n\n  useEffect(() => {\n    likeChangeRequest();\n  }, [fakeLikes, getLikeInfoByClickOnItem]);\n\n  const renderArticle = () => {\n    return articles.map(article => {\n      const {\n        author,\n        createdAt,\n        description,\n        id,\n        tagList,\n        title,\n        slug\n      } = article;\n      const {\n        username,\n        image\n      } = author;\n      const dateDiff = getDate(createdAt);\n\n      const renderTagList = () => tagList.map(tag => /*#__PURE__*/React.createElement(ArticlesTag, {\n        key: tag.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 30\n        }\n      }, tag.title)); // визуальное изменение лайка для пользователя\n\n\n      const getFakeLike = () => {\n        if (fakeLikes === undefined) return null;\n        return fakeLikes.filter(el => el.id === id)[0];\n      }; // рендер лайка\n\n\n      const fakeLikeSrc = () => {\n        if (getFakeLike() === undefined) return disabledLikeSrc;\n        return getFakeLike().isLiked ? activeLikeSrc : disabledLikeSrc;\n      }; // рендер счетчика лайков\n\n\n      const fakeLikeCounter = () => {\n        if (getFakeLike() === undefined) return 0;\n        return getFakeLike().likesCount;\n      };\n      /*\n          1) пользователь нажимает на фейк-лайк\n          2) отправляется запрос на сервер с измененным фейк-состоянием\n             если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n          3) приходит ответ с изменённым состоянием\n             после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n             если да, то оставляем всё как есть\n             если нет, то снова отправляем запрос на сервер\n      */\n\n\n      const handleOnLikeArticle = () => {\n        setFakeLikes(state => {\n          const newState = state.map(el => {\n            if (el.id === id) {\n              return { ...el,\n                isLiked: !el.isLiked,\n                likesCount: el.isLiked ? el.likesCount - 1 : el.likesCount + 1\n              };\n            }\n\n            return el;\n          });\n          return newState;\n        });\n        setLikeByClick(() => ({\n          id,\n          slug,\n          isLiked: !getFakeLike().isLiked\n        }));\n      };\n\n      return /*#__PURE__*/React.createElement(ArticlesItem, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: articlesTitle,\n        to: articleUrl(slug),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, title), /*#__PURE__*/React.createElement(ArticlesStats, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ArtickesLikeImg, {\n        onClick: handleOnLikeArticle,\n        src: fakeLikeSrc(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ArticlesLikesCount, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, fakeLikeCounter()))), /*#__PURE__*/React.createElement(ArticlesTagsWrap, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, renderTagList()), /*#__PURE__*/React.createElement(ArticlesDescription, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, description)), /*#__PURE__*/React.createElement(ArticlesUserInfoWrap, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesUserInfoGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ArticlesUsername, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }\n      }, username), /*#__PURE__*/React.createElement(ArticlesDate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, dateDiff)), /*#__PURE__*/React.createElement(ArticlesUserImage, {\n        src: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      })));\n    });\n  };\n\n  return renderArticle();\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/articles-list/article.js"],"names":["React","useEffect","useState","connect","Link","getDate","actions","ArtickesLikeImg","ArticlesDate","ArticlesDescription","ArticlesHeader","ArticlesInfo","ArticlesItem","ArticlesLikesCount","ArticlesStats","ArticlesTag","ArticlesTagsWrap","articlesTitle","ArticlesUserImage","ArticlesUserInfoWrap","ArticlesUserInfoGroup","ArticlesUsername","articleUrl","mapStateToProps","state","likeState","addLikeRequestState","console","log","isLikeChangedOnServer","isLikeChangeAlreadyRequested","actionCreator","addLike","Article","props","articles","fakeLikes","setFakeLikes","getLikeInfoByClickOnItem","setLikeByClick","likeChangeRequest","Object","keys","length","isLiked","slug","renderArticle","map","article","author","createdAt","description","id","tagList","title","username","image","dateDiff","renderTagList","tag","getFakeLike","undefined","filter","el","fakeLikeSrc","disabledLikeSrc","activeLikeSrc","fakeLikeCounter","likesCount","handleOnLikeArticle","newState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getDate } from '../../helper';\nimport * as actions from '../../redux/actions';\nimport {\n  ArtickesLikeImg, ArticlesDate, ArticlesDescription,\n  ArticlesHeader,\n  ArticlesInfo, ArticlesItem, ArticlesLikesCount,\n  ArticlesStats,\n  ArticlesTag, ArticlesTagsWrap,\n  articlesTitle, ArticlesUserImage, ArticlesUserInfoWrap, ArticlesUserInfoGroup, ArticlesUsername,\n} from '../../styled-components';\nimport { articleUrl } from '../../routes';\nimport activeLikeSrc from '../../images/like-active.svg';\nimport disabledLikeSrc from '../../images/like-disabled.svg';\n\nconst mapStateToProps = (state) => {\n  const { likeState, addLikeRequestState } = state;\n  console.log(state);\n\n  const isLikeChangedOnServer = addLikeRequestState === 'finished';\n  const isLikeChangeAlreadyRequested = addLikeRequestState === 'requested';\n\n  return { likeState, isLikeChangedOnServer, isLikeChangeAlreadyRequested };\n};\n\nconst actionCreator = {\n  addLike: actions.addLike,\n};\n\nconst Article = (props) => {\n  const {\n    articles, fakeLikes, setFakeLikes, likeState, isLikeChangedOnServer, isLikeChangeAlreadyRequested, addLike,\n  } = props;\n  const [getLikeInfoByClickOnItem, setLikeByClick] = useState({});\n\n  const likeChangeRequest = () => {\n    // все еще идет прошлый запрос на изменение лайка\n    if (isLikeChangeAlreadyRequested) {\n      console.log('отправка запрещена');\n      return false;\n    }\n\n    if (Object.keys(getLikeInfoByClickOnItem).length !== 0) {\n      \n      if (likeState === 'firstRequestForCheckState') {\n        addLike(getLikeInfoByClickOnItem.isLiked, getLikeInfoByClickOnItem.slug);\n        return;\n      }\n\n      if (likeState !== getLikeInfoByClickOnItem.isLiked) {\n        // отправляем новый\n        console.log('отправляем новый');\n        console.log('возвращенный state', likeState);\n        console.log('текущий state', getLikeInfoByClickOnItem.isLiked);\n        addLike(getLikeInfoByClickOnItem.isLiked, getLikeInfoByClickOnItem.slug);\n      }\n    }\n  }\n\n  useEffect(() => {\n    likeChangeRequest();\n  }, [fakeLikes, getLikeInfoByClickOnItem]);\n\n  const renderArticle = () => {\n    return articles.map((article) => {\n      const {\n        author, createdAt, description, id, tagList, title, slug,\n      } = article;\n      const { username, image } = author;\n      const dateDiff = getDate(createdAt);\n\n      const renderTagList = () => (\n        tagList.map((tag) => <ArticlesTag key={tag.id}>{tag.title}</ArticlesTag>)\n      );\n\n      // визуальное изменение лайка для пользователя\n      const getFakeLike = () => {\n        if (fakeLikes === undefined) return null;\n        return fakeLikes.filter((el) => el.id === id)[0];\n      };\n\n      // рендер лайка\n      const fakeLikeSrc = () => {\n        if (getFakeLike() === undefined) return disabledLikeSrc;\n        return getFakeLike().isLiked ? activeLikeSrc : disabledLikeSrc;\n      };\n\n      // рендер счетчика лайков\n      const fakeLikeCounter = () => {\n        if (getFakeLike() === undefined) return 0;\n        return getFakeLike().likesCount;\n      };\n      /*\n          1) пользователь нажимает на фейк-лайк\n          2) отправляется запрос на сервер с измененным фейк-состоянием\n             если пользователь нажимает на лайк пока запрос идет, то повторный запрос не отправляется\n          3) приходит ответ с изменённым состоянием\n             после ответа проверяем, состояние фейк-лайка такое же как и у обновлённого состояния?\n             если да, то оставляем всё как есть\n             если нет, то снова отправляем запрос на сервер\n      */\n      const handleOnLikeArticle = () => {\n        setFakeLikes((state) => {\n          const newState = state.map((el) => {\n            if (el.id === id) {\n              return {\n                ...el,\n                isLiked: !el.isLiked,\n                likesCount: (el.isLiked) ? el.likesCount - 1 : el.likesCount + 1,\n              };\n            }\n            return el;\n          });\n          return newState;\n        });\n\n        setLikeByClick(() => ({\n          id, slug, isLiked: !getFakeLike().isLiked,\n        }));\n      };\n\n      return (\n        <ArticlesItem key={id}>\n          <ArticlesInfo>\n            <ArticlesHeader>\n              <Link style={articlesTitle} to={articleUrl(slug)}>\n                {title}\n              </Link>\n              <ArticlesStats>\n                <ArtickesLikeImg\n                  onClick={handleOnLikeArticle}\n                  src={fakeLikeSrc()}\n                />\n                <ArticlesLikesCount>{fakeLikeCounter()}</ArticlesLikesCount>\n              </ArticlesStats>\n            </ArticlesHeader>\n            <ArticlesTagsWrap>\n              {renderTagList()}\n            </ArticlesTagsWrap>\n\n            <ArticlesDescription>\n              {description}\n            </ArticlesDescription>\n          </ArticlesInfo>\n\n          <ArticlesUserInfoWrap>\n            <ArticlesUserInfoGroup>\n              <ArticlesUsername>{username}</ArticlesUsername>\n              <ArticlesDate>{dateDiff}</ArticlesDate>\n            </ArticlesUserInfoGroup>\n            <ArticlesUserImage src={image} />\n          </ArticlesUserInfoWrap>\n        </ArticlesItem>\n      );\n    });\n  }\n\n  return renderArticle();\n};\n\nexport default connect(mapStateToProps, actionCreator)(Article);\n"]},"metadata":{},"sourceType":"module"}