{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\create-article\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\nimport { mainUrl } from '../../routes';\nimport { Button, Input } from 'antd';\nimport ReactMarkdown from 'react-markdown';\nimport propTypes from 'prop-types';\nimport { renderErrorMessage } from '../../helper';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\nconst {\n  TextArea\n} = Input;\nimport { FormItem, FormArticle, FormTitle, FormItemTagsWrap, FormAddTagButton, FormRemoveTagButton, FormItemTagsTitle, FormItemTag } from '../../styled-components';\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%'\n};\nconst formAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4\n};\nconst markdownStyles = {\n  flexGrow: 1\n};\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagText: '',\n  tagList: []\n};\nconst formItems = [{\n  id: uniqueId(),\n  title: 'Title',\n  name: 'title',\n  placeholder: 'Title',\n  type: 'text'\n}, {\n  id: uniqueId(),\n  title: 'Short description',\n  name: 'description',\n  placeholder: 'Description',\n  type: 'text'\n}];\nconst formikValidationSchema = Yup.object({\n  title: Yup.string().required('required'),\n  description: Yup.string().required('required'),\n  body: Yup.string().required('required')\n});\n\nconst mapStateToProps = state => {\n  const {\n    createArticleState\n  } = state;\n  return {\n    isArticlePublished: createArticleState === 'finished'\n  };\n};\n\nconst actionCreators = {\n  createArticle: actions.createArticle\n};\n\nconst CreateArticle = props => {\n  const {\n    isArticlePublished\n  } = props;\n  let history = useHistory();\n\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  const handleOnCreateArticle = async formik => {\n    const {\n      createArticle\n    } = props;\n    const {\n      title,\n      description,\n      body,\n      tagList\n    } = formik.values;\n    const tags = tagList.map(tag => tag.value);\n    const articleBody = {\n      title,\n      description,\n      body,\n      tagList: tags\n    };\n    createArticle(articleBody, formik);\n  };\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnCreateArticle(formik);\n    }\n  });\n\n  const handleOnAddTag = () => {\n    const {\n      tagText,\n      tagList\n    } = formik.values;\n\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      value: tagText\n    };\n    const newTagsArray = [...tagList, initialNewTag];\n    formik.setFieldValue('tagList', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = id => () => {\n    const {\n      tagList\n    } = formik.values;\n    const newTagsArray = tagList.filter(tag => tag.id !== id);\n    formik.setFieldValue('tags', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnChangeTextArea = value => {\n    formik.setFieldValue('body', value);\n  };\n\n  const renderTags = () => {\n    const {\n      tagList\n    } = formik.values;\n    if (tagList.length === 0) return null;\n    return tagList.map(tag => {\n      const {\n        id,\n        value\n      } = tag;\n      return /*#__PURE__*/React.createElement(FormItemTag, {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        style: formAddTagInputStyles,\n        onChange: formik.handleChange,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n        onClick: handleOnRemoveTag(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    });\n  };\n\n  useEffect(() => {\n    if (isArticlePublished) redirectToHome();\n  }, [isArticlePublished]);\n\n  const renderInputs = () => formItems.map(formItem => /*#__PURE__*/React.createElement(FormItem, {\n    key: formItem.id,\n    htmlFor: formItem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, formItem.title, /*#__PURE__*/React.createElement(Input, {\n    type: formItem.type,\n    placeholder: formItem.placeholder,\n    id: formItem.name,\n    name: formItem.name,\n    onChange: formik.handleChange,\n    value: formik.values[formItem.name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, formItem.name)));\n\n  return /*#__PURE__*/React.createElement(FormArticle, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"Create new article\"), renderInputs(), /*#__PURE__*/React.createElement(FormItem, {\n    htmlFor: \"body\",\n    style: markdownStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, \"Text\", /*#__PURE__*/React.createElement(TextArea, {\n    name: \"body\",\n    id: \"body\",\n    onChange: formik.handleChange,\n    value: formik.values.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), renderErrorMessage(formik, 'body')), /*#__PURE__*/React.createElement(FormItemTagsWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItemTagsTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, \"Tags\"), renderTags(), /*#__PURE__*/React.createElement(FormItemTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"tagText\",\n    id: \"tagText\",\n    placeholder: \"write tag\",\n    style: formAddTagInputStyles,\n    onChange: formik.handleChange,\n    value: formik.values.tagText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormRemoveTagButton, {\n    onClick: handleOnClearTagInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(FormAddTagButton, {\n    onClick: handleOnAddTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Add tag\"))), /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    onClick: formik.handleSubmit,\n    style: formSubmitButtonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\n\nCreateArticle.propTypes = {};\nCreateArticle.defaultProps = {};\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/create-article/index.js"],"names":["React","useEffect","uniqueId","connect","useFormik","useHistory","mainUrl","Button","Input","ReactMarkdown","propTypes","renderErrorMessage","Yup","actions","TextArea","FormItem","FormArticle","FormTitle","FormItemTagsWrap","FormAddTagButton","FormRemoveTagButton","FormItemTagsTitle","FormItemTag","formSubmitButtonStyles","height","maxWidth","width","formAddTagInputStyles","borderRadius","markdownStyles","flexGrow","formikInicialValues","title","description","body","tagText","tagList","formItems","id","name","placeholder","type","formikValidationSchema","object","string","required","mapStateToProps","state","createArticleState","isArticlePublished","actionCreators","createArticle","CreateArticle","props","history","redirectToHome","push","handleOnCreateArticle","formik","values","tags","map","tag","value","articleBody","initialValues","validationSchema","onSubmit","handleOnAddTag","trim","length","setFieldValue","initialNewTag","newTagsArray","handleOnRemoveTag","filter","handleOnClearTagInput","handleOnChangeTextArea","renderTags","handleChange","renderInputs","formItem","handleSubmit","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { uniqueId } from 'lodash';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router';\nimport { mainUrl } from '../../routes';\nimport { Button, Input } from 'antd';\nimport ReactMarkdown from 'react-markdown';\nimport propTypes from 'prop-types';\nimport { renderErrorMessage } from '../../helper';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport * as actions from '../../redux/actions';\n\nconst { TextArea } = Input;\n\nimport {\n  FormItem,\n  FormArticle,\n  FormTitle,\n  FormItemTagsWrap,\n  FormAddTagButton,\n  FormRemoveTagButton,\n  FormItemTagsTitle,\n  FormItemTag,\n} from '../../styled-components';\n\nconst formSubmitButtonStyles = {\n  height: 40,\n  maxWidth: 320,\n  width: '100%',\n};\n\nconst formAddTagInputStyles = {\n  maxWidth: 300,\n  width: '100%',\n  borderRadius: 4,\n};\n\nconst markdownStyles = {\n  flexGrow: 1,\n}\n\nconst formikInicialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagText: '',\n  tagList: [],\n};\n\nconst formItems = [\n  {\n    id: uniqueId(), title: 'Title', name: 'title', placeholder: 'Title', type: 'text',\n  },\n  {\n    id: uniqueId(), title: 'Short description', name: 'description', placeholder: 'Description', type: 'text',\n  },\n];\n\nconst formikValidationSchema = Yup.object({\n  title: Yup.string()\n    .required('required'),\n  description: Yup.string()\n    .required('required'),\n  body: Yup.string()\n    .required('required'),\n});\n\nconst mapStateToProps = (state) => {\n  const { createArticleState } = state;\n  return {\n    isArticlePublished: createArticleState === 'finished',\n  };\n};\n\nconst actionCreators = {\n  createArticle: actions.createArticle,\n};\n\nconst CreateArticle = (props) => {\n  const { isArticlePublished } = props;\n  let history = useHistory();\n  const redirectToHome = () => {\n    history.push(mainUrl);\n  };\n\n  const handleOnCreateArticle = async (formik) => {\n    const { createArticle } = props;\n    const { title, description, body, tagList } = formik.values;\n    const tags = tagList.map((tag) => tag.value);\n\n    const articleBody = {\n      title, description, body, tagList: tags,\n    };\n\n    createArticle(articleBody, formik);\n  }\n\n  const formik = useFormik({\n    initialValues: formikInicialValues,\n    validationSchema: formikValidationSchema,\n    onSubmit: () => {\n      handleOnCreateArticle(formik);\n    },\n  });\n\n  const handleOnAddTag = () => {\n    const { tagText, tagList } = formik.values;\n    if (tagText.trim().length === 0) {\n      formik.setFieldValue('tagText', '');\n      return;\n    }\n\n    const initialNewTag = {\n      id: uniqueId(),\n      value: tagText,\n    };\n\n    const newTagsArray = [...tagList, initialNewTag];\n    formik.setFieldValue('tagList', newTagsArray);\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnRemoveTag = (id) => () => {\n    const { tagList } = formik.values;\n\n    const newTagsArray = tagList.filter((tag) => tag.id !== id);\n\n    formik.setFieldValue('tags', newTagsArray);\n  };\n\n  const handleOnClearTagInput = () => {\n    formik.setFieldValue('tagText', '');\n  };\n\n  const handleOnChangeTextArea = (value) => {\n    formik.setFieldValue('body', value);\n  }\n\n  const renderTags = () => {\n    const { tagList } = formik.values;\n    if (tagList.length === 0) return null;\n\n    return tagList.map((tag) => {\n      const { id, value } = tag;\n\n      return (\n        <FormItemTag key={id}>\n          <Input\n            style={formAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={value}\n          />\n          <FormRemoveTagButton onClick={handleOnRemoveTag(id)}>Delete</FormRemoveTagButton>\n        </FormItemTag>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (isArticlePublished) redirectToHome();\n  }, [isArticlePublished]);\n\n  const renderInputs = () => (\n    formItems.map((formItem) => (\n      <FormItem key={formItem.id} htmlFor={formItem.name}>\n        {formItem.title}\n        <Input\n          type={formItem.type}\n          placeholder={formItem.placeholder}\n          id={formItem.name}\n          name={formItem.name}\n          onChange={formik.handleChange}\n          value={formik.values[formItem.name]}\n        />\n        {renderErrorMessage(formik, formItem.name)}\n      </FormItem>\n    ))\n  );\n\n  return (\n    <FormArticle onSubmit={formik.handleSubmit}>\n      <FormTitle>Create new article</FormTitle>\n\n      {renderInputs()}\n\n      <FormItem htmlFor=\"body\" style={markdownStyles}>\n        Text\n        <TextArea\n          name=\"body\"\n          id=\"body\"\n          onChange={formik.handleChange}\n          value={formik.values.body}\n        />\n        {renderErrorMessage(formik, 'body')}\n      </FormItem>\n\n      <FormItemTagsWrap>\n        <FormItemTagsTitle>Tags</FormItemTagsTitle>\n        {renderTags()}\n        <FormItemTag>\n          <Input\n            name=\"tagText\"\n            id=\"tagText\"\n            placeholder=\"write tag\"\n            style={formAddTagInputStyles}\n            onChange={formik.handleChange}\n            value={formik.values.tagText}\n          />\n          <FormRemoveTagButton onClick={handleOnClearTagInput}>Delete</FormRemoveTagButton>\n          <FormAddTagButton onClick={handleOnAddTag}>Add tag</FormAddTagButton>\n        </FormItemTag>\n      </FormItemTagsWrap>\n\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        onClick={formik.handleSubmit}\n        style={formSubmitButtonStyles}\n      >\n        Send\n      </Button>\n    </FormArticle>\n  );\n};\n\nCreateArticle.propTypes = {\n\n};\n\nCreateArticle.defaultProps = {\n\n};\n\nexport default connect(mapStateToProps, actionCreators)(CreateArticle);\n"]},"metadata":{},"sourceType":"module"}