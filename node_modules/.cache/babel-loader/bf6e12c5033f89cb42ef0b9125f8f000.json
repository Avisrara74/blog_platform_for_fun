{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\articles-list\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { renderLoader } from '../../helper';\nimport { ArticlesWrapper, PaginationWrapper, ArticlesItemsWrapper } from '../../styled-components';\nimport Article from './article';\n\nconst mapStateToProps = state => {\n  const {\n    articles,\n    getArticlesState,\n    createArticleState\n  } = state;\n  const props = {\n    articles,\n    isArticlesReady: getArticlesState === 'finished',\n    isRequestProcessed: getArticlesState === 'processed',\n    isNewArticleCreated: createArticleState === 'finished'\n  };\n  return props;\n};\n\nconst actionCreator = {\n  getArticles: actions.getArticles,\n  refreshArticles: actions.refreshArticles\n};\n\nconst ArticlesList = props => {\n  const {\n    getArticles,\n    articles,\n    isArticlesReady,\n    isRequestProcessed,\n    isNewArticleCreated,\n    refreshArticles\n  } = props;\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const [currentPageSize, setPageSize] = useState(5); // делаем фейковые лайки для визуального обновления без лишних запросов на сервер\n\n  const [fakeLikes, setFakeLikes] = useState([]);\n\n  const getArticlesRequest = async () => {\n    await getArticles();\n    setFakeLikes(state => articles.map(el => ({\n      id: el.id,\n      isLiked: el.favorited,\n      likesCount: el.favoritesCount\n    })));\n  };\n\n  const renderArticles = (pageNumber, pageSize) => {\n    const from = pageNumber * pageSize - pageSize;\n    const to = pageNumber * pageSize;\n    const currentArticlesArray = Array.from(articles).slice(from, to);\n    const currentFakeLikes = Array.from(fakeLikes).slice(from, to);\n    console.log(currentFakeLikes);\n    return /*#__PURE__*/React.createElement(Article, {\n      articles: currentArticlesArray,\n      fakeLikes: currentFakeLikes,\n      setFakeLikes: setFakeLikes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const handleOnChangePagination = (value, pageSize) => {\n    setCurrentPageNumber(value);\n    setPageSize(pageSize);\n  };\n\n  const renderPagination = total => /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    total: total,\n    pageSize: 5,\n    showSizeChanger: false,\n    onChange: handleOnChangePagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  });\n\n  useEffect(() => {\n    // получаем посты пока они есть и убираем дублирование запроса если создан новый пост\n    if (!isArticlesReady && !isNewArticleCreated) {\n      getArticlesRequest();\n    }\n\n    ; // обновляем посты после создания нового\n\n    if (isNewArticleCreated) refreshArticles();\n  }, [isArticlesReady, isNewArticleCreated]);\n  return /*#__PURE__*/React.createElement(ArticlesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ArticlesItemsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, isRequestProcessed || isArticlesReady ? renderArticles(currentPageNumber, currentPageSize) : renderLoader()), /*#__PURE__*/React.createElement(PaginationWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, renderPagination(articles.length)));\n};\n\nexport default connect(mapStateToProps, actionCreator)(ArticlesList);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/articles-list/index.js"],"names":["React","useEffect","useState","Pagination","connect","actions","renderLoader","ArticlesWrapper","PaginationWrapper","ArticlesItemsWrapper","Article","mapStateToProps","state","articles","getArticlesState","createArticleState","props","isArticlesReady","isRequestProcessed","isNewArticleCreated","actionCreator","getArticles","refreshArticles","ArticlesList","currentPageNumber","setCurrentPageNumber","currentPageSize","setPageSize","fakeLikes","setFakeLikes","getArticlesRequest","map","el","id","isLiked","favorited","likesCount","favoritesCount","renderArticles","pageNumber","pageSize","from","to","currentArticlesArray","Array","slice","currentFakeLikes","console","log","handleOnChangePagination","value","renderPagination","total","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SACEC,eADF,EAEEC,iBAFF,EAGEC,oBAHF,QAIO,yBAJP;AAKA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,gBAAZ;AAA8BC,IAAAA;AAA9B,MAAqDH,KAA3D;AAEA,QAAMI,KAAK,GAAG;AACZH,IAAAA,QADY;AAEZI,IAAAA,eAAe,EAAEH,gBAAgB,KAAK,UAF1B;AAGZI,IAAAA,kBAAkB,EAAEJ,gBAAgB,KAAK,WAH7B;AAIZK,IAAAA,mBAAmB,EAAEJ,kBAAkB,KAAK;AAJhC,GAAd;AAOA,SAAOC,KAAP;AACD,CAXD;;AAaA,MAAMI,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAEhB,OAAO,CAACgB,WADD;AAEpBC,EAAAA,eAAe,EAAEjB,OAAO,CAACiB;AAFL,CAAtB;;AAKA,MAAMC,YAAY,GAAIP,KAAD,IAAW;AAC9B,QAAM;AACJK,IAAAA,WADI;AACSR,IAAAA,QADT;AACmBI,IAAAA,eADnB;AACoCC,IAAAA,kBADpC;AACwDC,IAAAA,mBADxD;AAC6EG,IAAAA;AAD7E,MAEFN,KAFJ;AAIA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CvB,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAACwB,eAAD,EAAkBC,WAAlB,IAAiCzB,QAAQ,CAAC,CAAD,CAA/C,CAN8B,CAQ9B;;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAM4B,kBAAkB,GAAG,YAAY;AACrC,UAAMT,WAAW,EAAjB;AACAQ,IAAAA,YAAY,CAAEjB,KAAD,IAAWC,QAAQ,CAACkB,GAAT,CAAcC,EAAD,KAAS;AAC5CC,MAAAA,EAAE,EAAED,EAAE,CAACC,EADqC;AACjCC,MAAAA,OAAO,EAAEF,EAAE,CAACG,SADqB;AACVC,MAAAA,UAAU,EAAEJ,EAAE,CAACK;AADL,KAAT,CAAb,CAAZ,CAAZ;AAGD,GALD;;AAOA,QAAMC,cAAc,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC/C,UAAMC,IAAI,GAAGF,UAAU,GAAGC,QAAb,GAAwBA,QAArC;AACA,UAAME,EAAE,GAAGH,UAAU,GAAGC,QAAxB;AACA,UAAMG,oBAAoB,GAAGC,KAAK,CAACH,IAAN,CAAW5B,QAAX,EAAqBgC,KAArB,CAA2BJ,IAA3B,EAAiCC,EAAjC,CAA7B;AACA,UAAMI,gBAAgB,GAAGF,KAAK,CAACH,IAAN,CAAWb,SAAX,EAAsBiB,KAAtB,CAA4BJ,IAA5B,EAAkCC,EAAlC,CAAzB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AAEA,wBAAO,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEH,oBAAnB;AAAyC,MAAA,SAAS,EAAEG,gBAApD;AAAsE,MAAA,YAAY,EAAEjB,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GARD;;AAUA,QAAMoB,wBAAwB,GAAG,CAACC,KAAD,EAAQV,QAAR,KAAqB;AACpDf,IAAAA,oBAAoB,CAACyB,KAAD,CAApB;AACAvB,IAAAA,WAAW,CAACa,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMW,gBAAgB,GAAIC,KAAD,iBACvB,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEA,KAFT;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,IAAA,eAAe,EAAE,KAJnB;AAKE,IAAA,QAAQ,EAAEH,wBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAUAhD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACgB,eAAD,IAAoB,CAACE,mBAAzB,EAA8C;AAC5CW,MAAAA,kBAAkB;AACnB;;AAAA,KAJa,CAMd;;AACA,QAAIX,mBAAJ,EAAyBG,eAAe;AACzC,GARQ,EAQN,CAACL,eAAD,EAAkBE,mBAAlB,CARM,CAAT;AAUA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,kBAAkB,IAAID,eAAvB,GACGqB,cAAc,CAACd,iBAAD,EAAoBE,eAApB,CADjB,GAEGpB,YAAY,EAHlB,CADF,eAOE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG6C,gBAAgB,CAACtC,QAAQ,CAACwC,MAAV,CADnB,CAPF,CADF;AAaD,CAlED;;AAoEA,eAAejD,OAAO,CAACO,eAAD,EAAkBS,aAAlB,CAAP,CAAwCG,YAAxC,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { renderLoader } from '../../helper';\nimport {\n  ArticlesWrapper,\n  PaginationWrapper,\n  ArticlesItemsWrapper,\n} from '../../styled-components';\nimport Article from './article';\n\nconst mapStateToProps = (state) => {\n  const { articles, getArticlesState, createArticleState } = state;\n\n  const props = {\n    articles,\n    isArticlesReady: getArticlesState === 'finished',\n    isRequestProcessed: getArticlesState === 'processed',\n    isNewArticleCreated: createArticleState === 'finished',\n  };\n\n  return props;\n};\n\nconst actionCreator = {\n  getArticles: actions.getArticles,\n  refreshArticles: actions.refreshArticles,\n};\n\nconst ArticlesList = (props) => {\n  const {\n    getArticles, articles, isArticlesReady, isRequestProcessed, isNewArticleCreated, refreshArticles,\n  } = props;\n\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const [currentPageSize, setPageSize] = useState(5);\n\n  // делаем фейковые лайки для визуального обновления без лишних запросов на сервер\n  const [fakeLikes, setFakeLikes] = useState([]);\n\n  const getArticlesRequest = async () => {\n    await getArticles();\n    setFakeLikes((state) => articles.map((el) => ({\n      id: el.id, isLiked: el.favorited, likesCount: el.favoritesCount\n    })));\n  };\n\n  const renderArticles = (pageNumber, pageSize) => {\n    const from = pageNumber * pageSize - pageSize;\n    const to = pageNumber * pageSize;\n    const currentArticlesArray = Array.from(articles).slice(from, to);\n    const currentFakeLikes = Array.from(fakeLikes).slice(from, to);\n    console.log(currentFakeLikes);\n\n    return <Article articles={currentArticlesArray} fakeLikes={currentFakeLikes} setFakeLikes={setFakeLikes} />;\n  };\n\n  const handleOnChangePagination = (value, pageSize) => {\n    setCurrentPageNumber(value);\n    setPageSize(pageSize);\n  };\n\n  const renderPagination = (total) => (\n    <Pagination\n      size=\"small\"\n      total={total}\n      pageSize={5}\n      showSizeChanger={false}\n      onChange={handleOnChangePagination}\n    />\n  );\n\n  useEffect(() => {\n    // получаем посты пока они есть и убираем дублирование запроса если создан новый пост\n    if (!isArticlesReady && !isNewArticleCreated) {\n      getArticlesRequest();\n    };\n\n    // обновляем посты после создания нового\n    if (isNewArticleCreated) refreshArticles();\n  }, [isArticlesReady, isNewArticleCreated]);\n\n  return (\n    <ArticlesWrapper>\n      <ArticlesItemsWrapper>\n        {(isRequestProcessed || isArticlesReady)\n          ? renderArticles(currentPageNumber, currentPageSize)\n          : renderLoader()}\n      </ArticlesItemsWrapper>\n\n      <PaginationWrapper>\n        {renderPagination(articles.length)}\n      </PaginationWrapper>\n    </ArticlesWrapper>\n  );\n};\n\nexport default connect(mapStateToProps, actionCreator)(ArticlesList);\n"]},"metadata":{},"sourceType":"module"}