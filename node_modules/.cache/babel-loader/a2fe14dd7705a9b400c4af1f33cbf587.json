{"ast":null,"code":"import { createAction } from 'redux-actions';\nimport * as api from '../../API/auth';\nexport const signUpRequest = createAction('SIGN_UP_REQUEST');\nexport const signUpSuccess = createAction('SIGN_UP_SUCCESS');\nexport const signUpFailure = createAction('SIGN_UP_FAILURE'); // регистрация\n\nexport const signUp = (newUserData, formik) => async dispatch => {\n  dispatch(signUpRequest());\n\n  try {\n    await api.signUpProcess(newUserData, formik);\n    dispatch(signUpSuccess());\n  } catch (err) {\n    dispatch(signUpFailure());\n  }\n};\nexport const signInRequest = createAction('LOG_IN_REQUEST');\nexport const signInSuccess = createAction('LOG_IN_SUCCESS');\nexport const signInFailure = createAction('LOG_IN_FAILURE'); // авторизация\n\nexport const signIn = (userData, formik) => async dispatch => {\n  dispatch(signInRequest());\n\n  try {\n    const responseUserData = await api.signInProcess(userData, formik);\n    dispatch(signInSuccess(responseUserData));\n  } catch (err) {\n    dispatch(signInFailure());\n  }\n};\nexport const logOutSuccess = createAction('LOGOUT_SUCCESS');","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/redux/actions/auth.js"],"names":["createAction","api","signUpRequest","signUpSuccess","signUpFailure","signUp","newUserData","formik","dispatch","signUpProcess","err","signInRequest","signInSuccess","signInFailure","signIn","userData","responseUserData","signInProcess","logOutSuccess"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,gBAArB;AAEA,OAAO,MAAMC,aAAa,GAAGF,YAAY,CAAC,iBAAD,CAAlC;AACP,OAAO,MAAMG,aAAa,GAAGH,YAAY,CAAC,iBAAD,CAAlC;AACP,OAAO,MAAMI,aAAa,GAAGJ,YAAY,CAAC,iBAAD,CAAlC,C,CAEP;;AACA,OAAO,MAAMK,MAAM,GAAG,CAACC,WAAD,EAAcC,MAAd,KAAyB,MAAOC,QAAP,IAAoB;AACjEA,EAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAMD,GAAG,CAACQ,aAAJ,CAAkBH,WAAlB,EAA+BC,MAA/B,CAAN;AACAC,IAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACD,GAHD,CAGE,OAAOO,GAAP,EAAY;AACZF,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMO,aAAa,GAAGX,YAAY,CAAC,gBAAD,CAAlC;AACP,OAAO,MAAMY,aAAa,GAAGZ,YAAY,CAAC,gBAAD,CAAlC;AACP,OAAO,MAAMa,aAAa,GAAGb,YAAY,CAAC,gBAAD,CAAlC,C,CAEP;;AACA,OAAO,MAAMc,MAAM,GAAG,CAACC,QAAD,EAAWR,MAAX,KAAsB,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAACG,aAAa,EAAd,CAAR;;AACA,MAAI;AACF,UAAMK,gBAAgB,GAAG,MAAMf,GAAG,CAACgB,aAAJ,CAAkBF,QAAlB,EAA4BR,MAA5B,CAA/B;AACAC,IAAAA,QAAQ,CAACI,aAAa,CAACI,gBAAD,CAAd,CAAR;AACD,GAHD,CAGE,OAAON,GAAP,EAAY;AACZF,IAAAA,QAAQ,CAACK,aAAa,EAAd,CAAR;AACD;AACF,CARM;AAUP,OAAO,MAAMK,aAAa,GAAGlB,YAAY,CAAC,gBAAD,CAAlC","sourcesContent":["import { createAction } from 'redux-actions';\nimport * as api from '../../API/auth';\n\nexport const signUpRequest = createAction('SIGN_UP_REQUEST');\nexport const signUpSuccess = createAction('SIGN_UP_SUCCESS');\nexport const signUpFailure = createAction('SIGN_UP_FAILURE');\n\n// регистрация\nexport const signUp = (newUserData, formik) => async (dispatch) => {\n  dispatch(signUpRequest());\n  try {\n    await api.signUpProcess(newUserData, formik);\n    dispatch(signUpSuccess());\n  } catch (err) {\n    dispatch(signUpFailure());\n  }\n};\n\nexport const signInRequest = createAction('LOG_IN_REQUEST');\nexport const signInSuccess = createAction('LOG_IN_SUCCESS');\nexport const signInFailure = createAction('LOG_IN_FAILURE');\n\n// авторизация\nexport const signIn = (userData, formik) => async (dispatch) => {\n  dispatch(signInRequest());\n  try {\n    const responseUserData = await api.signInProcess(userData, formik);\n    dispatch(signInSuccess(responseUserData));\n  } catch (err) {\n    dispatch(signInFailure());\n  }\n};\n\nexport const logOutSuccess = createAction('LOGOUT_SUCCESS');\n"]},"metadata":{},"sourceType":"module"}