{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stalk\\\\jm-blog-platform\\\\src\\\\components\\\\articles-list\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport * as actions from '../../redux/actions/articles';\nimport { renderLoader } from '../../helper';\nimport { ArticlesWrapper, PaginationWrapper, ArticlesItemsWrapper } from '../../styled-components';\nimport Article from './article';\n\nconst mapStateToProps = state => {\n  const {\n    articles,\n    getArticlesState,\n    createArticleState,\n    editArticleState,\n    removeArticleState\n  } = state;\n  const props = {\n    articles,\n    isArticlesReady: getArticlesState === 'finished',\n    isRequestProcessed: getArticlesState === 'processed',\n    isNewArticleCreated: createArticleState === 'finished',\n    isArticleEdited: editArticleState === 'finished',\n    isArticleRemoved: removeArticleState === 'finished'\n  };\n  return props;\n};\n\nconst actionCreator = {\n  getArticles: actions.getArticles,\n  refreshArticles: actions.refreshArticles\n};\n\nconst ArticlesList = props => {\n  const {\n    getArticles,\n    articles,\n    isArticlesReady,\n    isRequestProcessed,\n    isNewArticleCreated,\n    refreshArticles,\n    isArticleEdited,\n    isArticleRemoved\n  } = props;\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const [currentPageSize, setPageSize] = useState(5);\n\n  const getArticlesRequest = async () => {\n    await getArticles();\n  };\n\n  const renderArticles = (pageNumber, pageSize) => {\n    const from = pageNumber * pageSize - pageSize;\n    const to = pageNumber * pageSize; // показываем по 5 постов\n\n    const currentArticlesArray = Array.from(articles).slice(from, to);\n    return /*#__PURE__*/React.createElement(Article, {\n      articles: currentArticlesArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const handleOnChangePagination = (value, pageSize) => {\n    setCurrentPageNumber(value);\n    setPageSize(pageSize);\n  };\n\n  const renderPagination = total => /*#__PURE__*/React.createElement(Pagination, {\n    size: \"small\",\n    total: total,\n    pageSize: 5 // по сколько айтемов на странице показываем\n    ,\n    showSizeChanger: false,\n    onChange: handleOnChangePagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  });\n\n  useEffect(() => {\n    // получаем посты пока они есть и убираем дублирование запроса если создан новый пост\n    if (!isArticlesReady && !isNewArticleCreated && !isArticleEdited) {\n      getArticlesRequest();\n    } // обновляем посты после создания поста / редактирования / удаления\n\n\n    if (isNewArticleCreated || isArticleEdited || isArticleRemoved) refreshArticles();\n  }, [isArticlesReady, isNewArticleCreated, isArticleEdited]);\n  return /*#__PURE__*/React.createElement(ArticlesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ArticlesItemsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, isRequestProcessed || isArticlesReady ? renderArticles(currentPageNumber, currentPageSize) : renderLoader()), /*#__PURE__*/React.createElement(PaginationWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, renderPagination(articles.length)));\n};\n\nArticlesList.propTypes = {\n  getArticles: propTypes.func,\n  articles: propTypes.arrayOf(propTypes.object),\n  isArticlesReady: propTypes.bool,\n  isRequestProcessed: propTypes.bool,\n  isNewArticleCreated: propTypes.bool,\n  refreshArticles: propTypes.func,\n  isArticleEdited: propTypes.bool,\n  isArticleRemoved: propTypes.bool\n};\nArticlesList.defaultProps = {\n  getArticles: null,\n  articles: [],\n  isArticlesReady: false,\n  isRequestProcessed: false,\n  isNewArticleCreated: false,\n  refreshArticles: null,\n  isArticleEdited: false,\n  isArticleRemoved: false\n};\nexport default connect(mapStateToProps, actionCreator)(ArticlesList);","map":{"version":3,"sources":["C:/Users/stalk/jm-blog-platform/src/components/articles-list/index.js"],"names":["React","useEffect","useState","Pagination","connect","propTypes","actions","renderLoader","ArticlesWrapper","PaginationWrapper","ArticlesItemsWrapper","Article","mapStateToProps","state","articles","getArticlesState","createArticleState","editArticleState","removeArticleState","props","isArticlesReady","isRequestProcessed","isNewArticleCreated","isArticleEdited","isArticleRemoved","actionCreator","getArticles","refreshArticles","ArticlesList","currentPageNumber","setCurrentPageNumber","currentPageSize","setPageSize","getArticlesRequest","renderArticles","pageNumber","pageSize","from","to","currentArticlesArray","Array","slice","handleOnChangePagination","value","renderPagination","total","length","func","arrayOf","object","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport * as actions from '../../redux/actions/articles';\nimport { renderLoader } from '../../helper';\nimport {\n  ArticlesWrapper,\n  PaginationWrapper,\n  ArticlesItemsWrapper,\n} from '../../styled-components';\nimport Article from './article';\n\nconst mapStateToProps = (state) => {\n  const {\n    articles, getArticlesState, createArticleState, editArticleState, removeArticleState,\n  } = state;\n\n  const props = {\n    articles,\n    isArticlesReady: getArticlesState === 'finished',\n    isRequestProcessed: getArticlesState === 'processed',\n    isNewArticleCreated: createArticleState === 'finished',\n    isArticleEdited: editArticleState === 'finished',\n    isArticleRemoved: removeArticleState === 'finished',\n  };\n\n  return props;\n};\n\nconst actionCreator = {\n  getArticles: actions.getArticles,\n  refreshArticles: actions.refreshArticles,\n};\n\nconst ArticlesList = (props) => {\n  const {\n    getArticles, articles, isArticlesReady, isRequestProcessed,\n    isNewArticleCreated, refreshArticles, isArticleEdited,\n    isArticleRemoved,\n  } = props;\n\n  const [currentPageNumber, setCurrentPageNumber] = useState(1);\n  const [currentPageSize, setPageSize] = useState(5);\n\n  const getArticlesRequest = async () => {\n    await getArticles();\n  };\n\n  const renderArticles = (pageNumber, pageSize) => {\n    const from = pageNumber * pageSize - pageSize;\n    const to = pageNumber * pageSize;\n    // показываем по 5 постов\n    const currentArticlesArray = Array.from(articles).slice(from, to);\n\n    return <Article articles={currentArticlesArray} />;\n  };\n\n  const handleOnChangePagination = (value, pageSize) => {\n    setCurrentPageNumber(value);\n    setPageSize(pageSize);\n  };\n\n  const renderPagination = (total) => (\n    <Pagination\n      size=\"small\"\n      total={total}\n      pageSize={5} // по сколько айтемов на странице показываем\n      showSizeChanger={false}\n      onChange={handleOnChangePagination}\n    />\n  );\n\n  useEffect(() => {\n    // получаем посты пока они есть и убираем дублирование запроса если создан новый пост\n    if (!isArticlesReady && !isNewArticleCreated && !isArticleEdited) {\n      getArticlesRequest();\n    }\n\n    // обновляем посты после создания поста / редактирования / удаления\n    if (isNewArticleCreated || isArticleEdited || isArticleRemoved) refreshArticles();\n  }, [isArticlesReady, isNewArticleCreated, isArticleEdited]);\n\n  return (\n    <ArticlesWrapper>\n      <ArticlesItemsWrapper>\n        {(isRequestProcessed || isArticlesReady)\n          ? renderArticles(currentPageNumber, currentPageSize)\n          : renderLoader()}\n      </ArticlesItemsWrapper>\n\n      <PaginationWrapper>\n        {renderPagination(articles.length)}\n      </PaginationWrapper>\n    </ArticlesWrapper>\n  );\n};\n\nArticlesList.propTypes = {\n  getArticles: propTypes.func,\n  articles: propTypes.arrayOf(propTypes.object),\n  isArticlesReady: propTypes.bool,\n  isRequestProcessed: propTypes.bool,\n  isNewArticleCreated: propTypes.bool,\n  refreshArticles: propTypes.func,\n  isArticleEdited: propTypes.bool,\n  isArticleRemoved: propTypes.bool,\n};\n\nArticlesList.defaultProps = {\n  getArticles: null,\n  articles: [],\n  isArticlesReady: false,\n  isRequestProcessed: false,\n  isNewArticleCreated: false,\n  refreshArticles: null,\n  isArticleEdited: false,\n  isArticleRemoved: false,\n};\n\nexport default connect(mapStateToProps, actionCreator)(ArticlesList);\n"]},"metadata":{},"sourceType":"module"}